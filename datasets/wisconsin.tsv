220	 Rahul's Home Page Rahul Kapoor Hello Internet surfer ! Welcome to my cyber home I hope you stay here long enough to get to know me a little Officially I am in my third and final semester as a master's student in the Computer Sciences Department at the University of Wisconsin, Madison I came here in fall '95 after getting my bachelor's degree from the Indian Institute of Technology, Kanpur Interested employers please check out my resume ! Courses & Schedule My Department My University IIT Kanpur IITK Class of 1995 India related links Me Now that you have gone through the official "who I am" you may want to see the personal "who I am" Well, I am a normal kind of guy, born and raised in a small loving family(comprising of my parents and an elder sister) in a not so nice town in India called Kanpur I came to the states in fall '95 and have had the good fortune (ha !) of living in Madison, which Money magazine rated as the most livable city in US this year (the editor must have come from Greenland to think that the winter here is livable!) I guess I shouldn't complain because during fall and spring Madison is awesome During summer I was in San Jose, California working at the IBM Almaden research centre so I cannot say much about Madison summers but they are supposed to be great Anyway I don't regret not being here because I had a great time in the bay area and whatever Money magazine says I think northern California is the place to be ! And now a little about my likes I love Music(take a look at my cd collection to know what kind), Movies (almost all genres though I prefer romance and comedy), TV (most of the comedy shows, X-Files and Star Trek), Reading (any new stuff from novels to philosophy), Computers and Web-Surfing ! As far as sports are concerned, I love watching cricket (when India is playing and winning), tennis, figure skating and gymnastics This semester I am trying to learn swimming(finally !) and bridge I am a nature lover too and enjoy going on long walks and hikes(when its cloudy and slightly breezy) I wish I could get one of those jobs on television travel shows where you get to see all the interesting places in the world and get paid for it! Music Stuff Movies & Television Internet Travel Other Bookmarks To Contact Me get-to-know-you form The rest of you can contact me via : --> Guest Book rahul@ cs wisc edu H: (608)264-4143 O: (608)262-9275 	0
235	 Jeff Shabel's Home Page Cheers! Welcome to Jeff Shabel's Home Page at U of Wisconsin Cheers Theme Song ( AU 517K) I am the TA for CS/ECE 752 Office Hours: Tues 10-11AM, Thurs 2:20-3:20PM or by appointment Office: CS 1351 Personal Information Major: Computer Science (Architecture Emphasis) Status: Second-year Graduate Student View my Fall 1996 schedule Age: 23 Academic Background: Received a BS in Computer Engineering from UC San Diego in the Electrical and Computer Engineering (ECE) Department Home Town: Cupertino , CA (by San Jose ) High School: Monta Vista High School , Cupertino, CA Plans: Graduate with an MS in Computer Science in May 1997 Favorite Sports Teams: Golden State Warriors (Basketball) - San Jose Mercury News , and Nando Net San Jose Sharks (Hockey) - San Jose Mercury News , and Nando Net San Francisco 49ers (Football)- San Jose Mercury News , and Nando Net Oakland A's Favorite WWW Links: News: San Jose Mercury News Music: * Columbia House / BMG FAQ Find out how to join Columbia House under their 10-for-1/2 deal! Also tips and info on how to join these Music Clubs Miscellaneous: View / Print PostScript Documents with MS Windows! Send Mail to: jshabel@cs wisc edu 	0
123	 Rebecca Hasti's Home Page Rebecca Hasti Graduate Student/Research Assistant Computer Sciences Department University of Wisconsin - Madison 1210 W Dayton St Madison, WI 53706-1685 Office: CS 5385 E-mail: hasti@cs wisc edu Telephone: (608) 262-1079 Telephone: (608) 262-1204 (dept) To see my very first Java applet click here Fall 1996 Schedule: CS 838 (IR) T R 8:30 - 9:45 3345 Engr CS 838 (Java) T RF 1:00 - 2:15 168 Noland PL Seminar R 4:00 2310 CS MS Computer Sciences, University of Wisconsin-Madison , 1995 MA Mathematics, University of Wisconsin-Madison , 1994 BA Mathematics, Carleton College , 1990 Interests: programming languages, AI, basketball, volleyball, softball Linkage Last Updated: September 4, 1996 	0
56	 Venkatesh Ganti's Home Page Venkatesh Ganti ( vganti@cs wisc edu) Graduate Student Office #1334, Computer Sciences Department, 1210, W Dayton St MADISON, WI 53706, USA Phone : (608)-262-6606 Note: This page is under construction Past and Present I am a graduate student in CS at the University of Wisconsin,Madison from Fall 95 Earlier I had been an undergraduate student at IIT Madras,India Native of Kakinada, Andhra Pradesh Info ASHA (ASHA for basic education) ASHA-Madison India (click here to know more about India) Godav 95 homepage (my hostel at IIT Madras) Godav 95 yearbook (hope to get this online sometime) Research I am interested in Databases Most of my work till now(my BTech project) has been in Real-time databases Want to have a look at it Real-time genesis UW-Madison DB Group homepage That is all for now Last Updated : January 1st, 1996 	0
95	 Saeed's Home Page speed=250; tid = 0; function StatusClock() { window status=new Date(); tid=window setTimeout("StatusClock()",speed); } function clearid() { window clearTimeout(tid); } Hi! I am Saeed Mirza I did my B Tech from the Department of Computer Science and Engineering at Indian Institute of Technology, Kanpur Now I am a graduate student at Univ Of Wisconsin Madison in Computer Science Department My home is in Lucknow, India I like to spend my time: Listning to Indian Film Songs Netsurfing Reading Comics (My Hero Calvin) We do not love people because they are beautiful but they seem beautiful to us because we love them Contact me Home Office 7 N Randall Av , Apartment #1, Madison, WI-53715 3310, Comp Sc Department, Univ Of Wisconsin Madison, 1210 W Dayton Street, Madison, WI-53706 (608) 250-0227 (608) 262-1721 OR Contact me best via email at saeed@cs wisc edu Some of my friends contact who are the right of IIT Some pictures of Wismad For suggestions send to me Check out my guestbook This page has been accessed times since Oct 1 1996 Last updated 1996 Saeed&copy All rights reserved 	0
213	 Eric's Home Page "Passsth me another cold Budweisther !!" Address Computer Sciences Department University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 Department of Electrical and Computer Engineering University of Wisconsin - Madison 1415 Johnson Drive Madison, WI 53706 Office 3652 ECE Phone (608) 265-3826 E-mail ericro@cs wisc edu Research Area Computer Architecture Advisor Professor J E Smith Research Topics Kestrel (Multiscalar) Project Instruction-Level Parallelism (ILP) High Bandwidth Instruction Fetch Mechanisms Branch Prediction Confidence, Branch Mispredict Tolerance Publications: "Trace Cache: a Low Latency Approach to High Bandwidth Instruction Fetching" , Eric Rotenberg, Steve Bennett, and James E Smith, To appear in Proceedings of the 29th Annual International Symposium on Microarchitecture , December 1996 "Assigning Confidence to Conditional Branch Predictions" , Erik Jacobsen, Eric Rotenberg, and James E Smith, To appear in Proceedings of the 29th Annual International Symposium on Microarchitecture , December 1996 "Trace Cache: a Low Latency Approach to High Bandwidth Instruction Fetching" , Eric Rotenberg, Steve Bennett, and James E Smith, University of Wisconsin - Madison Technical Report #1310, April 1996 Resume 	0
122	 Steve Reinhardt's Home Page Steven K Reinhardt I'm a graduate student in computer architecture , working in the Wisconsin Wind Tunnel group My advisor is David Wood , although the other PIs of the WWT project, Mark Hill and Jim Larus , often feel free to tell me what to do as well I'm planning on finishing this fall I will be joining the faculty of the University of Michigan EECS department in January 1997 If you're interested, you can find out more on these pages: Publications Research Summary email: stever@cs wisc edu (click here to finger) phone: (608) 262-0664 Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706-1685 USA Last Updated: June 6, 1996 	0
232	 Karthik's Web Page Karthikeyan Ramasamy About I am a Ph D student at the Computer Sciences Department of University of Wisconsin My research interests are mostly in Database and Operating Systems I work with Jeffrey Naughton in the Paradise project Projects Hacking for David Dewitt and Jeffrey Naughton Web DB Connectivity Paradise Parallel Database Wisconsin PTHREAD Wrappers Publications Storage Estimation for Multidimensional Aggregates in the Presence of Hierarchies Amit Shukla, Prasad M Deshpande, Jeffrey F Naughton and Karthikeyan Ramasamy 22nd International Conference on Very Large Databases, Mumbai(Bombay), 1996 Available here (255 KB) Presentations Web - The Big Picture Architecture Alternatives for Scalable Web Servers Photo Album Encounter with the Leaf Personal Info Resume Finance MONEY Wall Street Journal Personal Interests Hacking Photography Contact Information Street address 1210 W Dayton, Computer Sciences Department, Madison, WI 53706 Electronic mail address karthik@cs wisc edu Office phone 608-262-6625 FAX number 608-262-5777 Comments and Suggestions Please tell me what you think about my home page and how I might improve it 	0
185	 Kevin Beyer's Home Page Kevin S Beyer beyer@cs wisc edu (caution: men at work ) Graduate Student and Research Assistant Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA (608) 262-6607 Advisor: Raghu Ramakrishnan Area of Interest: Database Research Research Projects: Coral C O D (local only) Course Information: Projects Graduate Courses Undergraduate Courses Instructing: CS 302 ( beyer@cs wisc edu ) Mon May 23 20:07:07 CDT 1994 	0
106	 Tina Eliassi-Rad's Home Page Tina Eliassi-Rad MS, University of Illinois, Urbana-Champaign, 1995 BS, University of Wisconsin, Madison, 1993 Office: 6357 CS Bldg Phone: 262-7784 eliassi@cs wisc edu 	0
105	 Weiru's Home Page W eiru's home page Send me an email , pppplease! Find out if I am around " Sometimes I think all the English speakers should be committed to an asylum for the verbally insane In what language do people recite at a play and play at a recital Ship by truck and send cargo by ship Have noses that run and feet that smell " -- Richard Lederer " There are three possible parts to a date, of which at least two must be offered: entertainment, food, and affection It is customary to begin a series of dates with a great deal of entertainment, a moderate amount of food, and the merest suggestion of affection As the amount of affection increases, the entertainment can be reduced proportionately When the affection IS the entertainment, we no longer call it dating Under no circumstances can the food be omitted " -- Miss Manners' Guide to Excruciatingly Correct Behaviour The universities I've been to Peking University my friends from Physics Department 88 and Alumni Association at Madison This is the university I am at now World of little grey cells cs739 cs737 picture from the universe The Game of Go Entertainment and Art Late Show With David Letterman and other CBS shows Universal Studios Wish to send a postcard to someone Movie World and Movie Reviews My favorite hockey player Steve Francais Dictionnaire Francais-Anglais Dictionnaire Softwares Relatifs a la Francophonie Test de grammaire Francaise Web French lessons Weather forecast for Madison Last Updated On: Tue Feb 20 10:44:28 CST 1996 	0
136	 Manuvir's Home Page Manuvir Das Now that you know what my name is and what I look like , hello Feel free to look around, and if you need more information about something send me some email If, like me, you have a passion for Golf, here's an action photo Later, - Manuvir What should you know about me What should you know about in general Let's start with my advisor (better say this to keep the money coming!) With that out of the way, let's turn to the original America's Team And of course, the league they play in For days other than Sunday, a round or two of Golf And finally: when you say Wis-consin, you've said it all! manuvir@cs wisc edu 	0
40	 Shilpa Lawande's Home Page Welcome to Shilpa Lawande's Home Page I am a Graduate Student in the Department of Computer Science at University of Wisconsin-Madison Personal Stuff A link to my past For more info on what I do at school Here's my resume in HTML and ascii Computer Science, my second love ;-) Useful CS resourses : all the stuff you wanted in one place! Systers : Women in Computer Science Stuff related to Madison Surf Madison State of Wisconsin, Information Server The Hoofer Sailing Club Owls, music, books, movies, java etc :-) Shilpa's signatures Meet my first love Snowy's HomePage Cool Links Here is where I can be fingered Three judge panel in Philadelphia votes 3-0 that the CDA is not Constitutional Follow the link to read the decision This page has been accessed times since June 20 1996 Send comments and suggestions by email to ssl@cs wisc edu or shilpal@cs wisc edu or thru' the guest form Last Modified : July 29,1996 	0
57	 Nathan Bockrath - Graduate Student Nathan Bockrath Teaching Assistant Graduate Student Average Joe A picture of Nate 23Kb, jpeg To send me EMail click here: bockrath@cs wisc edu My CS 132 D Sections Both Sections are held in B204 Section 301: 7:45 am - 8:45 am MWF Section 302: 8:50 am - 9:50 am MWF GRADES QUIZ REVIEWS Virus Info The Word Macro Virus How to make WWW Pages Office Hours: In CS 3310 (Where is 3310, Anyway ) Monday 10:00 am - 11:00 am Wednesday 10:00 am - 11:00 am My Schedule Distributed Systems 1:00 pm - 2:15 pm MWF in CS 1263 Simulation and Modeling 2:25 pm - 3:40 pm MWF in CS 1325 SUPPORT FREE SPEECH ONLINE!!! For more Info go to this Site I'm Having ANOTHER one of THOSE Days!!! --> Back to the CS 132 D Home Page Back to the CS Department Home Page Other Neat Stuff The Condor Project The Internet Oracle Send Comments To: bockrath@cs wisc edu 	0
76	 Igor Ivanisevic's Home Page I gor I vanisevic This is me working on my newest project (disclaimer: I am not an alien nor do I speak for any aliens in particular) Needless to say this page is under construction (if I ever feel like actually constructing it) but I already have 2 links and an e-mail up! Research Interests: Robotics, Vision Stuff, AI in general Graduate Slave at: University of Wisconsin CS Department Was an undergrad at: Drake University CS/Math Department Address: Computer Sciences Department University of Wisconsin 1210 West Dayton Street Madison, WI 53706 Office: CS&S 1304 Phone: (608) 262-6601 Home Phone: (608) 256-0816 E-mail: iigor@cs wisc edu iigor@cs wisc edu 	0
239	 Jin Zhang's Home Page Hello! My name is Zhang, Jin (�Ž�) This picture was taken when I was invited to have supper in the 11th restaurant of Tsinghua University by Chen Weihai and Wang Tong University of Wisconsin-Madison Department of Computer Sciences 1210 West Dayton Street, #1345 Madison, Wisconsin 53706 	0
62	 Michael Birk's Home Page Michael Birk's Home Page CS302 Section 12 CS110 Section 7 Project List home page Programming Languages Links AllTraxx home page mbirk@cs wisc edu 	0
33	 Sridevi's Home Page My home ! Sridevi Bhamidipati University of Wisconsin-Madison Computer Sciences Department 1210, W Dayton Street, #1351 Madison , WI 53706 Office: 608-263-1938 bsri@cs wisc edu Spring Courses CS 764 CS 752 TA Info -- CS 577 Office: 1351 CS & S Hours: W 11:00-12:30 Optional Problem Sessions My bookmarks times since Jan 8, 1997 --> 	0
168	 Shannon Lloyd's Home Page Shannon Lloyd Work Address University of Wisconsin -- Madison Computer Science Department 1210 West Dayton Street Madison, WI 53706 608-263-1938 lloyd@cs wisc edu TA Responsibilities CS 132 Using Computers -- Lectures 3 &amp; 4 Lab sections (1366 Comp S&amp;St) 354 5:20 - 6:35 pm TH 356 6:40 - 7:55 pm TH Office hours (1351 Comp S&amp;St) Wednesday 12:00 - 1:00 Thursday 11:00 - 12:00 or by appointment Fall 1996 courses CS 701 Construction of Compilers (9:30 - 10:45 TH) CS 771 (545) Computational Linguistics (1:20 - 3:15 MWF) Various other links Women in Computer Science University of Utah Department of Chemistry University of Utah Department of Computer Science Personal Engineering Career Services Computation and Language Archive Computational Linguistics Natural Language Processing UW Artificial Intelligence Cognitive and Linguistic Science xsoft lexdemo 	0
12	 Rajesh Raman's Home Page Ye Olde Homme Page Offe Rajesh Raman Rajesh Raman Computer Sciences Department 1210 West Dayton Street Madison, WI 53706-1685 Email: raman@cs wisc edu Telephone: (608) 262-5386 B A , Ohio Wesleyan University , '95 Majors: Computer Science, Mathematics Minor: Music Current first year graduate student, Ph D , University of Winsonsin-Madison Department of Computer Science Personal: My Curriculum Vitae (Postscript) Specifications Current Courses: CS 552: Computer Architecture Saluja CS 737: System Performance Evaluation and Modeling Livny CS 739: Distributed Systems Cao Information on: Current work: Other: Team member, Condor project Integral part of The Committee My bookmarks What a chimera, then, is man! What a novelty, what a monster, what a chaos, what a subject of contradiction, what a prodigy! A judge of all things, feeble worm of the earth, depositary of the truth, cloaca of uncertainty and error, the glory and the shame of the universe! --Blaise Pascal (1623-1662) Last Modified by Rajesh Raman, Wed Oct 16 19:07:24 CDT 1996 raman@cs wisc edu 	0
68	 Andreas Moshovos's Home Page Andreas Moshovos Research Assistant Department of Computer Sciences University of Wisconsin-Madison Advisor: Guri Sohi Groups: Multiscalar (Wisconsin Kestrel), UW-CS Computer Architecture Address Leave me a note See if I'm around Want to peek into the future Then click here My brother writes poetry, click here for a sample of his work I'm currently working on: Data Dependence Speculation for OOO processors Download technical report here (compressed postscript) or here (uncompressed postscript) Download talk slides here Load Balancing on Multiscalar Processors Data Speculation for OOO processors In general I'm interested in: Computer Architecture - Instruction Level Parallelism Compiler support for ILP explotation VLSI Fall '92 - Spring '93: I was a graduate student at the Courant institute of New York University I earned no degree since I transfered to Wisconsin, however, I had the opportunity to work with excellent people and to meet my wife M S (Computer Science) University of Crete - Greece , 1992 "Implementing Non-Numerical Algorithms On An Access Decoupled Architecture That Supports Software Pipelining" , Advisor: M Katevenis A short description can be found here B S (Computer Science) University of Crete - Greece , 1990 ViH a vi like editor that supports editing in greek Many, many interesting links Hellenic Resouces Network Be sure to visit this one Obtaining and Installing greek fonts Local copy of page residing at www hyper gr Devil's Dictionary! (394K) My bookmarks This is a big mess National fraud information center Usenet changes Want to send a fax for free 	0
85	 Tia Newhall Tia Newhall (newhall@cs wisc edu) Graduate Student 1210 W Dayton St Madison, WI 53706-1685 Telephone: (608) 262-6615 Research Interests: Parallel and Distributed Systems Performance Tools Scalability Analysis and Performance Prediction Java Research Group: Paradyn Advisor: Bart Miller mummy pictures from Guanajuato Last Changed: 17 August, 1995 	0
71	 Smu's Home Page of Relief and Happiness (Java, good; censorship bad) THIS IS BIG, REALLY e-mail me at jherro@cs wisc edu Some notes for my CS 132 classes There, you've made it to my home page Now you can relax Hee hee! Lets see, what would be a cool thing to put in a home page How about a picture Here, this is a picture me and my girlfriend of 4 and a half years I'm afraid its a bit dated though Its almost 4 years old itself After many years of torture this is me now After disembodyment, I became the floating head of death -- the directory that has the animation frames (a series of pictures in GIF or JPEG format, by default named T1 gif, T2 gif, ) -- number of the starting frame (1 n) -- number of the end frame (1 n) -- milliseconds to pause between images default - can be overriden by PAUSES) -- repeat the sequence -- explicit order for frames - see below Stuff about me Here is some vital information about me and how I aquired the nickname: SMU I would like to take this time to apologize for the lameness of my page Please bear with me Here are some pretty pictures of jack skellington and kermit the frog > There, those are interesting Here is something else neat This is a link to my friend Dan's homepage He writes Haiku's and he said that he was going to put some there click here to get to Dan's stuff Dan was a roomate of mine in under-grad at Notre Dame Here are some memories of that forgotten time with Dan and my roomates The cult of the Wax Hippo This is the most exploratory intervention of chaotic existence in reality Follow this link and enjoy all the benefits of a matriarchical society JOIN TODAY!! An exclusive club Hierarchy and Rules!!! What fun! These are some of my old friends Homepages Here are some semi-cool links Notre Dame's home page YAHOOOOOOOOOOOOO!!!! work This link contains the  Free Software Shack And here are a bazillion search engines in one: W3 Search Engines mpeg movie archive HERE IS A REALLY COOL LINK: A great muppet page Sounds, images and links Very cool Rachel If you want to see select cool canoe trip pictures look here There is a bout 2 2 meg of them Here they are Have fun! Canoe Pictures 	0
70	 Andrew Geery's Home Page Andrew Geery geery@cs wisc edu 1301 CS&S 1210 West Dayton Street Madison, WI 53706 (608) 262-6600 1402 Regent St Apt #304 Madison, WI 53711 (608) 255-4026 B A from UW-Madison in computer science May 1996 Currently working on M S in AI T A for CompSci 132 (Grades) My schedule Pontifications People of Interest Jacques Derrida and post-structuralism Martin Heidegger Albert Camus Jean-Paul Sartre Friedrich Nietzsche 	0
86	 Abhinav's Home Page Welcome to Abhinav Gupta's Den agupta@cs wisc edu gupta@cae wisc edu This page is under construction Graduate Student Department of Computer Science University of Wisconsin, Madison Contact via Residence Office 2016, Kendall Avenue, Apt #2, Madison, WI-53705, USA Department of Computer Sciences, 1210, W Dayton Street, #3360, Madison, WI-53706, USA (608) 232-1894 (608) 262-9275 Some other interesting links: Indian newspapers Other Stuff (CNN,MTV,Sports,etc ) You can finger me to find my whereabouts 	0
15	 Jignesh's Home Page Jignesh M Patel jignesh@cs wisc edu Welcome! Research Assistant Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison , WI 53706-1685 Telephone: (608) 262-6625 Advisor: David DeWitt Research Interests: GIS systems, parallel database systems and object-relational databases Currently working on the Paradise project Publications Related to Paradise Client-Server Paradise : Paper published in VLDB 1994 Partition Based Spatial Merge Join : To be published in SIGMOD 1996 Other Publications Accurate Modeling of the Hybrid Hash Join Algorithm : Paper published in SIGMETRICS 1994 Miscellaneous stuff: Virtual Tourist Inline Skating IT-BHU home page Madhuri dey dey, Kashmir ley ley My bookmarks 	0
104	 Milo M Martin's Home Page Milo M Martin ( milo@cs wisc edu ) Graduate Student and Teaching Assistant Computer Sciences Department University of Wisconsin-Madison 1210 West Dayton Street Madison , WI 53706-1685 USA Email: milo@cs wisc edu Office: CS&St 1301 Office Phone: (608) 262-6600 Office Hours: 2:45-3:45 pm, Tuesday/Thursday or by appointment BA, Computer Science , Gustavus Adolphus College , 1996 Classes CS701: Compiler Construction - Charles N Fischer CS752: Advanced Computer Architecture I - Mark D Hill CS838: Java! (only sitting in) - Mark D Hill and James Larus Teaching CS302: Algebraic Language Programming (C++) - Section 4 Research Interests I am a first year PhD student interested in programming languages , architecture , and systems Specifically I am interested in: Compiler (optimization) technology and how it will be influenced by hardware and operating systems advances Mobile programming (such as Java) and what additional challenges this presents to compilers, architecture and operating system designers Many, many other things, many of which I don't even know that I am interested in yet Publications Research performed summer 1994 and 1995 at Argonne National Laboratory , Technology Development Division , under the advisement of Charles L Fink: C L Fink, P G Humm, M M Martin , and B J Micklich, Evaluation of Few-view Reconstruction Parameters for Illicit Substance Detection Using Fast-Neutron Transmission Spectroscopy , IEEE Nuclear Science Symposium and Medical Imaging Conference (1995) C L Fink, B J Micklich, T J Yule, P G Humm, L Sagalovsky, and M M Martin , Evaluation of Neutron Techniques for Illicit Substance Detection , Nucl Inst Meth B99, 748-752 (1995) Un-Publications Research performed during the 1995-96 school year at Gustavus Adolphus College , under the advisement of Max Hailperin Milo M Martin and Max Hailperin, Programming Language Flexibility and Deterministic Dynamic Parallel Computation, Senior Honors Thesis, Mathematics and Computer Science Department, Gustavus Adolphus College ( dvi or postscript ) Computing Interests Java! - Other java resources NeXT Software - Once NeXT Computer, now a software only company ACM - ACM (founded 1947) is an international scientific and educational organization dedicated to advancing the art, science, engineering, and application of information technology, serving both professional and public interests by fostering the open interchange of information and by promoting the highest professional and ethical standards (A direct quote from their web page) Personal Interests NFL Football - I am a big NFL football fan Since I lived in Minnesota for over 20 years, my favorite team is the Minnesota Vikings (Even though I now live in the land of cheese heads ) Colonize and Conquer is a multi-player play-by-e-mail space exploration and combat game which I wrote Babylon 5 - The best show on TV (IMHO) Atlantis 3 0 - Atlantis is a play-by-email game set in the mythical world of atlantis Players build armies, engauge in trade, explore lands, fight each other and wondering monsters, train wizards, discover the underworld Right now there are 200+ players, of which I am one Rules Current list of players Ultimate Frisbee - UPA (The Ultimate Players Association) - ``Ultimate combines elements of soccer, football and basketball in a fast-paced game, played with a frisbee, where everyone is a quarterback and everyone is a receiver '' (A direct quote from the UPA home page) Ultimate in ten simple rules Milo M Martin ( milo @ cs wisc edu ) 	0
77	 Tian Zhang's Home Page Tian Zhang General Information Ph D Student and Research Assistant Advisor: Prof Raghu Ramakrishnan and Prof Miron Livny (joint) Major Concentrations: Database, Artificial Intelligence, Compiler Minor: Financial Investment and Banking Office: Room 7358 Computer Sciences Dept Univ of Wisconsin - Madison Madison , Wisconsin 53706-1685 E-mail: zhang@cs wisc edu Office Telephone: (608) 262-6623 Home Telephone+Fax+Ans : (608) 238-7168 Department Fax: (608) 262-9777 Research Interests There is a growing need for exploratory analysis of very large datasets to discover useful patterns, and data mining is the new territory developed for this purpose I am very interested in designing new efficient data mining algorithms or tools for very large databases by integrating the techniques of databases , artificial intelligence and statistics My Ph D thesis topic is on clustering and density analysis of very large datasets That is, given a very large multi-dimensional dataset, and a limited amount of resources (e g , running time and memory), design and implement algorithms to efficiently and accurately (1) identify the sparse and crowded regions (clustering analysis), (2) estimate the density function of the overall data distribution (density analysis) They are very important and practical branches of data mining, and can be applied to many domains such as, data classification, image compression and pattern recognition Recent Research Project BIRCH : An Efficient Data Clustering and Density Analysis System for Very Large Databases Selected Publications Data Clustering System BIRCH and Its Applications (Tian Zhang, Raghu Ramakrishnan, Miron Livny), submitted to Data Mining and Knowledge Discovery Journal, June, 1996, U S A BIRCH: An Efficient Data Clustering Method for Very Large Databases (Tian Zhang, Raghu Ramakrishnan, Miron Livny), in Proc of ACM SIGMOD Int'l Conf on Data Management, June 1996, Canada Interactive Classification of Very Large Datasets with BIRCH (Tian Zhang, Raghu Ramakrishnan, Miron Livny), in Proc of Workshop on Research Issues on Data Mining and Knowledge Discovery (in cooperation with ACM-SIGMOD'96), June 1996, Canada Fast Density and Probability Estimations Using CF-Kernel Method for Very Large Databases (Miron Livny, Raghu Ramakrishnan, Tian Zhang), Technical Report, July, 1996 Motion Planning of Multi-joint Robotic Arm with Topological Dimension Reduction Method (Bo Zhang, Ling Zhang, Tian Zhang), in Proc of 11th Int'l Joint Conference on Artificial Intelligence (IJCAI'89), Aug 1989, U S A A Findpath Algorithm for a Manipulator by Finite Division of Configuration Space (Bo Zhang, Jianwei Zhang, Ling Zhang, and Tian Zhang), in Robotics and manufacturing: recent trends in research, education, and applications: Proc's of Int'l Symposium on Robotics and Manufacturing: Research, Education, and Applications, v 2, 1988, U S A Motion Planning for Robots with Topological Dimension Reduction Method (Bo Zhang, Tian Zhang, Jianwei Zhang, and Ling Zhang), in Journal of Computer Science and Technology, v 5, no 1, Jan 1990, P R C Finding Collision-Free Paths for Mobile Robots (Tian Zhang, and Bo Zhang), in Proc of 1st Int'l Symposium for Young Computer Professionals, Aug 1989, Beijing, P R C Relevant Links Technical Documents Journals, Conferences, Organizations Beijing, China Other Interests Last Updated: Sep 26, 1996 	0
90	 Sid's Page Sid's Page Name: Sidney J Hummert Office: CS 1307 Phone: 262-6602 (office) Email: hummert@cs wisc edu A postscript version of my resume Some pictures Click here to go to my cs110 page 	0
202	 Chris Weaver, Studentis Graduatus Chris Weaver Email: weaver@cs wisc edu Office: 1302 Computer Science Office Phone: (608)262-6600 Office Hours: MW 400-500, R 400-600, and by appointment Studentis Graduatus (Common Fool) Classes CS640 Introduction to Computer Networks Landweber 800-915 MWF 1221 CS CS739 Distributed Systems Cao 100-215 MW 1263 CS Teaching CS302 Algebraic Language Programming in C++ Section 16 955-1045 MWF 119 Noland Section 17 1100-1150 MWF 119 Noland Office Hours MW 400-500, R 400-600, and by appt 1302 CS Other Dolphins Bookmarks Oblivion --> Please Don't Feed the Grad Students EvangeList Moonlighting in the DoIT Showroom Biographical information Chris Weaver , Computer Sciences Department , University of Wisconsin-Madison Last Change: 11/1/96 by Chris Weaver 	0
120	 PSB Home Page !--> Paul Bradley Graduate Student Computer Sciences Department University of Wisconsin-Madison paulb@cs wisc edu Office: 6390 CS Phone: 608 262 6619 Advisor: O L Mangasarian Interests Mathematical Programming Machine Learning Fly-Fishing I am interested in using mathematical programming techniques (specifically nonlinear and linear programming) in inductive learning For a summary of the work that has been and is currently being done in this area at the University of Wisconsin, please see UW Madison Mathematical Programming page This work is guided by Professor Olvi Mangasarian and Nick Street !--> Publications All papers are stored in postscript format, abstracts are ASCII text If you do not have a postscript viewer, you can download the file (e g shift-click, if you're using Netscape) and print it P S Bradley, O L Mangasarian, and W N Street Feature selection via mathematical programming Mathematical Programming Technical Report 95-21, Computer Sciences Department, University of Wisconsin, Madison, Wisconsin, December 1995 - Revised March 1996 Submitted to INFORMS Journal on Computing ( abstract ) P S Bradley, O L Mangasarian, and W N Street Clustering via concave minimization Mathematical Programming Technical Report 96-03, Computer Sciences Department, University of Wisconsin, Madison, Wisconsin, May 1996 Accepted for presentation Neural Information Processing Systems 1996 ( abstract ) Nick Street and I at work Paul's Picks These are some sites: Backcountry Page Grateful Dead NASA JPL Wisconsin Fly Fishing Frogs ESPNET NY TimesFAX URoullette !--> Last modified: Thu Jul 6 11:04:45 1995 by Paul Bradley paulb@cs wisc edu 	0
139	 Kirk Hogenson Kirk Hogenson Graduate Student Computer Sciences Department University of Wisconsin - Madison 1210 W Dayton St Madison, WI 53706 Office: CS&amp;S 6387 E-mail: hog@cs wisc edu Telephone: (608) 262-5083 I am Kirk Hogenson I am a graduate student at the UW-Madison in Madison , Wisconsin I am in the UW-CS Department I'm the TA for CS310 , Sections 304 and 305 My office hours are: Tues 11:00 - 12:30 Wed 3:30 - 5:00 You can also look at my schedule If none of my office hours work out for you, e-mail me and we'll try to set up an appointment for some other time Here is what you can do: finger me Send me some mail Visit Ghana , the country I was in while serving in the Peace Corps Why is my username hog Check out the PNHP Student Group page, maintained by my wife, Eiluned I'm experimenting with The Web Counter It says I've been accessed times since 8/27/96 --> Last Updated: Sep 2, 1996 	0
2	 Brian Morgan's Home Page Brian Morgan Graduate Student Computer Sciences Department University of Wisconsin-Madison 1210 West Dayton Street Madison, WI 53706 E-mail: morgan@cs wisc edu Telephone: (608) 262-6609 Fax: (608) 265-2635 Advisor Chuck Dyer Research Interests Virtual conferencing systems, image compression, video conferencing, high bandwidth networking Related Links of Interest Wisconsin Computer Vision Group 	0
81	 Nick's Page Nick's Page Office: CS 1349 Phone: 262-5340 Email: leavy@cs wisc edu Office hours: Tuesday 1:00 - 2:00, Wednessday 2:30 - 3:30 	0
69	 Vijay's Home Page --> T N Vijaykumar ( vijay@cs wisc edu ) Professional: Affiliation: Computer Sciences Department , University of Wisconsin-Madison Contact: Address: Computer Sciences Department, 1210 W Dayton Street, Madison , WI 53706 Phone: 608-262-6587, Fax: 608-262-9777, Email: vijay@cs wisc edu Advisor: Guri Sohi Project: The Multiscalar Project Education: Doctorate: University of Wisconsin-Madison , August 1997 Undergraduate: Birla Institute of Technology and Science, Pilani , India, 1990 Research: Compiling for the Multiscalar Architecture (Ph D Dissertation) Distributed Register File Design The Anatomy of the Register File in a Multiscalar Processor, S Breach, T N Vijaykumar, and G S Sohi, 27th Annual International Symposium on Microarchitecture (MICRO-27), 1994 Compiling Register Communication Register Communication Strategies for the Multiscalar Architecture S Breach, T N Vijaykumar, and G S Sohi, Submitted to 29th Annual International Symposium on Microarchitecture (MICRO-29), 1996 Multiscalar Processors Multiscalar Processors, G S Sohi, S Breach, and T N Vijaykumar, 22th International Symposium on Computer Architecture, 1995 Scheduling Register Communication Compiling Register Communication for the Multiscalar Architecture T N Vijaykumar, and G S Sohi, On going work Memory Data Dependence Prediction Personal: My other side ! 	0
170	 Gareth Bestor's Home Page Welcome to Gareth Bestor's Home Page Gareth S Bestor Dissertator and Teaching Assistant Computer Sciences Department University of Wisconsin-Madison 1210 West Dayton Street Madison, WI 53706-1685, U S A Telephone: (608) 262-6601 Fax: (608) 262-9777 E-mail: bestor@cs wisc edu (click here for finger) World-Wide-Web: http://www cs wisc edu/~bestor Systems Administrator Data and Program Library Service 1180 Observatory Drive Madison, WI 53705, U S A Telephone: (608) 262-7962 E-mail: bestor@dpls dacc wisc edu Education: M S Computer Sciences , University of Wisconsin-Madison , 1991 B Sc (honors) Computer Science , Massey University , New Zealand, 1989 B Sc Computer Science , Massey University , New Zealand, 1988 Curriculum Vitae (PostScript) Resume (PostScript) Graduate Coursework (PostScript) Dissertation Research Title: Structure from Motion: the Inverse Projection Problem Abstract: An important problem in computer vision is recovering the 3-D structure of a scene and the position of the observer within it from one or more projected 2-D images This is essentially the inverse projection problem Existing Structure-From-Motion (SFM) techniques solve this problem by examining multiple images projected from a rigid scene However SFM has not been used extensively in practice because these techniques are very sensitive to noise, do not accurately model optical projection, or restrict the position of the observer and/or the structure of the scene My research uses a new technique for solving the inverse projection problem called the Concurrent Projector Model which makes no assumptions about the scene other than it is rigid and no assumptions about the position of the observer This technique uses a projector based model of projection instead of the camera based model traditionally used in SFM As a result, the algorithm is defined for any geometric transformation in any dimension, not just 3-D perspective projection For a given transformation and dimension the algorithm identifies when the inverse projection problem is under-constrained and specifies the minimum number of points and images required to solve it The Concurrent Projector Model can also examine additional points and images to minimize the types of projection errors that occur in real-world applications by allowing the projectors to approximately intersect This technique is currently being applied to the problem of robot navigation and exploration to both determine the position of a robot in an unknown environment and at the same time to map this environment Advisor: Prof Charles R Dyer Research Interests: Computer and machine vision, vision-based robot navigation and exploration, 3-D computer graphics, virtual reality Artificial Intelligence Group Computer Vision Group Machine Learning Research Group Robotics Lab Teaching Duties for Spring 1995-96 CS 110 Introduction to Computer Programming : Sections 1 and 2 (FORTRAN) CS 110 is a one-credit course which covers the basic programming structures needed to prepare students for CS 310 and elementary engineering courses No prior computer programming experience is required and only a basic knowledge of computers is assumed The material covered enables students to write simple computer programs to solve engineering problems in elementary courses All programming is done in FORTRAN This course is intended for students who received little or no programming instruction in high school These sections are taught entirely in the FORTRAN programming language and are intended primarily for engineering students and non-computer science majors CS 110 Sections 1 and 2 Home Page CS 302 Algebraic Language Programming : Section 70 (FORTRAN) Construction of algorithms; problem solving; instruction and experience in the use of at least one procedure-oriented language (e g , Pascal or Fortran); survey of other such languages, advanced programming techniques Prereq: Advanced high school mathematical preparation or some college work in mathematics, statistics or logic; or consent of instructor Open to Fr This section is taught entirely in the FORTRAN programming language and is intended primarily for engineering students and non-computer science majors CS 302 Section 70 Home Page Other Pointers of Interest Computer Sciences Department Home Page University of Wisconsin-Madison WiscINFO Home Page Information about New Zealand UW Hoofer Outing Club NEXTSTEP and NeXT Software, Inc Starting Points for Internet Exploration Lycos (search the World-Wide-Web by keyword) Copyright &copy 1996 Gareth S Bestor ( bestor@cs wisc edu ) Last modified January 30, 1996 	0
238	 Jie-Bing Yu's Home Page Jie-Bing Yu Index: General Information | Education | Advisor | Research Interests | Research Projects | Publications | Pointers | Hobbies General Information Research Assistant Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison , WI 53706 Tel: (608) 262-6622 Fax: (608) 262-9777 jiebing cs wisc edu Education Ph D M S (Computer Science) University of Wisconsin - Madison , 1993 Advisor Prof David DeWitt Research Interests Tertiary Storage Support for DBMS Parallel Database Management Systems Object-Oriented Database Management Systems Geographic Information Systems Research Projects Paradise SHORE Publications Building a Scaleable Geo-Spatial DBMS: Technology, Implmentation, and Evaluation (with J Patel, N Kabra, K Tufte, B Nag, J Burger, N Hall, K Ramasamy, R Lueder, C Ellman, J Kupsch, S Guo, D DeWitt, and J Naughton), Submitted for publication, October, 1996 Query Pre-Execution and Batching in Paradise: A Two-Pronged Approach to the Efficient Processing of Queries on Tape-Resident Data Sets (with D J DeWitt), Submitted for publication, October, 1996 Processing Satellite Images on Tertiary Storage: A Study of the Impact of Tile Size on Performance (with D J DeWitt), To appear in 5th NASA GOddard Conference on Mass Storage Systems and Technologies, September, 1996 Using Constraints to Query R*-Tree (with J Goldstein, R Ramakrishnan and U Shaft), A shorter version will appear in CP96 Workshop on Constraints and Databases, February, 1996 Client-Server Paradise (with D DeWitt, N Kabra, J Luo and J Patel), Proceedings of the 1994 Very Large Data Bases Conference, Santiago, Chile, September 1994 Storage Reclamation and Reorganization in Client-Server Persistent Object Store (with V Yong and J Naughton), Proceedings of the 1994 IEEE Data Engineering Conference, Houston, TX, February 1994 Pointers EOSDIS SIGMOD UW-Madison DBMS Research Group Hobbies Tennis -- TENNIS SERVER Volleyball -- VOLLEYBALLWEB White Water Rafting -- Whitewater Page Can you find me in the picture Click here for a full sized picture Last Updated: July 14, 1996 by Jie-Bing Yu (jiebing@cs wisc edu) 	0
109	 Lei Cao's HomePage 100) { seed--; var cmd="scrollit_r2l(" + seed + ")"; timerTwo=window setTimeout(cmd,50); } else if (seed 0) { for (c=0 ; c --> Welcome to Lei Cao's Home Page Under Construction --> About Me I am a first-year graduate student in the Computer Science Department here at University of Wisconsin-Madison Originally from Shanghai , China , I studied at Shanghai Jiao Tong University before I came to the States (Any SJTU alumni out there ) Currently, I am a lab consultant for CS 302 and also TA for CS 736 Life is no longer as easy as last semester, just like the weather in Wisconsin I am taking three classes and in the mean time doing a master project Here is my current schedule my resume Contact Info Home Address: 2016 Kendall Ave #2, Madison , WI 53705 Home Phone: (608)231-1560 Office: 1308 CS&S Bldg , 1210 West Dayton St , Madison Office Phone: (608)262-6002 E-mail: caol@cs wisc edu Interesting Links Entertainment Computer Related Miscellany ESPN Sportszone Pathfinder from Time Warner TV Tonite ACM SIGMOD ACM SIGCOMM CS Technical Report Search Engine Wide Area Technical Report Service Microsoft Library CND Server Yahoo Info on Stocks and Funds Internet Yellow Pages and White Pages You are visitor number since 10/6/95 --> This home page has been visited times since 2/22/1996 You are visitor number since 2/22/1996 --> Last Updated on Feburary 22, 1996 	0
41	 Babak Falsafi's Home Page Babak Falsafi Research Assistant Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA Tel: (608) 262-6618 FAX: 262-9777 email: falsafi@cs wisc edu My work here People Mentor Cult Research Interests Computer Architecture Performance Evaluation and Measurement of Computer Systems Parallel Programming Models Education MS Computer Sciences , University of Wisconsin, Madison , December 1991 BS Computer Sciences , SUNY at Buffalo , June 1990 BS Electrical and Computer Engineering , SUNY at Buffalo , June 1990 Miscellaneous Publications I would rather be drinking this I would rather be doing this I would rather be reading this I would rather be listening to this What I used to do when I was in high school When ideas you like fail When you morf Shubu with Dionosi Hillarious and profane phone conversations Check out the American/French queen! What do computer architects look like Hacking partners in crime A next generation parallel computer Last updated by babak@cs wisc edu 	0
225	 Jussi Myllymaki Jussi Myllymaki Research Assistant Computer Sciences Department University of Wisconsin 1210 West Dayton Street Madison, WI 53706-1685 telephone: (608) 262-6627 fax: (608) 262-9777 email: jussi@cs wisc edu Research Summary I am interested in the performance analysis of DBMS operations on advanced tape and disk technology, including disk and tape arrays I'm currently studying how to buffer large datasets from tertiary storage to disk and memory when such data are used for data exploration and visualization (the DEVise project) My advisor is Prof Miron Livny My recent work includes improving the performance of relational joins of large volumes of disk and tape-resident data (see publication list below), and applying a log-structured organization to tertiary storage to solve problems associated with the diverse characteristics and functional limitations of tertiary media Our recent paper on data visualization and exploration discusses data and metadata management issues when large and complex data sets are involved Refereed Publications Efficient Buffering for Concurrent Disk and Tape I/O (with Miron Livny), Proceedings of Performance '96 - The International Conference on Performance Theory, Measurement and Evaluation of Computer and Communication Systems, October 1996 Integrated Visualization of Parallel Program Performance Data (with Karen L Karavanic, Miron Livny and Barton P Miller), Proceedings of the Third Workshop on Environments and Tools for Parallel Scientific Computing , August 1996 Log-Structured Organization for Tertiary Storage (with Daniel A Ford), Proceedings of the International Conference on Data Engineering , February 1996 Also available as IBM Almaden Research Report 9941 Visual Exploration of Large Data Sets (with Miron Livny and Raghu Ramakrishnan), Proceedings of SPIE - The International Society for Optical Engineering , January 1996 Disk-Tape Joins: Synchronizing Disk and Tape Access (with Miron Livny), Proceedings of the ACM SIGMETRICS Conference , May 1995 Submitted for Publication DEVise: Integrated Querying and Visualization of Large Datasets, M Livny, R Ramakrishnan, K Beyer, G Chen, D Donjerkovic, S Lawande, J Myllymaki, and K Wenger, submitted to the 1997 ACM SIGMOD Conference Relational Joins for Data on Tertiary Storage, Jussi Myllymaki and Miron Livny, submitted to the 1997 International Conference on Data Engineering Other Publications Disk-Tape Joins: Synchronizing Disk and Tape Access (with Miron Livny), University of Wisconsin, CS Department, Technical Report 1270, 1995 Joins on Tapes: Project Report , Master's Degree Project Report, University of Wisconsin, CS Department, 1993 Applying the Client-Server Model in Computer Network Architectures , Master's Thesis, Helsinki University of Technology, Department of Industrial Management, 1991 In Finnish Other Documents Implementation and Performance Analysis of R-Tree Algorithms (with Jeff Schwarz and Yoav Weiss), class report, 1993 Experiences with Implementing a Log-Structured File System (with Trishul Chilimbi and Yoav Weiss), class report, 1992 Overview of current tape technologies and products Overview of RAID technology suppliers and products Some frequently needed links (FNL) Unified Technical Report Search Adaptec SCSI adapters ( home ) Digital Alpha Workstations and PCs and Technical Journal and Whitepapers ( home ) IBM Technology and Research and CyberJournal Quantum Digital Linear Tape and DLT FAQ and Whitepapers ( home ) Sun Solaris and SparcStations and Technical Reports ( home ) SCSI FAQ and Storage FAQ and other Usenet FAQs Many other of my links are found here jussi@cs wisc edu 	0
19	 Ranga Arvind Ranganathan About Me! My erstwhile workplace My present workplace Indiaworld The fascinating world of Escher A collection of classic papers in Computer Science Finger to see if I am logged on! Arvind Ranganathan / arvind@cs wisc edu 	0
221	 Todd M Bezenek's Home Page --> T odd M B ezenek Back when the 6502 was introduced, RAM was actually faster than CPUs -- From _Great Microprocessors of the Past and Present_ at www cs uregina ca/~bayko/cpu html ``Windows NT is an express locomotive squeezed into a skateboard-sized package '' -- Helen Custer in _Inside Windows NT_, Microsoft Press, 1993 Current Courses CS 736: Advanced Operating Systems with Bart Miller pithy adj \'pith-e\ 1 : consisting of or abounding in pith CS 899: Taking the ``Yeah, but what's the point '' out of skewed-associative caches Access Information Computer Sciences Department University of Wisconsin 1210 West Dayton Street Madison, WI 53706 Office: CS&S 1304 Phone: (608) 262-6601 Fax: (608) 262-9777 Home phone: (608) 238-6390 E-mail: bezenek@cs wisc edu bezenek@cs wisc edu 	0
125	 Guhan Viswanathan's Home Page Guhan Viswanathan ( gviswana@cs wisc edu) Graduate Student Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA Advisor: Jim Larus Thesis Research My thesis focuses on the design and implementation of data-parallel languages I have been involved in the design of C**, a data-parallel language (based on C++) developed locally I have implemented a C** compiler targeting the CM-5, and am investigating how data-parallel applications can be executed as efficiently as hand-coded parallel programs Here's a more detailed research summary Here's a list of my publications Useful links 	0
117	 David Melski's Personal Info Page David Melski Current: Department: 618 1/2 S Mills St 5390 Computer Science and Statistics Madison, WI 53715 1210 W Dayton St Madison, WI 53706 (608)259-9197 (608)262-0018 Permenant: 1136 West Ives Marshfield, WI 54449 (715)384-8282 Michelle is an awesome person Her page is currently under construction My sister Kasey has a great home page, as does my brother Eric This semester I'm teaching a couple of sections of cs302 I'm also working with Tom Reps in programming languages My exact schedule still needs to be determined As an undergrad, I majored in Computer Science and Russian Studies here at the University of Wisconsin I even spent the fall semester of '92 in Russia I don't get a chance to use my Russian very often, and I miss it a bit Someday, someday, I'll make it back My other interests include chess and soccer Recently, I've been biking a bit, too I've also been distracted from work by numerous books, and hasty rewrites of my web page Here are my I also want to put a link to mapquest I plan on stealing a lot of their maps in a second to give directions from Madison to Marshfield Last modified: Mon Sep 30 21:45:22 1996 by David Melski melski@cs wisc edu 	0
129	 Steve Seitz's Home Page Steve Seitz (seitz@cs wisc edu) Graduate Student & Research Assistant Computer Sciences Department , UW-Madison 1210 W Dayton St Madison , WI, USA 53706-1685 Telephone: (608) 262-6619 Advisor: Chuck Dyer Education: UW-Madison MS C S , 1993; UC-Berkeley BA Math, C S , 1991 Areas of Interest: Image motion analysis, image-based rendering, machine vision, computer graphics Research Projects View Morphing View Synthesis -- here is an MPEG movie showing the computed interpolation of the two images at left Click here for more examples and MPEG movies Analysis of Cyclic Motion Recent Publications Other Stuff Frequented Links Wisconsin Computer Vision Group Surreal Caching Click here for a closer look Other Seitz on the Web Last Changed: July 16, 1996 	0
203	 Todd Turnidge --> Todd Douglas Turnidge School Computer Sciences Department University of Wisconsin - Madison 1210 W Dayton St Madison, WI 53706 (608) 262-6612 Home Muppet Babylon --> 1124 Milton St Madison, WI 53715 (608) 250-0699 Eyesight Right: SPH: -5 50 CYL -1 75 AXIS 24 Left: SPH -5 50 CYL -2 00 AXIS 156 --> I am a graduate student in the Department of Computer Sciences at the University of Wisconsin, Madison I have been here for two years I am working with professor Thomas Reps studying programming languages I teach a section of cs302 I hold a BS in Mathematics and an MS in Computer Science from Case Western Reserve University , which is located in Cleveland , Ohio I am originally from Kent , Ohio My family lives there They say you can judge a man by the company he keeps Click here for enough evidence to put me away for a long time Some amusements for you Some shortcuts for me Last modified: Fri Oct 11 13:05:48 1996 by Todd Turnidge turnidge@cs wisc edu 	0
190	 Ashraf Aboulnaga's Home Page Ashraf Aboulnaga Computer Sciences Department (Room 3310) University of Wisconsin - Madison 1210 West Dayton St Madison - WI 53706 USA Phone: (608) 262-1721 E-mail: ashraf@cs wisc edu Education MS in Computer Science, Alexandria University, Alexandria , Egypt , July 1996 BS in Computer Science, Alexandria University, Alexandria , Egypt , June 1993 CS132 Info Section 319: Tue,Thu 5:20-6:35 pm View your grades Section 320: Tue,Thu 6:40-7:55 pm View your grades Office hours: Mon,Wed 4:00-5:00 pm Go to the CS132-Desautels home page Last modified: September 16, 1996 by Ashraf Aboulnaga ( finger ) 	0
45	 Ira Sharenow's Home page Ira Sharenow (iss@cs wisc edu) Teaching Assistant, CS 132 Peterson Computer Sciences Department University of Wisconsin - Madison Madison, WI 53706 Office: 3310 Computer Sciences Telephone: (608)262-1721 Office Hours for CS 132, Sections 351 and 352: Tuesdays 12:05 - 12:55 PM Thursdays 4:00 - 4:50 PM Section 351 meets TR at 1 PM Section 352 meets TR at 2:30 PM Both Classes meet in room 1366 Computer Sciences CS 132 Announcements Handouts Mother Jones profile of Ira Sharenow Recreational Site Please send me an email with your comments Last modified: Tuesday, September 24, 1996 by Ira Sharenow 	0
80	 Monasterius de Ominous Doominus Welcome to the Monasterius de Ominous Doominus Brother Richard (without the beard): Personal Haven Address after 9/2 see Office Haven Address Office Haven Address University of Wisconsin at Madison Computer Sciences Department 1210 West Dayton Street Madison, WI 53706 608-262-6602 Office Number 1308 rcarl@cs wisc edu 412 office hours: Wed 2:30-3:30 Thur 3:30-4:30 cs412 home page Current Course Load cs739 Distributed Operating Systems Monday/Wednesday 1:00 - 2:15 --- fp880 Underwater Fire Prevention Saturday 12:00 - 1:00 am --- cs757 Advanced Computer Architecture II Tuesday/Thursday 9:30 - 10:45 --- math 990 Introduction to Whole Numbers (with emphasis on the number 1) Sunday 8:00 - 9:00 pm --- eng 990 Subsurface Depository Engineering (grave digging) Monday/Wednesday/Friday 12:00 - 1:00 am The Many Shades of Brother Richard Professional --- Ominously Doomed --- Political --- Goofy --- Solitary --- Innebriated --- Vampiric --- Serious --- Nostalgic --- DJ Funky Monk --- Fellows of the Order --- If you ever need a graphic artist/desktop publisher, check out the best-> 	0
31	 Zhichen Xu's Home Page ZHICHEN XU Department of Computer Sciences 1210 W Dayton St #5388 Madison, WI 53706 Office phone: (608) 262-2542 Research Assistant Advisors: Professor James R Larus Professor Barton P Miller Award Best Paper Award 9th ACM International Conference on Supercomputing, ACM Press, July, 1995 My research interest is in the area of programming languages and performance issues in parallel and distributed systems Recently, I have been studying techniques to detect and eliminate performance bottlenecks in Distributed Shared-Memory Systems I have combined the Paradyn Performance Tool with Blizzard of the Wisconsin Wind Tunnel on both the Thinking Machine CM-5 and the Cluster of Workstations (COW) Recent Publications Fields of Interest Programming languages Environments and Tools for Parallel and Distributed Computing Network Computing Parallel and Distributed Operating System Computer Architecture Performance Evaluation and Benchmarks Places where I have studied and worked: High Performance Computing and Software Laboratory at the University of Texas at San Antonio , where I have studied and published in the area of parallel performance predictions, modeling and simulations Computer Sciences Department at Fudan University , where I have participated in several National key projects of P R China, in the area of software development environment, very high-level programming languages, and object-oriented technologies, and imcremental compilation techniques Click here for a postscript version of my cv, and here is a HTML version Interesting links Asplos7 program Journals Conferences Compilers \ Programming Language Research Chinese Novels Friends from Fudan Java API 	0
3	 Kelly's Home Page Kelly Ratliff Office: CS 3360 Phone: 262-9275 Email: kelly@cs wisc edu Last login Office hours: MW 3:30-4:30 Information for my CS 132 students My genealogy page Interesting places to visit This space under construction Stay tuned 	0
153	 Johannes Gehrke's homepage Johannes Gehrke Welcome! I am an international graduate student at the Computer Sciences Department at the University of Wisconsin-Madison My area of interest is database management systems I am working in the area of data mining under Professor Raghu Ramakrishnan This page is under construction Contact Information Publications Interesting Links Contact Information Email: johannes@cs utexas edu Office University of Wisconsin-Madison Computer Sciences Department 1210 West Dayton Street, room 3379 Madison, Wisconsin 53706-1685 (608) 263-2150 Home 706-D Eagle Heights Madison, WI 53705 (608) 233-0937 Publications I Stoica , H Abdel-Wahab , K Jeffay , S K Baruah , J E Gehrke , and C G Plaxton A Proportional Share Resource Allocation Algorithm For Real-Time, Time-Shared Systems In Proceedings of the 17th IEEE Real-Time Systems Symposium , Washington, DC, December 1996 (to appear) Here is an expanded version S K Baruah , J E Gehrke , and C G Plaxton Fast Scheduling of Periodic Tasks on Multiple Resources In Proceedings of the 9th IEEE International Parallel Processing Symposium , April 1995 Expanded version available as Technical Report TR-95-02 , Department of Computer Sciences, The University of Texas at Austin, February 1995 Johannes Gehrke 	0
162	 Stefanos Kaxiras' Home Page Stefanos Kaxiras ( kaxiras@cs wisc edu) Editor, IEEE 1596 2 Kiloprocessor Extensions to SCI Research Assistant, University of Wisconsin Research Interests and Summary Recent Publications Research Interests: Shared-memory multiprocessing & Scalable Coherent Interface ( SCI ) Cache design Aspects of Parallelism in Processor-in-Memory (or Memory-in-Processor) architectures ( Galileo ) Research Summary: In 1994 I have introduced the GLOW Kiloprocessor Extensions to SCI (a k a Hierarchical Extensions SCI) in collaboration with Jim Goodman I am now working to both examine in depth design options and develop the upcoming 1596 2 standard in colaboration with Jim Goodman, David V James and Stein Gjessing Recent Publications: The GLOW Cache Coherence Protocol Extensions for Widely Shared Data , Stefanos Kaxiras and James R Goodman To appear in Proceedings International Conference on Supercomputing, May 1996 Also as: Technical report TR-1305 Kiloprocessor Extensions to SCI , Stefanos Kaxiras To appear in Proceedings of the 10th International Parallel Processing Symposium, April 1996 Implementation and Performance of the GLOW Kiloprocessor Extensions to SCI on the Wisconsin Wind Tunnel , Stefanos Kaxiras and James R Goodman 2nd International Workshop on SCI-based High-Performance Low-Cost Computing, March 1995 Hierarchical Extensions to Cache Coherence in SCI , Stefanos Kaxiras and James R Goodman 1st International Workshop on SCI-based High-Performance Low-Cost Computing, August 1994 Hierarchical Extensions to SCI , James R Goodman and Stefanos Kaxiras University of Wisconsin, Computer Sciences Dept , TR-1235, July 1994 PSM: Software Tool for Simulating, Prototyping, and Monitoring of Multiprocessor Systems , A Stafylopatis, I Papakonstantinou, S Kaxiras Information and Software Technology 34, May 1992, pp 313-325 The automated synthesis of parallel dedicated architectures using prolog specifications , P Tsanakas, G Papakonstantinou K Pekmestzi and S Kaxiras P D COM 91, Greece, 1991 A Hardware Synthesis Methodology Using Prolog , P Tsanakas, G Papakonstantinou, S Kaxiras Microprocessing and Microprogramming 32 (1991) 307-314, North-Holland 	0
30	 Thanos Tsiolis' Home Page This site is Netscape 2 enhanced If you can read this you should consider upgrading your browser to the latest version of Netscape If that is not an option for you try this page Old Home Page 	0
43	 Welcome to Wei Zhang's Home Page I'm a first year graduate student of CS Department My hometown is Shanghai, People's Republic of China Education: 1996- ( ) MS/Ph D student in Department of Computer Science, University of Wisconsin,Madison 1990-1994 BS (NOT the other BS) of Computer Science, San Jose State University, San Jose, California 1988-1989 Department of Computer Science and Technology, Tsinghua University, Beijing, People's Republic of China Email: weiz@cs wisc edu Working Experience Contractor 01/1996 - 08/1996 Developing various information management system on different platforms The platforms included WindowsNT, Solaris and HP-UX Technologies used included OLE, Tuxedo and Pathway RSC Software Designer, Tandem Computers Corporation 06/95 - 12/95 Software Engineer, Sherpa Corporation 07/93 - 05/95 System Operator, NASA AMES Research Center 01/93 - 12/93 Hobbies Ma Jiang Bridge, the card game Table Tennis (Not Pingpong) Jogging The Ultimate Challenge Solve the Mine-Sweeper expert level puzzle within 60 seconds, WITHOUT cheating Quote of the Day The best memory management is no memory management Ackowledgement This home page is written using the framework provided by Qi Jin 	0
247	 Todd's Homepage Todd's Homepage In the fall of 1996, I will be teaching two sections of CS302 Since my area is mathematical programming, I will plug the UW Mathematical Programming pages which contain a wealth of information about mathematical programming tmunson@cs wisc edu 	0
246	 Brian Swander's Home Page Brian Swander If you think this is me Office:1345 Tel: 262-1012 Office Hours: 9:15-10:15 M, 1-2 R My Bookmarks Marks 	0
61	 Kristin's Home Page Kristin Tufte Research Assistant Computer Sciences Department University of Wisconsin -- Madison 1210 West Dayton Street Madison, WI 53706 (608) 262-6622 tufte@cs wisc edu Advisor: David J DeWitt Miscellany: HDF Information Server UW-Madison DBMS Research Group ACM SIGMOD Information Server Home Page EOS Project Science Office Last modified: Sat Oct 14 20:13:27 1995 by Kristin Tufte Kristin Tufte / tufte@cs wisc edu 	0
55	 Chandrasekar's Home Page Welcome to S Chandrasekar's Homepage &quot;Don't worry Be Happy !&quot; Present I'm a graduate student in the Department of Computer Science Past I was born on 2nd June, 1975 in Coimbatore in the southern state of TamilNadu in India I had my high school education at G R G Higher Secondary school in Coimbatore My undergraduate education was at the Indian Institute of Technology, Kharagpur majoring from the Dept of Computer Science &amp Engineering Personal Stuff Residence 2016, Kendall Avenue, Apt #2 Madison, WI 53705, USA (608)232-1894 Office Dept of Computer Science 1210, W Dayton St, #6351 Madison, WI 53706, USA (608)263-0475 Sivasankaran Chandrasekar / schandra@cs wisc edu Last updated: Oct 5, 1996 4:30pm CDT You can finger me to find my whereabouts This page has been accessed times since Oct 5, 1996 	0
209	 Amit's home page WARNING Reaching Me Protocol Office Home Email amit@cs wisc edu Snail Mail Computer Sciences Dept University of Wisconsin Madison , WI 53706 304 Princeton Ave , #2 Madison , WI 53705 Phone (608) 262-6624 (608) 236-0193 Education Working towards a PhD under the guidance of: Jeff Naughton Master of Science, Computer Sciences , Dec 1995, University of Wisconsin - Madison Bachelor of Technology, Computer Sciences and Engineering, May 1994, Indian Institute of Technology , Madras Research Interests Online Analytical Processing Query Processing Performance Evaluation Publications Storage Estimation for Multidimensional Aggregates in the Presence of Hierarchies Amit Shukla, Prasad M Deshpande , Jeffrey F Naughton , and Karthikeyan Ramasamy 22nd International Conference on Very Large Databases, Mumbai (Bombay), 1996 The paper in postscript Slides from the presentation at VLDB96 ( ppt or ps ) Interesting Links Madison Running Boston Marathon (MA) Chicago Marathon (IL) Madison Marathon (WI) New York Marathon (NY) Seattle Marathon (WA) St George Marathon (Utah) Database Related Pointers ACT-NET: Research Network on Active Databases Bibliography Server on Databases and Logic Programming Competitive Profiles - TPC, SPEC, (IDEAS International) Database Conferences Sorted by Name (University of Trier) Database Conferences Sorted by Date (SIGMOD Server) Very Large Data Bases (VLDB) Endowment Database Article Archive Massive Digital Data Systems (MDDS) Initiative Multimedia Information Sources National Industrial Information Infrastructure Protocols (NIIIP) Consortium Transaction Processing Council (TPC) TransCoop - Transaction Management Support for Cooperative Applications An OLAP Page OLAP: An Introduction (Pilot Software) Interested in helping educate needy children Look at the ASHA home page My personal page and bookmarks are also online Garfield 	0
23	 John Watrous' Home Page John Watrous ( watrous@cs wisc edu ) Computer Sciences Department University of Wisconsin - Madison 1210 W Dayton Street Madison, WI 53706 Telephone: (608) 262-6628 Publications John Watrous, On One-Dimensional Quantum Cellular Automata , Proc 36th Ann Symp Foundations of Computer Science (1995), 528-537 John Watrous, A Polynomial-Time Algorithm for the Artin-Whaples Approximation Theorem, Number Theory: Fourth Conference of the Canadian Number Theory Association (1995), 397-407 Assorted Links Quantum Computation Links Quantum Computation Archive (Stanford) Quantum Information Home Page (Oxford) Particle Beam Physics Laboratory Quantum Information Page (UCLA) Laboratory for Theoretical & Quantum Computing (Montreal) LANL Preprints Bibliographies Computer Science Bibliographies Hypertext Bibliography Project Hypatia General Reference Elements of Style Hypertext Webster Interface Roget's Thesaurus Random Links Parasol Records PlayStation Links Weather Forecast for Madison The Isthmus Daily Page Mathematical Quotation Server Mathematician Biographies Geek Site of the Day 	0
96	 Chin, Chin Tang's Home Page Chin, Chin Tang Graduate Student University of Wisconsin CS Department 1210 West Dayton Street Madison, Wisconsin USA 53706 Office: CS Bldg Rm 3310 E-mail: cchin@cs wisc edu Telephone: (608) 262-1721 Current TA assignment CS367 - Introduction to Data Structures Office Hours: Monday 9:30-10:30am / Tuesday 2:30-3:30pm / Friday 9:30-10:30am Education: MS Biochemistry, University of Wisconsin - Madison, 1996 BS Biochemistry, University of Wisconsin - Madison, 1994 cchin@cs wisc edu 	0
180	 Brian's Home Page Brian R Toonen Computer Sciences Department University of Wisconsin 1210 W Dayton Street Madison, WI 53706 Office: CS&ST 6613 Email: toonen@cs wisc edu Office Phone: (608) 262-6613 Home Phone: (608) 276-7871 Advisor: David Wood Table of Contents Interests Schedule for Summer 96 Publications Something to think about Interests Professional: Computer architecture, operating systems, compilers, high speed networks, distributed and parallel systems, security and accountability, and high performance I/O Personal: Bicycling, walking, hiking, camping, traveling, billiards, darts, home brewing, cooking, computing, electronics, and reading Schedule Monday: 15:30-16:30 WWT meeting Wednesday: 13:30-14:30 Meeting with David 15:30-16:30 BLZ/COW meeting When, Where and Why 08/09 - 08/10 Milwaukee - Brian and Heidi's wedding 08/22 - 08/23 Madison - Computer Architecture Affiliates Meeting 08/25 Chicago - Michalakes' Grill Based Viener Roast Publications Journal Articles I T Foster, B Toonen, and P H Worley, Performance of Massively Parallel Computers for Spectral Atmospheric Models, Jornal of Atmospheric and Oceanic Technology, 13(5):1031-45, 1996 (228517 bytes) J B Drake, I T Foster, J G Michalakes, B Toonen, and P H Worley, Design and Performance of a Scalable Parallel Community Climate Model, Parallel Computing, December, 1995 (255024 bytes) Proceedings Papers P H Worley, I T Foster, and B Toonen, Algorithm comparison and benchmarking using a parallel spectral transform shallow water model, in Proccedings of the Sixth Workshop on Parallel Processing in Meteorology, eds G -R Hoffmann and N Kreitz, World Scientific, Singapore, 1995, pp 277-289 (124793 bytes) J B Drake, I T Foster, J J Hack, J G Michalakes, B D Semeraro, B Toonen, D L Williamson, and P H Worley, PCCM2: A GCM adapted for scalable parallel computers, in Proceedings of the Fifth Global Change Symposium, American Meteorological Society, 1994, pp 91-98 (258657 bytes) I T Foster and B Toonen, Load balancing algorithms for climate models, in Proceedings of the Scalable High Performance Computing Conference, eds J J Dongarra and D W Walker, IEEE Computer Society Press, 1994, pp 674-681 (607260 bytes) Technical Reports P H Worley and B Toonen, A users' guide to PSTSWM, ORNL Technical Report ORNL/TM-12779, July 1995 (232512 bytes) I T Foster and B R Toonen, Load-Balancing Algorithms for the Parallel Community Climate Model, ANL Technical Report ANL/MCS-TM-190, January 1995 (180420 bytes) Poster Presentations K Dritz, I Foster, M Minkoff, P Sutton, B Toonen, Z Wu, R Shepard, J Tilson, A Wagner, R Harrison, R Kendall, and J Nieplocha, Semidirect Hartree-Fock Calculations Using the CHEMIO Library, 1995 Gordon Research Conference High-Performance Computing and National Information Infrastructure, Plymouth, NH, July 16-21, 1995 K Dritz, I Foster, M Minkoff, R Shepard, P Sutton, J L Tilson, B Toonen, A Wagner, and Z Wu, Nondirect SCF Calculations Using the CHEMIO Library, High Performance Computational Chemistry Workshop, Pleasanton Hilton, Pleasanton, California, August 13-16, 1995 Something to think about The Earth does not belong to man, man belongs to the Earth All things are connected, like the blood that unites us all Man did not weave the web of life, he is but a strand in it; whatever he does to the web, he does to himself -Chief Seattle The man who sat on the ground in his tipi meditating on life and its meaning, accepting the kinship of all creatures and acknowledging unity with the universe of things, was infusing into his being the true essence of civilization -Luther Standing Bear, Oglala Sioux Last Modified: Mon Aug 5 18:40:23 CDT 1996 	0
11	 Bryan So's Home Page Bryan So Graduate Student Computer Sciences Department University of Wisconsin - Madison 1210 W Dayton St Madison, WI 53706 Office: CS 5364 E-mail: so@cs wisc edu Telephone: (608) 262-5105 Fax: (608) 262-9777 MS Computer Sciences, University of Wisconsin-Madison 1989 BS Computer Science, Purdue University, 1988 Interests: intelligent help systems, human-computer interaction, knowledge representation of operating system activities Selected Recent Publications So, B & Travis, L , "A Step Toward an Intelligent UNIX Help System: Knowledge Representation of UNIX Utilities", Technical Report #1230 , University of Wisconsin-Madison, April 1994 Miller, B P , Fredriksen, L & So, B , "An Empirical Study of the Reliability of UNIX Utilities", Communications of the ACM , 33:12, Dec 1990 Related Links University of Wisconsin CS Department University of Wisconsin AI Group Professor Larry Travis, Advisor Last Updated: Jan 20, 1996 	0
237	 Krung's homepage Updated on 5 November 1996 Krung's homepage underconstruction I try to keep this page short and informative Have a good serf!!! 1997 : The year to come The following are my own web related to topic I am doing research on Mathematical Programmings : Ph D project pursuing Course works : Old course works in Computer Science department Computer companies : Favorite hobby Personal information : My personal opinion and life UW Madison-Wisconsin linked The following Web pages are the some important links University of Madison-Wisconsin as a whole Computer Sciences department as a unique entity Electronic library system from UW Krung Sinapiromsaran : Email krung@cs wisc edu 	0
14	 Jim Skrentny's Home Page Jim Skrentny CS367 Lecturer CS302 Coordinator Graduate Student Computer Sciences Department University of Wisconsin - Madison 1210 W Dayton St Madison, WI 53706 Office: 1303 Computer Sciences Email: skrentny@cs wisc edu Telephone: (608) 262-0191 Fax: (608) 262-9777 Related Links CS367 University of Wisconsin CS Department University of Wisconsin AI Group skrentny@cs wisc edu, Last Updated: February 3, 1995 	0
177	 David J Finton's Home Page David J Finton finton@cs wisc edu Computer Sciences Department University of Wisconsin-Madison 1210 West Dayton Street Madison, WI 53706 (608) 262-9275 Welcome to my page! I'm a grad student / research nerd in artificial intelligence here at the University of Wisconsin-Madison I grew up in Grand Rapids, Michigan , (which is the Late Show 's ex- Home Office ), earned a degree in math at Michigan State , and a master's in computer science here at the UW I'm now a dissertator at this institution , after taking a little over a year to develop traffic measurements software for AT&amp;T after my first thesis advisor left Wisconsin When I'm not at my trusty NeXT station or the library, I enjoy playing trumpet and piano, listening to " longhair music ", playing volleyball with the InterVarsity folks, and contributing to the SuperSoaker arms race If you have any comments about my pages, feel free to use my comment form , or just send me e-mail Or finger my account to see my current plan and whether I'm on the system Gainful employment: I am a TA for CS 540 , Introduction to Artificial Intelligence Current Project: If computers are so smart, why do we have to understand them Making machines more intelligent is the goal of Artificial Intelligence To me, the essence of intelligence is the ability to learn and adapt, to learn to act appropriately in order to reach our goals Reinforcement learning treats this problem in the general case where the system has outputs to control actions that can change its environment, and it has inputs through which it senses its environment It also has an input for reinforcement, which is a weak kind of feedback which can be expressed as a positive or negative number So, instead of having a teacher to present the system with input/output pairs, the system instead receives "thumbs up" or "thumbs down" at irregular intervals My work has focussed on how the need to distinguish good actions from bad ones can direct the process of building a good representation of the environment in terms of relevant , or important features (See my note on importance-based feature extraction ) Currently I am applying this notion of importance to the problem of learning to balance the need to explore the world with the need to perform optimally (exploration vs exploitation) I am also investigating ways of using importance to make the learning process more efficient by allowing the system to specify the starting points for its learning experiments (active learning) My goal is to develop a better understanding of intelligent adaptation I hope that this will provide a basis for intelligent action which will also benefit from knowledge-based and task-based work See my (really out-of-date, sorry!) reinforcement learning page for more information My Hotlist This is my browser-independent hotlist I keep a copy here so I can access it from any of the browser/platform combinations I use It's actually my Bookmarks file from OmniWeb , which is a more elegant and more functional browser than Netscape , in my opinion OmniWeb is currently only available for NEXTSTEP, but will be available for all the OpenStep variants when OpenStep is released My Editorial Pages: My response to the Jehovah's Witnesses on the deity of Christ Wisconsin Sites: InterVarsity Graduate Fellowship, University of Wisconsin-Madison Check out the weather in the City of Madison WISC-TV 's Star Trek page has programming information and links to other pages The ISTHMUS Daily Page Some of My Favorite Places to Visit: The Web Nebulae , and NASA pictures The World Wide Study Bible , and CrossSearch The F-Minor Glenn Gould Homepage The Farside Daily Star Trek and Star Trek: Voyager Enter The Dilbert Zone Roam the world with The Virtual Tourist Stereograms ! How To Tell If Your Head's About To Blow Up A true NeXT-head showing what he thinks of Bill Gates And now, a word from my sponsor Last modified: October 31, 1996 finton@cs wisc edu 	0
17	 Ashish's Home Page Ashish Thusoo I'm a graduate student in the Department of Computer Science at the University of Wisconsin, Madison I come from India , and had my undergraduate education at the Indian Institute of Technology, Delhi The Department of CS at IITD is a fantastic place and worth visiting If you'd like to contact me, you can finger me to find my whereabouts Alternatively, you can send email to me at ashisht@cs wisc edu 	0
141	 George Varghese This is 1996 people!!! Download Netscape 3 0 or go see my old page by clicking here WARNING : THE PAGE IS PRETTY LAME! 	0
94	 Ashwin's Home Page This page is under construction My name is S Ashwin I'm a graduate student in the Department of Computer Science at the University of Wisconsin, Madison I come from India , and had my undergraduate education at the Indian Institute of Technology, Bombay The Department of CS at IITB is a fantastic place and worth visiting If you'd like to contact me, you can finger me to find my whereabouts Alternatively, you can send email to me at sashwin@cs wisc edu My bookmarks 	0
216	 Raji's Home Page Raji's Home Welcome to my home page If you have visited this page too often, you might be suffering from Internet Addiction Disorder Seek treatment!! Office Info Office : 1308 Phone : (608) 262-6602 Computer Sciences Dept University of Wisconsin, Madison Teaching Assistant : CS577 - Introduction to Algorithms Office Hours: 11-12noon MW Here is a Postscript or Text version of my resume Courses for Fall '96 CS640 : Introduction to Computer Networks CS737 : Computer System Performance Evaluation and Modeling CS739 : Distributed Systems Other Interesting Links Technical Stuff Fun Stuff News Send me mail See if I am around 	0
133	 S Subramanya Sastry's Home Page I am S Subramanya Sastry( Here is a mugshot of mine) I come from Hospet, a town in Karnataka , India Did 12 years of my schooling there Near Hospet(10 kms away) is Hampi , the ruins of the Vijayanagara Empire Also, 5 kms away, is the Tungabhadra Dam, built across the Tungabhadra river These places are beautiful, but unfortunately I dont have photographs of these places or I would have scanned and put them in my photo album Not so long ago, I was an undergraduate at the Indian Institute of Technology, Kanpur , in the Department of Computer Science and Engineering Those 4 years were wonderful My photo album has a few photographs from that time Gokul is also maintaining a photo album which contains many photos of IITK The IITK Class of '95 homepage has information about my classmates at IITK The present Currently, I am a graduate student in the Computer Sciences Department at the University of Wisconsin, Madison I plan to do a Ph D here Here are the courses that I have registered for in Spring '96 Interests My academic interests lie in the fields of Architecture , Programming Languages and Compilers Hope to graduate some day with a Ph D in one of these fields Cricket is one of my favourite sports Used to play phatta at IITK which is a tennis-ball version of cricket Not that I was a champ or anything, but it provided a lot of entertainment in the company of my friends My bookmarks have a few links to some cricket sites I enjoy listening to music, anything that is pleasant to the ear I must say I dont consider hard rock or metal something really pleasant I do not watch much TV, but of whatever I have watched, I liked Seinfeld's show very much As far as reading goes, I am not a voracious reader Rather than say what I like, I can better say what I do not like I do not like horror, fantasy, neither do I like Science Fiction I have unsuccesfully tried to come to grips with these I like something which is down-to-earth, if you know what I mean Something which has a hint of romance in it, if possible Jeffrey Archer has been my favourite author to date I also liked Jane Austen's Pride and Prejudice very much Talking of reading, Ramesh Mahadeven's articles make for some interesting reading I also like playing bridge Back at IIT, Kanpur, I picked up this wonderful game in the company of my friends After a long time, I am back at it again here I also like solving crosswords, the cryptic kind But, in the past year, I have not devoted much time to this hobby of mine here --> Last Updated : January 20th, 1996 Send in your comments/suggestions to : sastry@cs wisc edu University of Wisconsin, Madison home page 	0
142	 i bleed in nontrivial ways here is my temporarily-understated page my unadorned cs302 page that i provide for section 63 the 1306 Pizza Pool page a brief bio on me my hobbies page My schedule for Spring 1996 Here are my stinkin' bookmarks SUNY-Albany Fall 1996: I have the poor sod, the unfortunately named "***** ******" in my class A hypersensitive rockjock cretin who broods, glares, clenches fist and cracks knuckle at "MR ******", or a tragically flighty femme-man who has been getting razzed and asskicked since the third grade -- or perhaps a smooth-skinned hardbody leatherboy who leers at me whenever I call the roll What difference does it make, since today I giggled a bit when I said his name and in doing so became a prostitute to society's bigotries -- my pedagody was my Isaac but the black goat refused to stay his clawed hand F**K! SSSUUUHHH MMUUUHHHH DDDDUUUUUHHHHH MMMMUUUHHHH MAAAAHHHJAAAAAAHHHHH! FFFUUUHHHHH YYYYYYYUUUUUHHHHH MMMMMUUUUUHHHHHMMMMUUUHHHHH! UUUHHH UUUMMMM UUUHHHH WWWWWHHHHUUUUUHHHHH! SUNY-Albany Fall 1995: If I hit Mr Zhang with my car, I wouldn't notice If I hit Mr Eggleston with my car, I'd smile 	0
230	 Karen L Karavanic Everything I need to know I learned in a NYC public school Karen L Karavanic Research Assistant, Paradyn Parallel Performance Tools Project University of Wisconsin-Madison Computer Sciences Department 1210 West Dayton Street Madison , WI 53706 6372 CS&S (608)262-6617 karavan@cs wisc edu I am currently pursuing a Ph D in Computer Science My research interests include Parallel Computing Environments Automating the Performance Tuning Process Operating Systems Databases Ask Me About UW-Madison Women in Computer Sciences (WICS) Frontiers in Science , a cool program for Dane County High School Students TRIO Student Support Services , free tutoring and other support for UW-Madison undergraduates! Don't Miss these Sites The web page that could save your life: the Safer Sex Page For Chocolate Lovers Only Stuyvesant High School Alumni Association Stuyvesant High School Class of 1980 THOMAS: Legislative Information on the Internet The U S Constitution "The cure for anything is salt water -- sweat, tears, or the sea " -- Isak Dinesen "A ship in port is safe, but that is not what ships are for Sail out to sea and do new things " -- Admiral Grace Hopper, Computer Pioneer 	0
172	 Guangshun's Home Page Welcome to Guangshun's Home Page! It's me ! --> Graduate Student Department of Computer Science 1210 W Dayton, Rm 7390 University of Wisconsin - Madison Madison , WI 53705 USA Phone: (608)231-0592 (home) (608)262-6629 (office) Education University of Wisconsin - Madison California State University - Los Angeles Peking University , Physics Department Grade88 Research Interests: Database Management Systems Advisers: Raghu Ramakrishnan Miron Livny Projects: Data Analysis project with family medicine DEVise A Data Exploration via Visualization Environment Classes: cs739 cs764 cs838 Interesting hot links Fun Stuff Computer Related Career Planning Chinese Related Miscellany Send me email --> Send me email See if I am around --> Weather Forecast for Madison You are visitor since June 26, 1996 You are visitor number since 2/22/1996 --> You are visitor number since 6/27/96 --> 	0
169	 Martin Reames's Home Page Martin Reames Graduate Student/Teaching Assistant (for CS 302 ) (also, Coke Poobah -- finger the coke machine! ) Computer Sciences Department University of Wisconsin - Madison 1210 W Dayton St Madison, WI 53706-1685 Office: CS 1345 Telephone: (608) 262-1012 Telephone: (608) 262-1204 (dept) Fax: (608) 262-9777 Email: mreames@cs wisc edu Fall 1996 Schedule Research interests: Databases, in particular digital terrain modelling (TINs); programming languages, compiler design; logic and logic programming Qualifying exam : Databases, Spring 1997 Some previous years' exams Job interests: Software design and development in a product oriented environment that exploits my computer science education and my interests in databases and/or compiler design My resume in postscript and html As distributed to the Wisconsin DB Affiliates on Oct 21, 1996 BA, Mathematics/Computer Science , Wesleyan University , 1994 In the "not for the faint of heart" section of the web page, here's a link to my senior honors thesis on General E-Unification I Am The Coke Poobah Look at my works, ye mighty, and be afraid!!! Oh dear : I've gone and let this new job of being the Coke Poobah go to my head I'm not usually this far gone Really If you want to talk to someone who's better adjusted to his crucial role in UW CS dept life, you should probably see Elton He doesn't even mention being the co-Poobah on his page Imagine that Besides the aforementioned Coke Poobahship/mental illness, there are a few other things you might want to know about me I'm a third year graduate student in the CS department at Wisconsin, concentrating in databases, and currently studying for the qual (which will be sometime in early February) For exercise and relaxation I play squash (reasonably well) all year round, ultimate frisbee (OK) in the summer, and basketball, poorly and infrequently; and if you notice such things, you might see me rapidly riding my mountain bike around campus -- even in the chilliest of weather, and always with a helmet If you wish to learn more about my interests, feel free to examine my not-very-often-updated hierarchy of stuff I like Enjoy Wisconsin's on-line library Last modified: Fri Nov 1 12:59:42 1996 by Martin Reames mreames @ cs wisc edu 	0
114	 Ben's 100% Hyper Home Page Benjamin Teitelbaum Computer Sciences Department University of Wisconsin -- Madison 1210 West Dayton Street , Rm 3310 Madison , WI 53706-1685 USA ben@cs wisc edu R&eacute;sum&eacute; Quince - &quot;the Internet's ultimate word game&quot; Zillions of Bookmarks Spring '96 Schedule: (If your browser does not support tables, this will look like garbage Click here for something readable ) Monday Tuesday Wednesday Thursday Friday 8:00 9:15 cs740 - cs740 - cs740 9:00 10:00 - Office Hours - Office Hours - 10:00 11:00 - - - - - 11:00 12:15 - cs736 Pei cs736 - 12:15 1:00 - - - - - 1:00 2:30 - - - - DB Seminar 2:30 3:30 OS Seminar - - - Condor Meeting 3:00 4:00 - Miron - - - 4:00 5:00 - - - PL Seminar - --> 	0
103	 Alain K&auml;gi's Home Page Alain K&auml;gi (click here for a larger picture ) The largest carnivore that ever lived Last modified Sat Sep 9 14:14:55 by Alain K&auml;gi (alain@cs wisc edu) 	0
236	 Maria's Home Page Maria's Home Page How about a visit to the University of Maryland-College Park Or maybe the University of Wisconsin-Madison If you are in my CS132 lab sections, you might want to visit this page--> 	0
193	 Avinash Sodani's Home Page Avinash Sodani (sodani@cs wisc edu) Graduate Student Department of Computer Sciences University of Wisconsin-Madison 1210 West Dayton Street Madison, WI 53706 USA Education M S Computer Science, University of Wisconsin-Madison, May 1996 B Tech (Hons) Computer Science, Indian Institute of Technology, Kharagpur , India , July 1994 Academic Interests Computer Architecture Multiscalar (Kestrel) Project Programming Languages and Compilers Some Interesting Course Projects RPC Package for Java (Download the package) Meet My batch-mates (CS '94) CS Related Links CPU Info Center CS departments on the Web Ranks of CS departments India Related Links India News The Hindu : Online Edition Random Links Looking for a KGPite Follow this AT&T Toll Free 800 Directory Wills World Cup Cricket '96 This page has been accessed times since Feb 21, 1996 	0
250	 Jeff Lampert's Home Page Jeff Lampert's Home Page (in Ricardo Montalban voice): Welcome to my home page Yes, I know that's not a picture of me (at least, not on a good day), but I'm still looking for one that's not too incriminating and one that doesn't make me look like a convict I do have my baby picture from my high school yearbook, but the last time I showed that to someone I never heard the end of "What a cute baby!" Can't have someone thinking that, now can we :) Well, I found a couple of pictures, but the Tick threatened to turn me into a human Pez dispenser if I took his picture off, hence the pictures can be found on a separate page by clicking here For an autographed copy, sign my name on the monitor on top of where the picture appears ;););) Choose your link, Web-weasel! I seek PEZ! (take 10 paces, turn, and click) Some Basic Facts Who am i Where am I And who was that person I saw you with last night Academic and Work Related What classes am I taking What work am I doing in the Dept What's in my resume Entertainment Books, Movies, Music, TV Programs, Newsgroups, and other important subjects Friends No, not the TV show (not a bad show, but I'm sick of the theme song) Hobbies, Clubs, and Organizations Groups I was or am in, plus those I wish I were in My Favorite Links Ugh Sounds like a song from The Sound of Music Tom Servo: Look, It's Julie Andrews! And she's on fire! Crow: Good (from MST3K) Eclectic Paraphenalia I would say Miscellaneous, but that'd be too straight-forward tick@cs wisc edu 	0
1	 Steven Parker's Home Page Steven T Parker Graduate Student Computer Sciences Department University of Wisconsin-Madison 1210 West Dayton Street Madison, Wisconsin 53706 Office: 6372 CS&S, (608) 262-6617 parker@cs wisc edu Depth Area: Numerical Analysis Employment: PRISM Project Fall 1996 Schedule: MATH 623: MWF 9:55 - 10:45 CS 564: MWF 11:00 - 12:15 CS 799: W 2:30 - 3:30 PRISM: MWF 8:00-9:30, 1:00-3:30, TTh 10:30-3:30 Related Links: UW CS Home Page CS Lab Home Page Send mail now Last modified: Thu Sep 12 1996 	0
49	 Here is a HomePage for Jyothi This page is under construction HERE IS THE INFO FOR STUDENTS OF THE COURSE CS132 sec 306 307 Grades of cs132 sec 306 Others, sorry to dissappoint you email : jyothi@cs wisc edu 	0
99	 Jeremy Stenglein's Home Page Jeremy C Stenglein Graduate Student, Computer Sciences Department University of Wisconsin, Madison 1210 West Dayton Street Madison, WI 53705 Office : 1302 Computer Science Phone: (608) 262-6600 e-mail: stenglei@cs wisc edu I am teaching: Computer Science 302, section 3 General CS 302 Home Page My section's CS 302 Home Page I am taking: CS701 - Construction of compilers Other Links: The Computer Science Department Home Page The Simpson's Home Page ESPN Sports Net Hotwired 	0
32	 Jon's Home Page Welcome to Jon's Home Page! I'm a first year graduate student at the University of Wisconsin, Madison, studying computer science I am a TA for CS 132: Using Computers I am also maintaining a FAQ (Frequently Asked Questions) List on the latest PowerBook models released by Apple (the 5300's, the 190's, and the 2300's) Here are a few things to look at: Students in my CS 132 Lab Sections should click here I've amassed a big list of good Web sites, in a number of catagories Check out the Web pages for the UW-Madison CS department , UW-Madison itself , and my alma mater, RPI ! The sites I visit the most often are: Apple's Home Page -- For all your Mac needs The Nando Times -- For great news coverage The Spot -- For mind-numbing, soap-operaish drivel ZiffNet -- For computer industry news CS564: Database Management Systems and CS 701: Construction of Compilers -- For keeping up with my classwork Today's Dilbert -- For a bit of a chuckle Jon Bodner/ jonb@cs wisc edu /1326 Mound St #1, Madison, WI 53715 Last Modified: September 15, 1996 	0
174	 Sara Bauman's Home Page Sara (Dailey) Bauman dailey@cs wisc edu Graduate Program: Mathematics and Computation in Engineering (MaCE) University of Wisconsin - Madison Computer Sciences Department Engineering Mechanics & Astronautics in the Department of Nuclear Engineering and Engineering Physics Education: BS, Physics and Math/Computer Science, Lewis and Clark College , 1994 Research Work Publication Current Schedule CS310 TA page Links to friends' home pages Send me e-mail Office Address: University of Wisconsin - Madison Computer Sciences & Statistics 1210 West Dayton Street CS & S 1304 Madison, WI 53706 (608) 262-6601 Last modified: Tue Sep 3 11:32:23 1996 by Sara Dailey Tues Aug 26 2:05 1996 	0
73	 Trishul Chilimbi's Home Page Trishul Chilimbi (chilimbi@cs wisc edu) Click here for the real me Graduate Research Assistant Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA Advisor: Jim Larus Research Interests: Programming Languages , Compilers & Architectures for Parallel Computing Compiling for integrated shared-memory & message-passing Parallel program performance analysis & enhancement via Visualization Shared-memory parallel computer design Research Projects: Wisconsin Wind Tunnel Education: M S University of Wisconsin-Madison, 1993 B Tech Indian Institute of Technology, Bombay, 1992 Research Summary Publications Cachier: A Tool for Automatically Inserting CICO Annotations, Trishul M Chilimbi and James R Larus (International Conference on Parallel Processing (ICPP), August, 1994) StormWatch: A Tool for Visualizing Memory System Protocols Trishul M Chilimbi, Thomas Ball, Stephen G Eick and James R Larus (Supercomputing '95, To appear, December 1995) Awards and Honors Certificate of Merit, 1987, 10th in the State Mathematics Olympiad Presidents Gold Medal, 1988, top 25 in the Indian National Physics Examination Certificate of Merit, 1988, 1st in the State Examination in Chemistry Certificate of Merit, 1988, 1st in the State Examination in Electronics Miscellaneous Click here for a movie of me (I can dream, can't I ) Curriculum Vitae Last Updated: May 12, 1994 E-mail suggestions for this page to chilimbi@cs wisc edu 	0
195	 David Sundaram-Stukel's Homepage David Sundaram-Stukel's Web Page (This is not me ) where-upon he had the effrontery to push my hand severing the patient's femoral artery Blood spurted up and blinded the anesthetist, who ran out through the halls screaming Browbeck tried to knee me in the groin, and I managed to hamstring him with my scalpel He crawled about the floor stabbing at my feet and legs Voilet, that's my baboon assistant --only woman I ever cared a damn about-- really wigged I climbed up on the table and poise myself to jump on Browbeck with both feet and stomp him when the cops rushed in William Burroughs from Naked Lunch I constructed this page to catapult readers off to other pages of my choosing Page Index A brief bio of myself Classes I am taking CS 577 CS 640 The class I TA CS 520 Links relating to Computer Science This is a site dedicated to smart clothing Also, Steve Mann's page has links to view what he is currently seeing through his wearable camera This site has links and information on Artificial Life at the Santa Fe Institute More specifically you can link to an AL project called Tierra , by Thomas Ray Recent Dilbert Strips While technically not Computer Science, these math jokes had to be put somewhere Links of a more philosophic/scientific/artistic nature Physics/Consciousness Say no more Survival Research Laboratories has a site with info about the various destructive shows put on by this organization Arcosanti is an arcological site just outside of Phoenix The Krishnamurti Foundation site tells a bit about this 20th century philosopher This is a link to a various Beat Writers including the one pictured above This is a site filled with info about Tom Waits Links to various news sources Packer news New Scientist online You have to register so they can harass you through the mail, but you will be rewarded with dozens of interesting factoids with which you may astound your friends Scientific American online takes advantage of hypertext in addition to providing a selection of current articles from the print edition Science News , published weekly, contains smaller but more current articles The Hindu is a national newspaper of India The Onion Links of local interests UW-Madison's Astronomy Department Page and more specifically, the Washburn Observatory where the public can view the universe from the lens of a non-insignificant piece of the history of Astronomy and Madison Madison Weather info can be obtained at the following sites: WebWeather National Weather Service-Madison Channel 15 News Weather Channel 3 News Weather Other links of interest This is the home page of the late Timothy Leary This has links to numerous articles written by the noted optimist Noam Chomsky Disinformation has a great listing of conspiracy theories buried within their ultra-trendy web art Bad Movie reviews Back to UW-Madison CS Page 	0
111	 Susan Hert's Home Page Susan E Hert hert@cs wisc edu Research Assistant Department of Computer Sciences University of Wisconsin-Madison 1210 W Dayton St Madison , WI 53706-1685 Telephone: (608) 262-5105 Curriculum Vita ( postscript ) Research Interests Publications Software Other Interesting Links Research Interests Applied and Experimental Computational Geometry Analysis of Algorithms Design of Motion Planning Algorithms Computer Graphics for Geometric Algorithms Advisor: V ladimir Lumelsky Currently, I work in the UW Robotics Lab developing motion planning alogirthms for multiple robots in a common environment Selected Publications Susan Hert, Vladimir Lumelsky, "Deforming Curves in the Plane for Tethered-Robot Motion Planning" (An extended abstract of this paper appeared in Proceedings of 1996 Canadian Conference on Computational Geometry , August 1996 ) Susan Hert, Vladimir Lumelsky, "Planar Curve Routing for Tethered-Robot Motion Planning" to appear in International Journal of Computational Geometry & Applications Susan Hert, Vladimir Lumelsky, "The Ties that Bind: Motion Planning for Multiple Tethered Robots" , Robotics and Autonomous Systems 17 (1996) 187-215 (A version of this paper was published in Proc 1994 IEEE International Conference on Robotics and Automation , May 1994 ) Susan Hert, Sanjay Tiwari, and Vladimir Lumelsky, "A Terrain-Covering Algorithm for an AUV" , to appear in Journal of Autonomous Robots Special Issue on Autonomous Underwater Robots Susan Hert, Vladimir Lumelsky, "Moving Multiple Tethered Robots between Arbitrary Configurations" , Proc 1995 International Conference on Intelligent Robots and Systems , August 1995 Susan Hert, Dan Reznik, "The Simulation Library: A Basis for Animation Programs (Version 2 0)" , Technical Report RL-95002, University of Wisconsin-Madison, Robotics Laboratory, July 1995 Interesting Links Computational Geometry Pages Computer Science Education Links Books on the Web Reference Shelf The Library of Congress The On-line Books Page Travels with Samantha Cooking on the Web Epicurious Veggies Unite! 	0
140	 Eric Schnarr's Home Page Eric Schnarr ( schnarr@cs wisc edu ) Research Assistant Department of Computer Sciences University of Wisconsin-Madison 1210 West Dayton Street Madison, WI 53706 USA Phone: (608) 262-2542 Advisor: Jim Larus Research Interests: Architecture Description Languages Functional Language Design Interesting Links: Wisconsin Wind Tunnel SACM Hockey Club Dragon Bytes schnarr@cs wisc edu 	0
132	 Amir's Home Page Amir Roth Delphi32 maven, on the 60-day DL, "that guy on that show" 1028 Erin St #3 Madison, WI 53715 608-256-9743 CS 6360 608-262-6614 FAX: 608-262-9777 amir@cs wisc edu An occasionaly updated copy of my resume ( CV TE) "The truth is out there!" [ PL group | PL Seminar | Arch group | Arch Seminar | CS640 | CS838 ] This week's hot research topics Implementing a compiler using just the C preprocessor Delegating work to your project partners Setting off airport metal detectors The ins and outs of my existence I am graduate student in the Department of Computer Science at the University of Wisconsin, Madison My new advisor, Guri Sohi , and I are looking into methods of alleviating data dependences in Multiscalar programs using the distributed register file Multiscalar programs are all that and a side of curly fries I have a BS in Physics from Yale University and an advanced degree in nail design from Valley Beauty School Physics is interesting, but my beauty degree is much more practical I live with my girlfriend Marci and our two cats, Joe and Charlie Marci also went to Yale, and now she is getting a masters in public policy from LaFollette Institute One day, she is going to be president In the meantime, she likes to solve linear regression problems, try out wacky recipes she finds in magazines and watch 'Party of Five' I like eggplant, which most people think is weird Anyway, I promised the ins and outs In: Subba Out: My ex-officemates Mac Daddy and Mr November In: Two titanium screws Out: My ACL In: Desi Relaford Out: Terry Mulholland In: Oxygen Out: Carbon dioxide Areas of Vague Interest Programming languages, program analysis, and super-whack compiler optimizations Parallel algorithms Theory (good for the soul) Analysis, evaluation, modeling and performance enhancement of my three-point shot All things big and scary Areas of Rabid Interest The love If you don't know what I am talking about, you better leave this page at once, never to return Hmmm What AM I interested in Super Handy Informatik index of computer science journals and authors MadCAT MKP architecture resources Up to the minute NBA and MLB scores Sportsline Who did what to whom in Philly Everybody's favorite engineer Super Icky The news My friend Barb writes articles for these guys, I'm not going to read them but you can if you want (Just kidding, Barb) My friend Drew's home page at Cornell David's home page at CMU And you think I'm wierd A page featuring my friend Sue , and my friend by association Kemin Last modified: Sun Mar 17 17:26:03 1996 by Amir Roth amir@cs wisc edu 	0
65	 Chandrasekaran Sashikanth's Home Page Chandrasekaran Sashikanth ( csashi@cs wisc edu) Graduate Student Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA Advisor: Mark Hill Project: VMS Education: BTech: Indian Institute of Technology, Madras - June 1993 M S : Univeristy of Wisconsin, CS Department - Dec 1994 Last Updated: September 11, 1994 	0
13	 Yihong's Home Page ZHAO YIHONG ( zhao@cs wisc edu ) Research Assistant Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA Adviser Prof Jeff Naughton Research Interests Parallel Object-relational DBMS On-line Analytical Processing (OLAP) Data Mining on Financial data DBMS Benchmark Education B S University of North Carolina at Chapel Hill M S UW-Madison Fall 1994 Research Related Sites Wiscosin DB Group ACM SIGMOD IBM Data Mining U of Maryland Data Mining MicroStrategy's ROLAP Arbor's MOLAP Stocks and Financial Sites Lombard Graph Server PathFinder Server Kiwi Club Server CNN FN Daily News Sites PATHFINDER USA Today CNN FN Money Daily Chinese Taiwan News Web Search Engines The Lycos 250 Excite com Yahoo DEC Surfing the Web 1 3 5 7 9 -|- terse std detail Comments PGMOS 	0
72	 Ariel Tamches Ari Tamches, Research Assistant email: tamches@cs wisc edu Ariel Tamches Computer Sciences Department 1210 West Dayton Street Madison, WI 53706 typical pose ("huh ") angry pose I'm organizing the Fall 1996 Operating Systems & Networking Seminar here at UW-Madison Education: M S Computer Sciences, UW-Madison; May, 1995 B S Computer Science, UM College Park; May, 1993 Office: 6366 CS&S Research: Paradyn Parallel Performance Tools Status: Searching for thesis topic (what else ) Interests: Parallel performance tools Parallel and distributed operating systems Blues The Simpsons Seinfeld Skiing Skinet Keystone (my favorite ski area) Snowboarder Jokes: What is the difference between a snowboarder and a vacum cleaner The way the dirt bag's attached! How do snowboarders greet people Whoa, sorry dude! The difference between municipal bonds and snowboarders Municipal bonds eventually mature and generate income Hates: Country music Fortran Cool Links: yahoo espn cpu info skinet Other Stuff: Talk: Exokernel: An Operating System Architecture for Application-Level Resource Management [October 9, 1995] CS 757 paper: Techniques and Tools for Distributed Shared Memory Performance Improvement [Spring, 1995] (with M Callaghan) Talk: Supercomputer Interconnection Networks [April 19, 1995] Talk: The Zebra Striped Network File System (or, Why You Need a Log-Structured File System if You Use RAID) [Oct 11, 1994] CS 736 paper: The Performance of Non-Blocking and Wait-free Highly Concurrent Objects in Asynchronous Shared-Memory Multiprocessors ( dvi version , postscript version ) [Spring, 1994] CS 752 paper: Analysis of RISC Instruction Set Enhancement [Fall, 1993] 	0
194	 WELCOME MY FRIENDS, WELCOME TO THE MACHINE We appreciate your patience while we go through the long, arduous task of bringing you a better Home Page Check out my education Curriculum Vitae Check out the class I'm teaching CS 302 Home Page CS 302 Section 2 Home Page 	0
164	 Mark L McAuliffe Mark L McAuliffe Computer Sciences Department University of Wisconsin - Madison 1210 W Dayton St Madison, WI 53706 mcauliff@cs wisc edu Research Interests: Design and implementation of object-oriented database systems Publications: M J Carey, D J DeWitt, M J Franklin, N E Hall, M L McAuliffe, J F Naughton, D T Schuh, M H Solomon, C K Tan, O G Tsatalos, S J White and M J Zwilling Shoring Up Persistent Applications Proc ACM SIGMOD, May, 1994 Mark L McAuliffe and Marvin H Solomon A Trace-Based Simulation of Pointer Swizzling Techniques Proceedings of IEEE Data Engineering , March, 1995 Mark L McAuliffe, Michael J Carey, and Marvin H Solomon Towards Effective and Efficient Free Space Management To appear: Proceedings of 1996 ACM SIGMOD Conference , June, 1996 	0
16	 Welcome to the Home Page of NARAYANAN Srinivasa Prasanna (NSP) The Present Graduate student, at the CS Department at the University of Wisconsin, Madison The Past I come from Madras, the capital of TamilNadu , India Did my high schooling at P S Senior Secondary School, Madras The coolest part of my life so far has been my Undergrad at IIT, Madras I never wanted to leave that place but they chucked me out with a Bachelors in Computer Science in 1995 I spent those four lovely years at Godavari Hostel We do maintain a homepage for the cool dudes of the Godav class of '95 You can get to some of my favourite links Want to reach me Send mail to : nsp@cs wisc edu 	0
155	 Su-Hui CHiang's Home Page Su-Hui Chiang CS Department , University of Wisconsin - Madison Office: 6384 CS&S Telephone: (608) 262-6619 Fax: (608) 262-9777 E-mail: suhui@cs wisc edu Click here to send me an email Office hours: 4-5pm Thurs This page still under construction I'm TAing CS132 this fall Publications Use of Application Characteristics and Limited Preemption for Run-To-Completion Parallel Processor Scheduling Policies , with Rajesh Mansharamani and Mary Vernon Proc 1994 ACM SIGMETRICS Conf on Measurement and Modeling of Computer Systems , Nashville, TN May 1994, pp 33-44 Dynamic vs Static Quantum-Based Parallel Processor Allocation , with Mary Vernon The 2nd Workshop on Job Scheduling Strategies for Parallel Processing (in conjunction with IPPS'96 ), April 1996 Search Engines Yahoo! Sources of TR on the net Resources: Bibliographies The World-Wide Web Virtual Library: Subject Catalogue Links Related to Taiwan Taiwan Network Service SinaNet ( shopping, magzines, news, jobs, calendar, etc ) SeedNet Vistors' Guide to Taiwan Academia Sinica Last Updated: Aug 30, 1996 	0
248	 Subba's Home Page Things I enjoy Calvin and Hobbes Late Show with David Letterman Seinfeld NBA Other interests Prooocessors Historical interest The 8717*s Papers Evaluating Stream Buffers as a Secondary Cache Replacement Decoupling Integer Execution in Superscalar Processors subbarao@cambridge cs wisc edu 	0
226	 Yannis Schoinas' Home Page Yannis Schoinas ( schoinas@cs wisc edu) Research Assistant Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA Note: this page is under construction Advisor: Mark Hill Research Interests: Parallel Systems Publications: Fine-grain Access Control for Distributed Shared Memory, Ioannis Schoinas, Babak Falsafi, Alvin R Lebeck, Steven K Reinhardt, James R Larus, David A Wood (The Sixth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS VI), Oct 1994) Application-Specific Protocols for User-Level Shared Memory, Babak Falsafi, Alvin R Lebeck, Steven K Reinhardt, Ioannis Schoinas, Mark D Hill James R Larus, Anne Rogers, David A Wood (Supercomputing '94, Nov 1994) Education: M S University of Crete, Iraklio, 1991 B S University of Crete, Iraklio, 1989 Last Updated: July 13, 1994 cretan cooking 	0
211	 Brad's Home Page Welcome! Brad Thayer's Homepage Not much here yet Mail Me! Some links A link to the UW Computer Sciences Home Page How about the cs 640 Intro to Networking Home Page Or possibly the cs 736 Advanced Operating Systems Page It would be foolish to neglect the cs 737 Computer Systems Modeling Page ! You may be interested in the cs 132 Using Computers Home Page ! You'll probably be bored, but check out the UW-CS Operating Systems Seminar anyway J'aime beaucoup boire le caf&eacute; et le Dr Pepper Badgers and Packers page Some other links Web Search with Altavista Search Engine Find Email Adresses World-Wide The UW Jazz Page Duane McLaughlin's Home Page UW Athletics Home Page 	0
8	 Harit's Home Page H arit's Den Hi I am a Graduate student at University of Wisconsin at Madison in the Department of Computer Sciences Would you like to get a list of my classmates Courses I'm taking in Fall '96: CS 564: Database Management Systems - Prof Raghu Ramakrishnan CS 752: Advanced Computer Architecture I - Prof Mark Hill Courses I'm taking in Spring '97: CS 757: Advanced Computer Architecture II - Prof James Goodman I was an undergraduate student at the World-famous MVSR Engineering College under OSMANIA University, Hyderabad, India By the way, did you meet my cat draws a line --> Here are some of the things that interest me: Indian newspapers Other Stuff (CNN,MTV,Sports,etc ) Sastry's Links My Roommate's home page (SAEED MIRZA) Murthy's hot links Some Zubber-Dust photos Photographs of my UNIVERSITY Warning: Click HERE only if you ARE ABOVE 18 years of age Bye folks This page has been accessed times since Sept 8 1996 (counter courtesy Web-Counter ) This page has been accessed times since Sept 8 1996 My electronic mailing (e-mail) address is: Harit@cs wisc edu 	0
29	 Scott Breach's Home Page Scott Breach (breach@cs wisc edu) Addresses Education Research Interests Publications Recreation Associates Addresses Scott Breach Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA Tel: (608) 262-6618 Fax: (608) 262-9777 Education Ph D M S (Computer Science) University of Wisconsin - Madison , 1992 B S (Computer Engineering) Carnegie Mellon University , 1990 Advisor Guri Sohi Research Interests Computer Architecture Multiscalar Publications Multiscalar Processors Gurindar S Sohi, Scott E Breach, T N Vijaykumar 22nd International Symposium on Computer Architecture, 1995 The Anatomy of the Register File in a Multiscalar Processor Scott E Breach, T N Vijaykumar, Gurindar S Sohi 27th International Symposium on Microarchitecture, 1994 Efficient Detection of All Pointer and Array Access Errors Todd M Austin, Scott E Breach, Gurindar S Sohi Conference on Programming Language Design and Implementation, 1994 Recreation Wings Beer Squid TV Associates Todd Austin Doug Burger Babak Falsafi Alain Kagi T N Vijaykumar Last Updated: September 1, 1996 by Scott Breach (breach@cs wisc edu) 	0
124	 Minos's Home Page Minos N Garofalakis minos@cs wisc edu PhD Candidate/Research Assistant Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA Office: 7394 CS&STAT Phone : (608)829-3625 @home, (608)262-6629 @work Research Interests: Effective Resource Management Parallel and Multimedia Database Systems Complex Query Processing and Optimization Parallel Algorithms Database Theory Education: M S (Computer Science) University of Wisconsin-Madison, Dept of Computer Sciences, December 1994 B S (Computer Science) University of Patras, Dept of Computer Engineering and Informatics, June 1992 Refereed Publications: "Multi-dimensional Resource Scheduling for Parallel Queries" , by Minos N Garofalakis and Yannis E Ioannidis, Proceedings of the 1996 ACM SIGMOD Conference , Montreal, Canada, June 1996, pp 365-376 Abstract , Paper (in postscript, ~200K) "Scheduling Issues in Multimedia Query Optimization" , by Minos N Garofalakis and Yannis E Ioannidis, ACM Computing Surveys , Vol 27, No 4, December 1995, pp 590-592 Paper (in postscript, ~107K) Technical Reports: "Resource Scheduling in Enhanced Pay-Per-View Continuous Media Databases" , by Minos N Garofalakis, Banu Ozden, and Avi Silberschatz, Submitted for publication , October 1996 "Model-checking for Sequential Probabilistic Real-time Systems" , by Minos N Garofalakis, Technical Report TR-93 02 7, Computer Technology Institute, Patras , February 1993 Advisor: Yannis E Ioannidis More Feel free to peek at my resume Pointers to interesting stuff: UW-Madison DBMS Reasearch Home Page UW-Madison Hellenic Society Home Page ACM SIGMOD Home Page VLDB Home Page IBM Almaden Research Center IBM T J Watson Research Center Dr Michael Ley's Bibliograpy Server on Databases & Logic Programming This page is perpetually under construction Last Updated: July 14, 1996 	0
171	 Greg Sharp Home Page Greg Sharp Home Page Name: Greg Sharp Email: greg@cs wisc edu Office: CS&St 1307 Office Phone: (608)262-6602 Office Hours: 6:00pm-8:00pm Mon and 12:00pm-1:00pm Wed (or by appt ) TGIF: Every Friday, from 4:30-5:15 in CS 2310 CS Dept CS 302 Section 6 & 9 CS 302 Instructors Fall 1995 Lecture Notes | Spring 1996 Lecture Notes Classes Fall 1996 CS 764 Topics in Database Management Systems CS 838-2 Finding Out About Search Engines Altavista | DejaNews | Excite | Infoseek | Lycos | MetaCrawler | Yahoo | Usenet FAQ's FTP Mirrors: MIT | AOL | GWU HTML format: Ohio C and C++ Programming in C Learn C/C++ Today The C++ Library C++ Draft Standard (April 1995) Mirrors: Stanford | Cygnus G++ FAQ LIB G++ Info STL Reference Mumit's STL Newbie guide Platform Independant GUI Libraries in C++ Portable GUI Development Kits FAQ Amulet (OK) DCLAP (strings attached/requires Motif) SUIT (strings attached) V (OK) wxWindows (OK) YACL (OK) Classes Spring 1996 CS 558 Introduction to Computational Geometry CS 752 Computer Architecture I CS 752: My Computer Architecture Project CS 760 Machine Learning CS 760: My Machine Learning Project Classes Fall 1995 CS 513 Numerical Linear Algebra CS 520 Introduction to Theoretical Computer Science CS 766 Computer Vision CS 766: Images from Homework #2 CS 766: My Computer Vision project Misc Freeware and Shareware Zip-Info cygwin32 (GNU software for win32) Internet Directory GIMP Harmonay (Harmony is the Unix/X11 client for Hyper-G, i e the Hyper-G browser ) Image Databases VASC Image Database (here is an alternate link ) (video pics for vision research) Range Image Database (shape from shading pics) MSU/WSU Range Image Database (more shape from shading pics ) (this gives a few links to other image databases ) APS Image Database (A pretty cool idea you specify a section of the night sky, and you get an image) Japan Image Database(JAIDAS) (about 5 years worth of atmospheric data images ) Multiresolution Seamless Image Database (this is cool click to zoom in at any resolution) Views Of The Solar System (nice pics of the sun, moon, planets, comets, meteors, etc) The Wyoming CD-ROM - An Image Database version 2 0 (pics of wyoming, but also lots of misc stuff like pics of other planets and overhead shots of antarctica) Satelite Image Catalogue in NIAES (satelite pics of japan) Gothic Image Database (what can i say ) Electric Postcard Card Rack (nice selection Thanks for the link Todd !) MIT VisTex Texture Database Artificially Generated Images Primoridial Soup Kitchen (UW Math Department) (An awesome web site!) Medical Image Databases On-Line Images from the History of Medicine (OLI) and documentation (why do some of the pictures have diagonal lines through them ) Dermatologic Online Image Atlas based on the Erlanger Image Database (in Germany) and (a mirror in Japan) (This is a pretty cool idea too You enter your diagnosis, and get back an image ) Orthopaedic Image Database (a nice database) ECVNet Image Data Bases (list of links) Optical Character Recognition Handwriting Recognition Home Page NICI Handwriting Recognition Group Image Processing PNG Home Page Image Processing Home Page (Washington State University) Image Libraries and Software 3D Computer Graphics (software) POV-Ray raytracer home page Rayshade, Utah Raster Toolkit, more Radiance ray tracer/radiosity package Avalon archive of 3D objects More POV-Ray stuff DKB ray tracer, POV-Ray mirror Ian Grimstead's massive list of ray tracing 3DSite IMT's CAD Reference Site 3D Computer Graphics (hardware) 3D Graphic board FAQ Intergraph Lockheed GLint chipset Nvidia chipset Computational Geometery The Geometry Center Application Challenges to Computational Geometry Lisp Useless Pages Computer Architecture Computer Architecture Home Page Hennessy/Patterson Resources (for 752 text) SuperDLX Parallel Computing Simulators PARL (New Mexico State Univ ) (includes database of traces, and more architecture links) Univ Washingtion Architecture Group (a big ole' index of simulators!) Georgia Tech Architecture Group Japanese Computing Guide to Japanese Computing (Unversity of Washington) Monash Archive (Index) More Japanese Computing Stuff InfoWave EDICT Windows95 English and Japanese FAQ Japanese English Dictionary Shodouka Asiasoft Information Retreval Peregrinator (A robot that traverses and indexes the web Written in perl) TREC (Text REtrieval Home Page) INFOMINE Managing Gigabytes (A freeware (gnu) search engine for text, images and textual images) Providing Gov Info on the Internet: Experiences with THOMAS More THOMAS feedback IR linguistic utilities AI Repository - Information Retrieval Tools Survey of IR Natural Language Processing & Information Retrieval (by NIST) Computers and language on the web Index of /software/other_sw/info_retrieval/ World Wide Web Robots, Wanderers, and Spiders JEDI Project (This might not be strictly related ) The Hartlib Papers Project (This has a Latin stemmer!) The Information Retrieval / Multimedia Retrieval Group at DCU (academic group) IS 586 Information Retrieval Systems (a related course) CS5604 - Information Storage and Retrieval (a related course, includes history of IR!) CS 494 - Information Retrieval (a related course) News Pointcast (Check out their customized portfolio and automatic update tools) Literature Mark Twain Humor I apologize to all net citizens for the very offensive links on my web site I threw those links in the garbage where they belong! Investing InvestorWeb Networth Fundscape Brill Editorial Services Stockmaster Mutual Funds Brokerage Houses Fidelity Investments Vanguard T Rowe Price Jack White & Company e Schwab (Charles Schwab) Gabelli Funds 1-800-Mutuals Misc Man pages for psnup Last modified: Mon Nov 4 14:44:50 CST 1996 by Greg Sharp greg@cs wisc edu | http://www cs wisc edu/~greg/greg html 	0
229	 Mike Steele's WWW Homepage Mike Steele's WWW Homepage msteele@cs wisc edu Office: 1332 Comp Sci & Stat Building Me sitting in the Univ of Maryland CS department's computer lab, struggling through my undergraduate operating systems class sometime around April 1995 Note the time stamp in the lower right corner says "4:05" That's AM folks I'm a graduate student in the Computer Sciences Department at the University of Wisconsin--Madison ( School Motto: "Come and freeze in the land of cheese" ) My research and study interests center around artificial intelligence , computer vision , and operating systems (I hope to narrow it down some in the coming years) This semester, I am a graduate instructor for Section 10 of CS 302 (Algebraic Language Programming) I received my Bachelor's Degree in May 1996 from the University of Maryland's Computer Science Department Publications Grindstone: A Test Suite For Parallel Performance Tools Jeffery K Hollingsworth and Michael Steele Computer Science Technical Report CS-TR-3703, University of Maryland, Oct 1996 ( gzipped PostScript File ) Classes This Semester CS 537: Introduction to Operating Systems with Mary Vernon CS 540: Introduction to Artificial Intelligence with Chuck Dyer My Other Pages Information on getting in touch with me (for all my friends back in Maryland whom I forgot to e-mail with my new addresses) My favorite links My favorite sports teams Some of my friends The Usenet Dave Barry Frequently Asked Questions list The Usenet Billy Joel Frequently Asked Questions list I'm also the mailing list administrator for the Fruit-of-the-Day mailing list (still hosted by the University of Maryland), which started as an inside joke around my office, but got out of hand sometime in 1994 and now has over 400 members world-wide If you're the predator and you're coming to kill me, I have some infrared photos of myself so you'll know what I look like An infrared picture of me Mike Steele msteele@cs wisc edu University of Wisconsin--Madison Computer Sciences Department 	0
10	 Vishy's home page Viswanath Poosala, Research Assistant Computer Sciences Department University of Wisconsin Madison 1210 West Dayton Street Madison, WI 53706 (608) 262-6629 poosala@cs wisc edu Research Information Reseach Summary Resume in html and Postscript Information Related to Databases Advisor: Prof Yannis Ioannidis Other Information Asha : voluntary organization to help improve basic education in India Other interests UW CS Home page 	0
22	 Andrew Prock's Home Page Andrew Clemens Hockert Prock Office: 1331 Tel: 262-6605 Hours: 9:45-10:45 T, 10:00-11:00 F My Personal History My School My Classes At UW Madison The Class I TA for My Old School My Bookmarks My Resume Doonesbury Fox Trot NOT Alta Vista Alta Vista prock@cs wisc edu 	0
166	 Rob's Home Page Rob's Minimalist Home Page Last Modified: August 30 Me: Rob Mellencamp TAship: CS537 - Introduction to Operating Systems Email: mellen@cs wisc edu Office: 1349 Computer Science Building Office Phone: 262-5340 Office Hours: 10:00 -11:00 am MWF or by appointment mellen@cs wisc edu 	0
234	 Jim Basney Jim Basney Graduate Student/Research Assistant Computer Sciences Department University of Wisconsin-Madison 1210 W Dayton St Madison, WI 53706-1685 Email: jbasney@cs wisc edu Office: 3387 Computer Science and Statistics Office Phone: (608) 262-3924 FAX: (608) 262-9777 My research interests lie in the area of Operating Systems and Networks I am currently working on Condor , under direction of Prof Miron Livny I received my B A from Oberlin College in Computer Science and English I have some web pages at Oberlin My resume and code from some previous projects are available online Last Modified: Mon Sep 16 10:51:22 1996 by Jim Basney 	0
227	 Yumpee's Home Page Manoj Plakal Graduate Slave Dept of Computer Science UniversityofWisconsin-Madison Some blah about me My home country is India Though I'm originally from the state of Kerala , I've stayed all my life in Calcutta I studied at Don Bosco School, Calcutta which is run by The Salesians of Don Bosco I did my undergrad at IIT Kanpur with my major in Computer Science &amp; Engineering I'm currently a first-year graduate student supported by a teaching assistantship in the Department of Computer Sciences at the University of Wisconsin-Madison , staring down the barrel of a Ph D in either Computer Architecture or Programming Languages My interests Music : rock/metal/alternative/blues Movies, books and all that &nbsp;CS stuff ( acads/hacking/industry and other geeky/nerdy stuff ) Featured on this home page : An IIT Kanpur Chat Gateway The IIT Kanpur CS &amp; E Class of '96 ( see&nbsp;also: the IITK Class of '96 ) Links to my friends Snaps of me with my friends A pinup gallery (every nerd needs &nbsp;'em) Check out my bookmarks &nbsp; for links or my WWW-page access logs &nbsp;to see who's visiting my pages Contact via 7 North Randall Avenue #1 Madison, WI 53715 1349 Computer Sciences University of Wisconsin-Madison 1210 W Dayton Street Madison, WI 53706 (608)-250 0227 (608)-262-5340 plakal@cs wisc edu plakal@cs wisc edu Acknowledgements : Suresh Venkat for the nifty table above Igor Ivanisevic for the 'Graduate Slave' wisecrack Icons from various corners of the Web Last updated on 	0
182	 Shubu Mukherjee's Home Page Shubu Mukherjee ( shubu@cs wisc edu ) --> Above: With my fiancee Mimi Below: my nephew Avirup when he was 7 months old Graduate Research Assistant Computer Sciences Department University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706-1685 USA Phone: 608 262 5083 Fax: 608 262 9777 [aka Shubhendu S Mukherjee] [Click on button to jump to corresponding home page/article ] --> Advisor: Mark D Hill Research Project: Wisconsin Wind Tunnel Publications Wisconsin Computer Architects World-Wide Computer Architects Badger Ballroom Dance Team Other Personal Interests/Hobbies Morph between Dionisios and myself (Courtesy: Steve Seitz ) Some random (but interesting) links Education Ph D University of Wisconsin-Madison , Jan 1994 - Spring 1998 (expected) M S University of Wisconsin-Madison , Sep 1992 - Dec 1993 B Tech Indian Institute of Technology, Kanpur , India , Aug 1987 - May 1991 Research Summary Coherent Network Interfaces (PhD Dissertation) Cachable Queues & Design Space ( ISCA96 ) More (In Progress) Distributed Shared Memory Mechanisms for Cooperative Shared Memory ( ISCA93 ) On Commodity Workstations ( Submitted for Publication ) Cache Coherence Protocols Custom Protocols for Irregular Applications ( PPoPP95 ) Gray-software ( ICS94 ) Dir 1 SW+ ( ISCA93 ) PPoPP95 ) ) --> Parallel Simulation ( Wind Tunnel Tutorial ) Cache Simulation ( JSS94 ) Copyright &copy 1996 by Shubu Mukherjee All rights reserved 	0
134	 Taxiao Wang's Home Page Welcome to Taxiao Wang's Home Page This page is under heavy construction Click here to finger me Contact Information: Taxiao Wang Graduate Student/Teaching Assistant Computer Science Department University of Wisconsin-Madison Office CS 3310 CS&S Bldg , 1210 W Dayton Street Madison , WI 53706-1685 Office Phone: (608)262-1721 Home Phone: (608)250-9867 E-mail: twang@cs wisc edu You are visitor number since 10/6/95 This home page has been visited times since 6/26/1996 --> You are visitor number since 2/22/1996 --> Last Updated on June 26, 1996 	0
154	 Prasad's Home Page Page under constuction Meanwhile Prasad Deshpande Hi !! I'm a graduate student at the Computer Sciences Deparment , University of Wisconsin, Madison Home Address 304 Princeton Ave, #2 Madison, WI-53705 Tel : (608)-236-0193 (608)-232-1751 Office Address 7366 Computer Sciences Building, University of Wisconsin, Madison 1210 W Dayton St , Madison, WI-53706 Tel : (608)-262-6624 Academic Interests Database Systems, Theory Research Area Databases Current Schedule FIN 720 : Theory of Investments MW 11 00-12 15 OIM 730 : Managerial Economics TR 2 30-3 45 CS 899 : Meetings Fri 11 00 with Prof Jeff Naughton Music 131 : Introduction to Music Theory MWF 9 55-10 45 Publications On the computation of multidimensional aggregates VLDB '96 Storage estimation for multidimensional aggregates in the presence of hierarchies VLDB '96 Some Interesting Course Projects RPC Package for Java Download More about me ! Want to spend some more time Timex World Map Find out about India Dilbert and other comix Explore my bookmarks Go to a random link Finger me if you have to times since Feb 5, 1996 --> Hakuna Matata ! Info on creating web pages 	0
241	 Doug Burger's Home Page --> Doug Burger's Home Page Professional information: Research summary Resume/CV Transcript Course projects Advisor Affiliated projects: Galileo/SCI Wisconsin Wind Tunnel Pages I maintain: WWW computer architecture UW computer architecture SimpleScalar tool set Generica SACM Personal stuff: About me Useful links Photo gallery Riding the DEMON Hunting those damn cats Beware of grad school 	0
163	 Carolyn Allex's Home Page Carolyn F Allex Graduate Student Biotechnology Training Program Trainee Computer Sciences Department University of Wisconsin - Madison 1210 West Dayton Street Madison, Wisconsin USA 53706 E-mail: allex@cs wisc edu Telephone: (608) 258-7420 Fax: (608) 258-7439 Advisor: Professor Jude W Shavlik Interests: Computational biology, DNA sequencing, protein folding, artificial intelligence, machine learning, neural networks Education: MS Computer Sciences, University of Wisconsin - Madison BS Computer Science, Purdue University BS Education, Mankato State University Related Links University of Wisconsin CS Department University of Wisconsin AI Group University of Wisconsin Machine Learning Group University of Wisconsin Computational Biology Research Intelligent Systems for Molecular Biology-94 (ISMB-94) Intelligent Systems for Molecular Biology-95 (ISMB-95) Intelligent Systems for Molecular Biology-96 (ISMB-96) 	0
145	 Home Page for H Chad Lane [ ACADEMICS &#183; TA: CS302 &#183; PERSONAL INFO &#183; NEAT STUFF ] Dept of Computer Sciences University of Wisconsin-Madison 1210 West Dayton St Madison, WI 53706-1685 Dept Phone: (608)262-1204 e-mail: Office Address: Office Hours: Office Phone: Home Phone: Fax: hcl@cs wisc edu 5364a CS&St 10am - 11am, T Th (608)262-5105 (608)250-9599 (608)262-9777 Welcome Thanks for stopping by my web page, I do hope you enjoy it Your best bet for fun here will be in my links and fun stuff section The biggest news of my life right now is that I'm getting married on May 24, 1997 to Nichole Finally, I just want to tell you good luck We're all counting on you Academics Fall 1996 courses: CS838: FOA: Information Retrieval and Other Technologies for Seeking Information CS564: Database Management Systems LING540 (audit): Advanced Semantics Research Interests: AI, Computational Linguistics, and Discourse Processing Useful advice for doing research (from Jon Barwise) Epigrams in Programming (by Alan J Perlis) Education: B S Mathematics and Computer Science, minor in Philosophy, cum laude , May 1995, Truman State University (formerly Northeast Missouri State University ) M S Computer Sciences, expected May 1997, University of Wisconsin-Madison Personal Information Who am I Why am I here What does "H " stand for Neat Stuff (according to yours truly) Click on an image Cyber-poop (a creation of my unabashed brother, Bart Arthur Lane) Download Claude (Claude is a psychotic DOS program that you can talk with) Raise a plant via the Internet Deep Thoughts (by Jack Handy) (Reload for different ones) Last Modified: Mon Oct 28 20 :07:32 CDT 1996 by H Chad Lane 	0
88	 Navin Kabra Navin Kabra Graduate Student Department of Computer Sciences University of Wisconsin-Madison Advisor: David DeWitt Research Area: Databases Research Interests: Customizable Query Optimization The Paradise Project See my plan for my address If you have nothing better to do, you can go in here and explore my bookmarks Or, you could have a look at some Indian Stuff , which includes among other things an archive of Hindi Songs navin@cs wisc edu PGP Public Key is here 	0
101	 Sally Peterson's Home Page Sally Goodwin Peterson Lecturer Computer Sciences University of Wisconsin 1210 W Dayton St Madison, WI 53706-1685 E-mail: sally@cs wisc edu Telephone: (608) 263-7763 Interests : desktop computing, real-time operating systems, programming languages Courses Taught For fall, 1994: Comp Sci 132, Lectures 3 & 4 , Using Computers Last Changed: September 26, 1994 by sally@cs wisc edu 	1
146	 Thomas W Reps's Home Page Thomas W Reps Professor Computer Sciences Department University of Wisconsin-Madison 1210 West Dayton Street Madison, WI 53706-1685 USA E-mail: reps@cs wisc edu Telephone: (608) 262-2091 Secretary: (608) 262-0017 Department: (608) 262-1204 Fax: (608) 262-9777 Ph D , Cornell University, 1982 ( Curriculum Vitae ) Research Interests: Program slicing, differencing, and merging Interprocedural dataflow analysis Alias analysis, pointer analysis, and shape analysis Language-based program-development environments Incremental computing Attribute grammars (See also the home page of the Wisconsin Program Slicing Project ) Contents Research Summary Categorized Index to Publications List of Publications Visitors, Post-Doctoral Associates, and Students Research Summary My research is aimed at creating tools to support the development of complex software systems The objective is to create tools that provide powerful language-specific program-manipulation operations In particular, my work has explored how program slicing can serve as the basis for such program-manipulation operations The slice of a program with respect to a set of program elements S is a projection of the program that includes only program elements that might affect (either directly or transitively) the values of the variables used at members of S Slicing allows one to find semantically meaningful decompositions of programs, where the decompositions consist of elements that are not textually contiguous Program slicing is a fundamental operation that can aid in solving many software-engineering problems For instance, it has applications in program understanding, maintenance, debugging, testing, differencing, specialization, reuse, and merging The projects that my co-workers and I are carrying out are aimed at improving the underlying technology for program slicing (and related operations), implementing program slicers, developing methods for using slicing in software-engineering tools, and building slicing-based program-manipulation tools (Click here for the home page of the Wisconsin Program Slicing Project ) Recently, we established some unexpected connections between interprocedural dataflow analysis and our previous work on interprocedural program slicing In particular, we showed that a large class of interprocedural dataflow-analysis problems can be solved by transforming them into a special kind of graph-reachability problem This graph-reachability problem can be solved precisely in polynomial time by the algorithm originally developed for interprocedural slicing I am also interested in the subject of incremental algorithms By an incremental algorithm, I mean an algorithm that makes use of the solution to one problem instance to find the solution to a ``nearby'' problem instance Categorized Index to Publications Program Slicing, Differencing, Merging, etc Overview [icse92] Slicing [dagstuhl96] [fse94] [slicing_patent] David Binkley's Thesis [acta91] [toplas90] (also [pldi88] ) Chopping [fse95b] Differencing [differencing91] Wuu Yang's Thesis Merging [tosem95] [tosem92] (also [sigsoft90] ) David Binkley's Thesis Wuu Yang's Thesis [iwscm89] [toplas89] (also [popl88a] , [esop88] , and [iwsvcc88] ) Algebra of slices (and applications to program merging) [scp91] (also [esop90] ) [ccpsd91] [amast91] [npfo_submission] Semantics and slicing [tr900] [ccipl89] [tr890] [popl88b] Other applications of slicing [dagstuhl96] [pepm95a] Implemented slicing system [prog_integration_system] [prog_integration_manual] [tr819] Note: the system described in these papers handles a small subset of Pascal The system is distributed under license, which you may obtain by clicking here We are currently retargeting the implementation to handle C programs, and expect to distribute a system that supports slicing, chopping, and differencing (but probably not integration) of C programs in 1996 Miscellaneous [tr947] Ph D Theses David Binkley's Thesis Wuu Yang's Thesis Phil Pfeiffer's Thesis Interprocedural Dataflow Analysis Demand IDFA via bottom-up logic programming and the magic-sets transformation [ald94] (also [cc94] ) Exhaustive and Demand IDFA via graph reachability [tr1283] (also [fse95a] ) [popl95] [diku94] IDFA using more than graph reachability [tcs_ide_paper] (also [fase95] ) PTIME completeness of IDFA [acta_paper] Alias Analysis, Pointer Analysis, and Shape Analysis [rsw96] [dagstuhl96] [tr1323] (also [popl96] and [tr1276] ) [pepm95b] [pfeiffer_thesis] [sigplan89] Language-Based Program-Development Environments [fse96] [dagstuhl92] Synthesizer Generator Book Synthesizer Generator Manual [computer87] (also [lape92] ) [popl86] T Reps's Thesis [psde84] [toplas83] (also [popl82] and [popl81] ) [compcon83] [cacm81] (also [ipe84] ) [stm81] (also [sde81] ) Incremental Computing G Ramalingam's Thesis [jalg_paper] [tcs96] [ipl94] [dagstuhl94] [popl94] [popl93] [popl93_notes] Synthesizer Generator Book [acta88] [computer87] (also [lape92] ) [popl86] T Reps's Thesis [toplas83] (also [popl82] and [popl81] ) Attribute Grammars [spaa93] Synthesizer Generator Book Synthesizer Generator Manual [acta88] [toplas87] [popl86] T Reps's Thesis [psde84] [popl84] [toplas83] (also [popl82] and [popl81] ) [compcon83] List of Publications Books Reps, T and Teitelbaum, T , The Synthesizer Generator: A System for Constructing Language-Based Editors Springer-Verlag, New York, NY, 1988 Reps, T and Teitelbaum, T , The Synthesizer Generator Reference Manual: Third Edition Springer-Verlag, New York, NY, 1988 Chinese reprint published by the World Publishing Corporation, Beijing, China, 1991 Reps, T , Generating Language-Based Environments The M I T Press, Cambridge, MA, 1984 Journal Publications Sagiv, M , Reps, T , and Horwitz, S , Precise interprocedural dataflow analysis with applications to constant propagation To appear in Theoretical Computer Science tcs-ide ps Reps, T , On the sequential nature of interprocedural program-analysis problems To appear in Acta Informatica acta95 ps Ramalingam, G and Reps, T , An incremental algorithm for a generalization of the shortest-path problem To appear in Journal of Algorithms j_alg95 ps Ramalingam, G and Reps, T , On the computational complexity of dynamic graph problems In Theoretical Computer Science A 158 (May 1996), 233-277 tcs96 ps Binkley, D , Horwitz, S , and Reps, T , Program integration for languages with procedure calls ACM Transactions on Software Engineering and Methodology 4 , 1 (January 1995), pp 3-35 tosem95 ps Ramalingam, G and Reps, T , On competitive on-line algorithms for the dynamic priority-ordering problem Information Processing Letters 51 (1994), 155-161 ipl94 ps Yang, W , Horwitz, S , and Reps, T , A program integration algorithm that accommodates semantics-preserving transformations ACM Transactions on Software Engineering and Methodology 1 , 3 (July 1992), 310-354 Reps, T , Algebraic properties of program integration Science of Computer Programming 17 (1991), 139-215 scp91 ps Horwitz, S and Reps, T , Efficient comparison of program slices Acta Informatica 28 (1991), 713-732 Horwitz, S , Reps, T , and Binkley, D , Interprocedural slicing using dependence graphs ACM Transactions on Programming Languages and Systems 12 , 1 (January 1990), 26-60 toplas90 ps Horwitz, S , Prins, J , and Reps, T , Integrating non-interfering versions of programs ACM Transactions on Programming Languages and Systems 11 , 3 (July 1989), 345-387 toplas89 ps Reps, T Incremental evaluation for attribute grammars with unrestricted movement between tree modifications Acta Informatica 25 (1988), 155-178 Reps, T and Teitelbaum, T , Language processing in program editors IEEE Computer 20 , 11 (November 1987), 29-40 Reps, T and Demers, A , Sublinear-space evaluation algorithms for attribute grammars ACM Transactions on Programming Languages and Systems 9 , 3 (July 1987), 408-440 Reps, T , Teitelbaum, T , and Demers, A , Incremental context-dependent analysis for language-based editors ACM Transactions on Programming Languages and Systems 5 , 3 (July 1983), 449-477 Teitelbaum, T and Reps, T , The Cornell Program Synthesizer: A syntax-directed programming environment Communications of the ACM 24 , 9 (September 1981), 563-573 Invited Papers Horwitz, S and Reps, T , The use of program dependence graphs in software engineering In Proceedings of the Fourteenth International Conference on Software Engineering , (May 11-15, 1992, Melbourne, Australia), ACM, New York, NY, 1992, pp 392-411 icse92 ps Reps, T and Horwitz, S , Semantics-based program integration In Proceedings of the Second European Symposium on Programming , (Nancy, France, March 21-25, 1988), Lecture Notes in Computer Science , Vol 300, H Ganzinger (ed ), Springer-Verlag, New York, NY, 1988, pp 1-20 Book Chapters Reps, T , Demand interprocedural program analysis using logic databases, In Applications of Logic Databases , R Ramakrishnan (ed ), Kluwer Academic Publishers, Boston, MA, 1994, pp 163-196 ald94 ps Horwitz, S , Reps, T , and Binkley, D , Interprocedural slicing using dependence graphs In Software Change Impact Analysis , S A Bohner and R S Arnold (eds ), IEEE Computer Society, Los Alamitos, CA (To appear ) Reprinted from ACM Transactions on Programming Languages and Systems 12 , 1 (January 1990), 26-60 toplas90 ps Horwitz, S , Reps, T , and Binkley, D , Interprocedural slicing using dependence graphs In Software Merging and Slicing , V Berzins (ed ), IEEE Computer Society, Los Alamitos, CA, pp 10-44 Reprinted from ACM Transactions on Programming Languages and Systems 12 , 1 (January 1990), 26-60 toplas90 ps Horwitz, S , Prins, J , and Reps, T , Integrating non-interfering versions of programs In Software Merging and Slicing , V Berzins (ed ), IEEE Computer Society, Los Alamitos, CA, pp 137-179 Reprinted from ACM Transactions on Programming Languages and Systems 11 , 3 (July 1989), 345-387 toplas89 ps Ramalingam, G and Reps, T , A theory of program modifications In Software Merging and Slicing , V Berzins (ed ), IEEE Computer Society, Los Alamitos, CA, 90-105 Reprinted from Proceedings of the Colloquium on Combining Paradigms for Software Development , (Brighton, UK, April 8-12, 1991), Lecture Notes in Computer Science , Vol 494, S Abramsky and T S E Maibaum (eds ), Springer-Verlag, New York, NY, 1991, pp 137-152 Reps, T and Teitelbaum, T , Language processing in program editors In Language Architectures and Programming Environments , T Ichikawa and H Tsubotani (eds ), The World Scientific Publishing Company, Singapore, 1992, pp 146-169 Reprinted from IEEE Computer 20 , 11 (November 1987), 29-40 Teitelbaum, T and Reps, T , The Cornell Program Synthesizer: A syntax-directed programming environment In Interactive Programming Environments , D Barstow, E Sandewall, and H Shrobe (eds ), McGraw-Hill, 1984, pp 97-116 Reprinted from Communications of the ACM 24 , 9 (September 1981), 563-573 Teitelbaum, T , Reps, T , and Horwitz, S , The why and wherefore of the Cornell Program Synthesizer In Software Development Environments , A I Wasserman (ed ), IEEE Computer Society, Washington, DC, 1981, 64-72 Reprinted from Proceedings of the ACM SIGPLAN/SIGOA Symposium on Text Manipulation , (Portland, OR, June 8-10, 1981), ACM SIGPLAN Notices 16 , 6 (June 1981), pp 8-16 Conference Publications Siff, M and Reps, T , Program generalization for software reuse: From C to C++, To appear in SIGSOFT 96: Proceedings of the Fourth ACM SIGSOFT Symposium on the Foundations of Software Engineering , (San Francisco, CA, October 16-18, 1996), ACM SIGSOFT Software Engineering Notes , 1996 fse96 ps Reps, T and Turnidge, T , Program specialization via program slicing, In Proceedings of the Dagstuhl Seminar on Partial Evaluation, (Schloss Dagstuhl, Wadern, Germany, Feb 12-16, 1996), Lecture Notes in Computer Science , Vol 1110, O Danvy, R Glueck, and P Thiemann (eds ), Springer-Verlag, New York, NY, 1996, pp 409-429 dagstuhl96 ps Sagiv, M , Reps, T , and Wilhelm, R , Solving shape-analysis problems in languages with destructive updating In Conference Record of the Twenty-Third ACM Symposium on Principles of Programming Languages , (St Petersburg, FL, Jan 22-24, 1996), ACM, New York, NY, 1996, pp 16-31 popl96 ps Horwitz, S , Reps, T , and Sagiv, M , Demand interprocedural dataflow analysis In SIGSOFT '95: Proceedings of the Third ACM SIGSOFT Symposium on the Foundations of Software Engineering , (Washington, DC, October 10-13, 1995), ACM SIGSOFT Software Engineering Notes 20 , 4 (1995), pp 104-115 fse95a ps Reps, T and Rosay, G , Precise interprocedural chopping In SIGSOFT '95: Proceedings of the Third ACM SIGSOFT Symposium on the Foundations of Software Engineering , (Washington, DC, October 10-13, 1995), ACM SIGSOFT Software Engineering Notes 20 , 4 (1995), pp 41-52 fse95b ps Das, M , Reps, T , and Van Hentenryck, P Semantic foundations of binding-time analysis for imperative programs In PEPM '95: Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation , (La Jolla, California, June 21-23, 1995), ACM, New York, NY, 1995, pp 100-110 pepm95a ps Reps, T , Shape analysis as a generalized path problem In PEPM '95: Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation , (La Jolla, California, June 21-23, 1995), ACM, New York, NY, 1995, pp 1-11 pepm95b ps Sagiv, M , Reps, T , and Horwitz, S , Precise interprocedural dataflow analysis with applications to constant propagation In Proceedings of FASE '95: Colloquium on Formal Approaches in Software Engineering , (Aarhus, Denmark, May 22-26, 1995), Lecture Notes in Computer Science , Vol 915, P D Mosses, M Nielsen, and M I Schwartzbach (eds ), Springer-Verlag, New York, NY, 1995, pp 651-665 tapsoft95 ps Reps, T , Horwitz, S , and Sagiv, M , Precise interprocedural dataflow analysis via graph reachability In Conference Record of the Twenty-Second ACM Symposium on Principles of Programming Languages , (San Francisco, CA, Jan 23-25, 1995), pp 49-61 popl95 ps Reps, T , Horwitz, S , Sagiv, M , and Rosay, G , Speeding up slicing In SIGSOFT '94: Proceedings of the Second ACM SIGSOFT Symposium on the Foundations of Software Engineering , (New Orleans, LA, December 7-9, 1994), ACM SIGSOFT Software Engineering Notes 19 , 5 (December 1994), pp 11-20 fse94 ps Reps, T , Solving demand versions of interprocedural analysis problems In Proceedings of the Fifth International Conference on Compiler Construction , (Edinburgh, Scotland, April 7-9, 1994), Lecture Notes in Computer Science , Vol 786, P Fritzson (ed ), Springer-Verlag, New York, NY, 1994, pp 389-403 cc94 ps Ramalingam, G and Reps, T , An incremental algorithm for maintaining the dominator tree of a reducible flowgraph In Conference Record of the Twenty-First ACM Symposium on Principles of Programming Languages , (Portland, OR, Jan 16-19, 1994), pp 287-296 popl94 ps Reps, T , Scan grammars: Parallel attribute evaluation via data-parallelism In Proceedings of the Fifth ACM Symposium on Parallel Algorithms and Architectures , (Velen, Germany, June 30 - July 2, 1993) spaa93 ps Ramalingam, G and Reps, T , Modification algebras In Proceedings of the Second International Conference on Algebraic Methodology and Software Technology (AMAST) , (Iowa City, Iowa, May 22-24, 1991) Ramalingam, G and Reps, T , A theory of program modifications In Proceedings of the Colloquium on Combining Paradigms for Software Development , (Brighton, UK, April 8-12, 1991), Lecture Notes in Computer Science , Vol 494, S Abramsky and T S E Maibaum (eds ), Springer-Verlag, New York, NY, 1991, pp 137-152 Yang, W , Horwitz, S , and Reps, T , A program integration algorithm that accommodates semantics-preserving transformations In SIGSOFT '90: Proceedings of the Fourth ACM SIGSOFT Symposium on Software Development Environments , (Irvine, CA, December 3-5, 1990), ACM Software Engineering Notes 15 , 6 (December 1990), pp 133-143 Reps, T , Algebraic properties of program integration In Proceedings of the 3nd European Symposium on Programming (Copenhagen, Denmark, May 15-18, 1990), Lecture Notes in Computer Science , Vol 432, N Jones (ed ), Springer-Verlag, New York, NY, 1990, pp 326-340 Reps, T and Bricker, T , Illustrating interference in interfering versions of programs In Proceedings of the Second International Workshop on Software Configuration Management , (Princeton, NJ, October 24-27, 1989), ACM Software Engineering Notes 17 , 7 (November 1989), pp 46-55 Horwitz, S , Pfeiffer, P , and Reps, T , Dependence analysis for pointer variables In Proceedings of the ACM SIGPLAN 89 Conference on Programming Language Design and Implementation , (Portland, OR, June 21-23, 1989), ACM SIGPLAN Notices 24 , 7 (July 1989), pp 28-40 Reps, T and Yang, W , The semantics of program slicing and program integration In Proceedings of the Colloquium on Current Issues in Programming Languages , (Barcelona, Spain, March 13-17, 1989), Lecture Notes in Computer Science , Vol 352, J Diaz and F Orejas (eds ), Springer-Verlag, New York, NY, 1989, pp 360-374 Horwitz, S , Reps, T , and Binkley, D , Interprocedural slicing using dependence graphs In Proceedings of the ACM SIGPLAN 88 Conference on Programming Language Design and Implementation , (Atlanta, GA, June 22-24, 1988), ACM SIGPLAN Notices 23 , 7 (July 1988), pp 35-46 Reps, T , Horwitz, S , and Prins, J , Support for integrating program variants in an environment for programming in the large In Proceedings of the International Workshop on Software Version and Configuration Control , (Grassau, W Germany, Jan 27-29, 1988), Berichte des German Chapter of the ACM , Vol 30, J F H Winkler (ed ), B G Teubner, Stuttgart, W Germany, 1988, pp 197-216 Horwitz, S , Prins, J , and Reps, T , Integrating non-interfering versions of programs In Conference Record of the Fifteenth ACM Symposium on Principles of Programming Languages , (San Diego, CA, January 13-15, 1988), ACM, New York, NY, 1988, pp 133-145 Horwitz, S , Prins, J , and Reps, T , On the adequacy of program dependence graphs for representing programs In Conference Record of the Fifteenth ACM Symposium on Principles of Programming Languages , (San Diego, CA, January 13-15, 1988), ACM, New York, NY, 1988, pp 146-157 popl88b ps Reps, T , Marceau, C , and Teitelbaum, T , Remote attribute updating for language-based editors In Conference Record of the Thirteenth ACM Symposium on Principles of Programming Languages , (St Petersburg, FL, January 13-15, 1986), ACM, New York, NY, 1986, pp 1-13 Reps, T and Teitelbaum, T , The Synthesizer Generator In Proceedings of the ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments , (Pittsburgh, PA, April 23-25, 1984), ACM SIGPLAN Notices 19 , 5 (May 1984), pp 42-48 Reps, T and Alpern, B , Interactive proof checking In Conference Record of the Eleventh ACM Symposium on Principles of Programming Languages , (Salt Lake City, Utah, January 15-18, 1984), ACM, New York, NY, 1984, pp 36-45 Reps, T , Static-semantic analysis in language-based editors In Digest of Papers of the IEEE Spring CompCon 83 , (San Francisco, CA, March 1-3, 1983), IEEE Computer Society, Washington, DC, 1983, pp 411-414 Reps, T , Optimal-time incremental semantic analysis for syntax-directed editors In Conference Record of the Ninth ACM Symposium on Principles of Programming Languages , (Albuquerque, NM, January 25-27, 1982), ACM, New York, NY, 1982, pp 169-176 Teitelbaum, T , Reps, T , and Horwitz, S , The why and wherefore of the Cornell Program Synthesizer In Proceedings of the ACM SIGPLAN/SIGOA Symposium on Text Manipulation , (Portland, OR, June 8-10, 1981), ACM SIGPLAN Notices 16 , 6 (June 1981), pp 8-16 Demers, A , Reps, T , and Teitelbaum, T , Incremental evaluation for attribute grammars with application to syntax-directed editors In Conference Record of the Eighth ACM Symposium on Principles of Programming Languages , (Williamsburg, VA, January 26-28, 1981), ACM, New York, NY, 1981, pp 105-116 Software Reps, T , Bricker, T , Rosay, G , et al , The Wisconsin Program-Integration System Release 0 5, April 1990; Release 1 0, April 1992 Release 2 0, July 1993 Licensed to 9 sites (Click here for license information ) Patents Reps, T , Horwitz, S , and Binkley, D , Interprocedural slicing of computer programs using dependence graphs U S Patent Number 5,161,216, November 3, 1992 Pending Submissions Reps, T , Sagiv, M , and Wilhelm, R , Solving shape-analysis problems in languages with destructive updating TR-1323, Computer Sciences Department, University of Wisconsin, Madison, WI, August 1996 tr1323 ps Submitted for journal publication Horwitz, S , Reps, T , and Sagiv, M , Demand interprocedural dataflow analysis TR-1283, Computer Sciences Department, University of Wisconsin, Madison, WI, August 1995 (Click here to access paper Click here to access the latest version ) Submitted for journal publication Ramalingam, G and Reps, T , New programs from old TR-1057 , Computer Sciences Department, University of Wisconsin-Madison, November 1991 (Click here to access the latest version ) Submitted for journal publication Other Publications and Reports Reps, T , Sagiv, M , and Wilhelm, R , On shape abstractions and shape analyses Computer Sciences Department, University of Wisconsin, Madison, WI, July 1996 Reps, T , Sagiv, M , and Wilhelm, R , Solving shape-analysis problems in languages with destructive updating TR-1276, Computer Sciences Department, University of Wisconsin, Madison, WI, July 1995 tr1276 ps van Leeuwen, J , Mehlhorn, K , and Reps, T (eds ), Incremental computation and dynamic algorithms Dagstuhl Seminar Report 88, International Conference and Research Center for Computer Science (IBFI), Schloss Dagstuhl, Wadern, Germany, 1994 Reps, T , Sagiv, M , and Horwitz S , Interprocedural dataflow analysis via graph reachability TR 94-14, Datalogisk Institut, University of Copenhagen, Copenhagen, Denmark, April 1994 diku-tr94-14 ps Reps, T , The Wisconsin Program-Integration System Reference Manual: Release 2 0 Computer Sciences Department, University of Wisconsin-Madison, July 1993 manual 2 0 ps Ramalingam, G and Reps, T , A categorized bibliography on incremental computation In Conference Record of the Twentieth ACM Symposium on Principles of Programming Languages , (Charleston, SC, Jan 11-13, 1993), ACM, New York, NY, 1993, pp 502-510 (Tutorial paper ) Reps, T , Incremental computation Unpublished tutorial notes, 1993 (Presented at the Twentieth ACM Symposium on Principles of Programming Languages, (Charleston, SC, Jan 11-13, 1993) ) Klint, P , Reps, T , and Snelting, G (eds ), Programming environments Dagstuhl Seminar Report 34, International Conference and Research Center for Computer Science (IBFI), Schloss Dagstuhl, Wadern, Germany, 1992 Binkley, D , Horwitz, S , and Reps, T , Identifying semantic differences in programs with procedures (Extended abstract) Computer Sciences Department, University of Wisconsin-Madison, September 1991 Ball, T , Horwitz, S , and Reps, T , Correctness of an algorithm for reconstituting a program from a dependence graph TR-947, Computer Sciences Department, University of Wisconsin-Madison, July 1990 (Click here to access paper ) Ramalingam, G and Reps, T , Semantics of program representation graphs TR-900, Computer Sciences Department, University of Wisconsin-Madison, December 1989 (Click here to access paper ) Binkley, D , Horwitz, S , and Reps, T , The multi-procedure equivalence theorem TR-890, Computer Sciences Department, University of Wisconsin-Madison, November 1989 (Click here to access paper ) Reps, T Demonstration of a prototype tool for program integration TR-819, Computer Sciences Department, University of Wisconsin-Madison, January 1989 (Click here to access paper ) Visitors, Post-Docs, and Students Visitors Mooly Sagiv , IBM Israel Scientific Center, 1994-95 Jiazhen Cai, NYU, 1990-91 Robert Paige , NYU, 1990-91 Post-Doctoral Associates Wuu Yang (Ph D , Univ of Wisconsin), 1990-91 (Currently Associate Professor, Department of Computer and Information Science, National Chiao-Tung University, Taiwan ) Jan Prins (Ph D , Cornell Univ ), 1986-87 (Currently Associate Professor, Department of Computer Science, University of North Carolina, Chapel Hill ) Students Ramalingam, G , Bounded Incremental Computation , Lecture Notes in Computer Science, Vol 1089, Springer-Verlag, New York, NY, 1996 Binkley, D , Multi-procedure program integration Ph D dissertation and Tech Rep TR-1038, Computer Sciences Department, University of Wisconsin, Madison, WI, August 1991 (Click here to access paper ) Pfeiffer, P , Dependence-based representations for programs with reference variables Ph D dissertation and Tech Rep TR-1037, Computer Sciences Department, University of Wisconsin, Madison, WI, August 1991 (Click here to access paper ) Yang, W , A new algorithm for semantics-based program integration Ph D dissertation and Tech Rep TR-962, Computer Sciences Department, University of Wisconsin, Madison, WI, August 1990 (Click here to access paper ) 	1
118	 Mike Carey Michael J Carey Professor (on leave) Computer Sciences Department University of Wisconsin-Madison 1210 West Dayton Street Madison, WI 53706 Research Staff Member IBM Almaden Research Center 650 Harry Road, K55-B1 San Jose, CA 95120-6099 Phone: (408) 927-1732 Primary Fax: (408) 927-4304 Alternate Fax: (408) 927-3215 E-mail: carey@almaden ibm com carey@cs wisc edu Research Interests Database management systems, parallel and distributed computing, applied performance evaluation My research interests lie in two main areas: database system performance and next-generation database systems In the performance area, topics of current interest include performance tradeoffs and techniques for object-oriented database systems, design and evaluation of algorithms related to transaction processing, and scheduling of complex multi-user database workloads based on user-specified performance goals In the next-generation database system area, I have been involved in the EXODUS extensible DBMS project; I am now involved in SHORE, a project aimed at developing a scalable repository for the storage and sharing of persistent objects in a heterogeneous environment The goal of the SHORE effort, which is building upon experience from the EXODUS project, is to meet the object management needs of (and to replace the use of Unix files in) applications such as CAD/CAM and CASE Most recently, I have moved from academia to industry After twelve great years as a part of what's become the best academic database systems research group in the known universe, the time has come for me to tackle some new and different challenges I am now working at the IBM Almaden Research Center (the source of a number of of the papers that I've been teaching to my students for the past twelve years) My IBM work will be related to objects and databases, with a significant fraction of my time being spent on a relatively new project there called Garlic Garlic is an effort to build a heterogeneous multimedia information system that allows data living in a variety of repositories to be queried and manipulated as though it resided in one, homogeneous, object database I spent 1993-94 on sabbatical at IBM working on Garlic, continued to work on it in Madison in 1994-95 (focusing, with a graduate student, on a query/browser front-end tool called PESTO), and am once again working on the Garlic project "on location" at IBM Almaden Recent Publications "Extending SQL-92 for OODB Access: Design and Implementation Experience" (with J Kiernan), Proc of the ACM Int'l Conf on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA) , Austin, TX, October 1995, to appear "Querying Multimedia Data From Multiple Repositories By Content: The Garlic Project" (with W Cody, L Haas, W Niblack, M Arya, R Fagin, M Flickner, D Lee, D Petkovic, P Schwarz, J Thomas, M Tork Roth, J Williams, and E Wimmers), Proc IFIP Working Conference on Visual Database Systems , Lausanne, Switzerland, March 1995 "Towards Heterogeneous Multimedia Information Systems: The Garlic Approach" (with L Haas, P Schwarz, M Arya, W Cody, R Fagin, M Flickner, A Luniewski, W Niblack, D Petkovic, J Thomas, J Williams, and E Wimmers), Proc 1995 IEEE Workshop on Research Issues in Data Engineering (RIDE-95) , Taipei, Taiwan, March 1995 "A Status Report on the OO7 OODBMS Benchmarking Effort" (with D DeWitt, C Kant, and J Naughton), Proc of the ACM Int'l Conf on Object-Oriented Programming Systems, Languages, and Applications , Portland, OR, October 1994 "Towards Automated Performance Tuning for Complex Workloads" (with K Brown, M Mehta, and M Livny), Proc of the 19th Int'l Conf on Very Large Data Bases , Santiago, Chile, September 1994 "Making Real Data Persistent: Initial Experiences with SMRC" (with B Reinwald, S Desslock, T Lehman, H Pirahesh, and V Srinivasan), Proc of the Persistent Object Systems Workshop , Tarascon, Provence, France, September 1994 "Shoring Up Persistent Applications" (with D DeWitt, M Franklin, N Hall, M McAuliffe, J Naughton, D Schuh, M Solomon, C Tan, O Tsatalos, S White, and M Zwilling, Proc of the ACM SIGMOD Int'l Conf on Management of Data , Minneapolis, MN, May 1994 "Fine-Grained Sharing in a Page Server OODBMS" (with M Franklin and M Zaharioudakis), Proc of the ACM SIGMOD Int'l Conf on Management of Data , Minneapolis, MN, May 1994 "Managing Memory for Real-Time Queries" (with H Pang and M Livny), Proc of the ACM SIGMOD Int'l Conf on Management of Data , Minneapolis, MN, May 1994 "Accurate Modeling of the Hybrid Hash Join Algorithm" (with J Patel and M Vernon), Proc of the ACM SIGMETRICS Conf on Measurement and Modeling of Computer Systems , Nashville, TN, May 1994 "Indexing Alternatives for Multiversion Locking" (with P Bober), Proc of the Int'l Conf on Extending Database Technology , Cambridge, England, March 1994 "Client-Server Caching Revisited" (with M Franklin), in Distributed Object Management , M Oszu, U Dayal, and P Valduriez, eds , Morgan-Kaufmann Publishers, 1994 	1
179	 Home Page of Mary K Vernon Mary K Vernon Professor of Computer Sciences and Industrial Engineering Computer Sciences Department University of Wisconsin 1210 W Dayton St Madison, WI 53706-1685 telephone: (608) 262-1204 fax: (608) 262-9777 email: vernon@cs wisc edu Ph D , University of California, Los Angeles, 1983 Interests: Techniques and applications of computer systems performance analysis, performance of parallel systems, parallel architectures and operating systems Research Summary I am interested in analytic modeling techniques and their application to computer system performance issues, with an emphasis on parallel and distributed system design issues The modeling techniques I have developed together with graduate students and colleagues include the Generalized Timed Petri Net , and customized mean value analysis The GTPN can represent parallel system features such as synchronization and priority service precisely The customized MVA technique yields a set of intuitive equations that represent parallel system features more approximately but can be solved more efficiently We have also recently proposed the use of a technique called interpolation approximations for analysis of parallel processor allocation policies This technique may also have broader applicability for parallel systems performance analysis Current research projects include characterization for high-performance parallel workloads, analysis of parallel processor scheduling policies, scheduling issues in multimedia servers, and memory management policies for networks of workstations Sample Recent Publications The fairness of DQDB networks with slot reuse (with G Brewster), Proceedings of the IEEE INFOCOM Conference , August 1995 Accurate modeling of the hybrid hash join algorithm (with J Patel and M Carey), Proceedings of the ACM SIGMETRICS Conference , June 1994 Use of application characteristics and limited preemption for run-to-completion parallel processor scheduling policies (with S Chiang and R Mansharamani), Proceedings of the ACM SIGMETRICS Conference , June 1994 This page was automatically created October 30, 1995 Email pubs@cs wisc edu to report errors 	1
178	 David Wood's Home Page David Wood ( david@cs wisc edu) Associate Professor of Computer Science and Electrical and Computer Engineering Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA david@cs wisc edu Phone: 608-263-7463 Secretary: 265-4892 (Julie Fingerson or Thea Sklenar) Departmental Office: 262-1204 Fax: 608-262-9777 Research Interests: Computer architecture, especially memory system design for uniprocessors and multiprocessors Design, implementation, and programming of parallel computers Operating systems for parallel computers Performance evaluation tools and techniques, especially for memory system analysis VLSI design, including low power design for portable computers Research Projects: Wisconsin Wind Tunnel (WWT) Memory System Performance Tools (WARTS) Education: Ph D University of California, Berkeley, 1990 B S University of California, Berkeley, 1981 Current Graduate Students: Babak Falsafi Steve Reinhardt Brian Toonen Recently Graduated Students: Rahmat Hyder (Intel) Alvy Lebeck (Duke University) Rob Pfile (Sun Microsystems) Mark Callaghan (Informix) Courses I Teach: Fall 1996: CS/ECE 552 - Introduction to Computer Architecture CS/ECE 354 - Machine Organization and Programming CS/ECE 552 - Introduction to Computer Architecture CS/ECE 752 - Advanced Computer Architecture I CS/ECE 757 - Advanced Computer Architecture II Selected Recent Papers Decoupled Hardware Support for Distributed Shared Memory Steven K Reinhardt, Robert W Pfile, and David A Wood, ACM/IEEE International Symposium on Computer Architecture (ISCA), May 1996 Coherent Network Interfaces for Fine-Grain Communication Shubhendu S Mukherjee and Babak Falsafi and Mark D Hill and David A Wood, ACM/IEEE International Symposium on Computer Architecture (ISCA), May 1996 Synchronization Hardware for Networks of Workstations: Performance vs Cost Rahmat S Hyder and David A Wood, ACM/IEEE International Conference on Supercomputing (ICS), May 1996 Dynamic Self-Invalidation: Reducing Coherence Overhead in Shared-Memory Multiprocessors Alvin R Lebeck and David A Wood, ACM/IEEE International Symposium on Computer Architecture (ISCA), June 1995 Active Memory: A New Abstraction For Memory System Simulation Alvin R Lebeck and David A Wood, ACM SIGMETRICS May 1995 Accuracy vs Performance in Parallel Simulation of Interconnection Networks , Douglas C Burger and David A Wood In the proceedings of the 9th International Parallel Processing Symposium, April, 1995 Application-Specific Protocols for User-Level Shared Memory, Babak Falsafi, Alvin Lebeck, Steven Reinhardt, Ioannis Schoinas, Mark Hill, James Larus, Anne Rogers, and David Wood, In Proceedings of Supercomputing '94 Fine-grain Access Control for Distributed Shared Memory, Ioannis Schoinas, Babak Falsafi, Alvin Lebeck, Steven Reinhardt, James Larus, and David Wood, Proceedings of ASPLOS VI Tempest and Typhoon: User-Level Shared Memory, Steven Reinhardt, James Larus, and David Wood, Proceedings of Int'l Symposium on Computer Architecture, 1994 Cache Profiling and the SPEC Benchmarks: A Case Study, Alvin R Lebeck and David A Wood, pages 15-26, IEEE COMPUTER, October 1994 Cooperative Shared Memory: Software and Hardware for Scalable Multiprocessors, Mark D Hill, James R Larus, Steven K Reinhardt, David A Wood, ACM Transactions on Computer Systems (TOCS), November 1993 The Wisconsin Wind Tunnel Project: An Annotated Bibliography, Mark D Hill, James R Larus, David A Wood, Computer Architecture News, v 22, n 5, December 1994 On-line version revised frequently Wisconsin Architectural Research Tool Set (WARTS), Mark D Hill, James R Larus, Alvin R Lebeck, Madhusudhan Talluri, David A Wood, Computer Architecture News (CAN), August 1993 Research Summary My main research goals lie in developing cost-effective computer architectures that take advantage of rapidly changing technologies My research program has two major thrusts: evaluating the performance, feasibility, and correctness of new architectures, and developing new tools and techniques to facilitate this evaluation Currently, this research focusses on the following three areas: multi-paradigm multiprocessors, which efficiently integrate shared-memory, message-passing, and hybrid programming paradigms, a virtual prototyping system, which exploits the similarites of an existing parallel machine to simulate a hypothetical parallel machine, and, techniques for understanding and tuning program performance Recent results include developing a new interface---called Tempest---between user-level protocol handlers and system-supplied mechanisms Tempest provides the mechanisms that allow programmers, compilers, and program libraries to implement and use message passing, transparent shared memory, and hybrid combinations of the two Tempest mechanisms are low-overhead messages, bulk data transfer, virtual memory management, and fine-grain access control The most novel mechanism---fine-grain access control---allows user software to tag blocks (e g , 32 bytes) as read-write, read-only, or invalid, so the local memory can be used to transparently cache remote data We are exploring alternative ways to support this interface The first---called Typhoon---is a proposed hardware platform that implements the Tempest mechanisms with a fully-programmable, user-level processor in the network interface A reverse-translation table (RTLB) invokes the network processor when it detects a fine-grain access fault We have simulated Typhoon on the Wisconsin Wind Tunnel and found that a transparent shared-memory protocol running on Typhoon performs comparably +/- 30% to an all-hardware Dir{N}NB cache-coherence protocol for five shared-memory programs We have also developed a new memory system simulation method that optimizes the common case---cache hits---significantly reducing simulation time Fast-Cache tightly integrates reference generation and simulation by providing the abstraction of tagged memory blocks: each reference invokes a user-specified function depending upon the reference type and memory block state The simulator controls how references are processed by manipulating memory block states, specifying a special NULL function for no action cases Fast-Cache implements this abstraction by using binary-rewriting to perform a table lookup before each memory reference On a SPARCStation 10, Fast-Cache simulation times are two to three times faster than a conventional trace-driven simulator that calls a procedure on each memory reference; simulation times are only three to six times slower than the original, un-instrumented program We are also investigating using Fast-Cache's binary rewriting techniques to support the Tempest interface on existing hardware platforms Last Updated: July 11, 1996 	1
192	 James Larus' Home Page James Larus ( larus@cs wisc edu) Associate Professor of Computer Science Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA larus@cs wisc edu Phone: 608-262-9519 Secretary: 265-4892 (Julie Fingerson or Thea Sklenar) Departmental Office: 262-1204 Fax: 608-262-9777 Education Research Interests Research Projects Upcomming Courses Software Recent Papers Ph D Graduates Summary Education: Ph D University of California, Berkeley, 1989 M S University of California, Berkeley, 1982 A B Harvard College, 1980 Research Interests: Programming languages and compilers, in particular languages and compilers for parallel machines Design and programming of shared-memory parallel computers Compiling symbolic languages Program profiling and tracing Program executable editing Research Projects: Wisconsin Wind Tunnel (WWT) C** Large-Grain Data Parallel Programming Language Executable Editing Library ( EEL ) Courses: CS367 Data Structures CS838 Java! Software: SPIM QPT EEL WARTS Recent Papers Efficient Path Profiling, Thomas Ball and James Larus, To appear: MICRO-29, December 1996 Parallel Programming in C**: A Large-Grain Data-Parallel Programming Language, James Larus, Brad Richards, Guhan Viswanathan, in Gregory V Wilson, ed , Parallel Programming Using C++, MIT Press, 1996 Teapot: Language Support for Writing Memory Coherence Protocols, Satish Chandra, Brad Richards, and James Larus, ACM SIGPLAN '96 Programming Language Design and Implementation (PLDI '96), May 1996 Instruction Scheduling and Executable Editing, Eric Schnarr and James R Larus, To Appear: Workshop on Compiler Support for System Software (WCSSS), February 1996 Efficient Support for Irregular Applications on Distributed-Memory Machines, Shubhendu Mukherjee, Shamik Sharma, Mark Hill, James Larus, Anne Rogers, and Joel Saltz, Fifth ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming (PPoPP), July 1995 EEL: Machine-Independent Executable Editing, James Larus and Eric Schnarr, ACM SIGPLAN '95 Conferences on Programming Languages Design and Implementation (PLDI), June 1995 Tempest: A Substrate for Portable Parallel Programs, Mark Hill, James Larus, and David Wood, COMPCON Spring 95, March 1995 Static Branch Frequency and Program Profile Analysis, Youfeng Wu and James Larus, 27th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 27), November 1994 Application-Specific Protocols for User-Level Shared Memory, Babak Falsafi, Alvin Lebeck, Steven Reinhardt, Ioannis Schoinas, Mark Hill, James Larus, Anne Rogers, and David Wood, Supercomputing '94, November 1994 Where is Time Spent in Message-Passing and Shared-Memory Programs , Satish Chandra, James Larus, and Anne Rogers, Sixth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-VI), October 1994 LCM: System Support for Language Implementation, James Larus, Brad Richards, and Guhan Viswanathan, Sixth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-VI), October 1994 Fine-grain Access Control for Distributed Shared Memory, Ioannis Schoinas, Babak Falsafi, Alvin Lebeck, Steven Reinhardt, James Larus, and David Wood, Sixth International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-VI), October 1994 Cachier: A Tool for Automatically Inserting CICO Annotations, Trishul Chilimbi and James Larus, 1994 International Conference on Parallel Programming (ICPP), August 1994 The Wisconsin Wind Tunnel Project: An Annotated Bibliography, Mark D Hill, James R Larus, David A Wood, Unpublished manuscript, revised frequently Cooperative Shared Memory: Software and Hardware for Scalable Multiprocessors, Mark D Hill, James R Larus, Steven K Reinhardt, David A Wood, ACM Transactions on Computer Systems (TOCS), November 1993 Wisconsin Architectural Research Tool Set (WARTS), Mark D Hill, James R Larus, Alvin R Lebeck, Madhusudhan Talluri, David A Wood, Computer Architecture News (CAN), August 1993 Ph D Graduates Brad Richards, Ph D August 1996, Memory Systems for Parallel Programming, First employment: Vassar College Guhan Viswanathan, Ph D September 1996, New Techniques for Compiling Data Parallel Languages First employment: Oracle Lorenz Huelsbergen, Ph D August 1993, Dynamic Language Parallelization, First employment: AT&T Bell Labs (lorenz@research att com) Thomas Ball, Ph D August 1993, The Use of Control-Flow and Control Dependence in Software Tools, First employment: AT&T Bell Labs (tball@research att com) Research Summary My research focuses on problems in programming computers As part of the Wisconsin Wind Tunnel ( WWT ) Project, I have helped develop a hybrid (software-hardware), shared-memory computer architecture that facilitates programming and compiling for parallel machines Currently, my students and I are developing languages, compilers, and tools to demonstrate and exploit the power of user-level coherence policies I'm also interested performance evaluation tools that help programmers understand and improve their programs' performance Recently, Tom Ball and I developed an efficient path profiling algorithm, which provides a more detailed understanding of control-flow within routines and which has identified new possibilities for better compilers Last modified: Fri Nov 1 21:17:09 1996 by James Larus larus@cs wisc edu 	1
93	 Jude W Shavlik's Home Page Jude W Shavlik Associate Professor Computer Sciences Department University of Wisconsin 1210 W Dayton St Madison, WI 53706-1685 E-mail: shavlik@cs wisc edu Telephone: (608) 262-7784 Fax: (608) 262-9777 Ph D , University of Illinois, Urbana, 1988 Interests: machine learning, neural networks, artificial intelligence, informational retrieval, computational biology Table of Contents Research Summary PhD Students Selected Recent Publications Courses Taught Some Interesting Links Research Summary We are primarily developing machine learning systems that combine the strengths of symbolic approaches to artificial intelligence with those of connectionist AI A major focus is improving the dialog between human teachers and machine learners Traditionally, this interaction is limited to the teacher providing labelled training examples to the machine Toward the goal of widening the ``communication pipeline'' between human and machine, we have been developing a language for providing, in a natural manner and at any time, general-purpose advice to a machine learner In our approach, the human advice-giver observes the behavior of the learner and occasionally makes suggestions, expressed in a simple language Based on techniques developed in our work on knowledge-based neural networks, these instructions are inserted directly into learner Subsequent connectionist (neural network) learning further integrates and refines the advice Currently, we are extending the language used to advise our learning algorithms, studying new ways of incorporating this advice into neural networks, investigating the extraction of human-comprehensible rules from trained neural networks, and developing methods for choosing good representations for training examples We are also developing parallel algorithms, on the department's Condor system and our CM-5 computer, for machine learning and computational biology Shavlik (1992) and (1996) provide an overview of our approach to knowledge-based neural networks Recent developments appear in the papers referenced on this page, as well as in the "home pages" of the students listed below PhD Students Carolyn Allex Kevin Cherkauer Mark Craven (graduated September 1996) Tina Eliassi-Rad Eric Gutstein (graduated June 1993) Richard Maclin (graduated August 1995) David Opitz (graduated August 1995) Geoffrey Towell (graduated October 1991) Selected Recent Publications Click here to see our recent titles and abstracts (you can also grab all our abstracts in one file or directly access our ftp directory of postscript versions of recent papers Maclin, R &amp; Shavlik, J W (1996) Creating advice-taking reinforcement learners Machine Learning , 22:1-3, 251-281 Craven, M W &amp; Shavlik, J W (1996) Extracting tree-structured representations of trained networks Proceedings of the Conference on Neural Information Processing Systems (NIPS8) Opitz, D W &amp; Shavlik, J W (1996) Generating accurate and diverse members of a neural-network ensemble Proceedings of the Conference on Neural Information Processing Systems (NIPS8) Cherkauer, K J &amp; Shavlik, J W (1996) Rapid quality estimation of neural network input representations Proceedings of the Conference on Neural Information Processing Systems (NIPS8) Opitz, D W &amp; Shavlik, J W (1995) Dynamically adding symbolically meaningful nodes to knowledge-based neural networks Knowledge-Based Systems , 8:6, 301-311 Towell, G G &amp; Shavlik, J W (1994) Knowledge-based artificial neural networks Artificial Intelligence , 70:1-2, 119-165 Shavlik, J W (1994) Combining symbolic and neural learning Machine Learning , 14:3, 321-331 Towell, G G &amp; Shavlik, J W (1993) The extraction of refined rules from knowledge-based neural networks Machine Learning , 13:1, 71-101 Maclin, R &amp; Shavlik, J W (1993) Using knowledge-based neural networks to improve algorithms: Refining the Chou-Fasman algorithm for protein folding Machine Learning , 11:2/3, 195-215 Scott G M , Shavlik, J W , &amp; Ray, H (1992) Refining PID controllers using neural networks Neural Computation , 4:5, 736-747 (A NIPS4 version is on line ) Shavlik, J W , Towell, G G , &amp; Noordewier, M O (1992) Using neural networks to refine biological knowledge International Journal of Genome Research , 1:1, 81-107 Shavlik, J W , Mooney, R J , &amp; Towell, G G (1991) An experimental comparison of symbolic and connectionist learning algorithms Machine Learning , 6:2, 111-143 (A version is on-line , but several figures are missing ) Shavlik, J W &amp; Dietterich, T D , eds , (1990) Readings in Machine Learning , Morgan Kaufmann, San Mateo, CA Courses Recently Taught CS 540 - Introduction to Artificial Intelligence (Fall 1995) CS 838 - Machine Learning and Information Retrieval (Fall 1995) CS 760 - Machine Learning (Spring 1996) Some Interesting Links U-Wisc CS Dept U-Wisc AI Group U-Wisc Machine Learning Group (my group) U-Wisc Computational Biology Research (includes some ML) U-Wisc Computational Neuroscience Research Various local links of interest Procs: Workshop on Agents that Learn from Other Agents , held at the 1995 International Machine Learning Conference Last modified: Fri Jul 5 18:40:39 1996 by Jude Shavlik shavlik@cs wisc edu 	1
25	 Carl de Boor's Home Page -------------------------------------> last change: 13 sep 96 Carl de Boor , Professor, Computer Sciences and Mathematics Department of Computer Sciences University of Wisconsin-Madison 1210 West Dayton Street Madison, Wisconsin 53706-1685 USA Office hours, fall '96 (when in town): WF11-12, R14:30-15:30 Iso Schoenberg worked here in Madison *) , from 1966 until his death in 1990 c v email: deboor@cs wisc edu telephone: (608) 263-7308, 3-2661 fax: (608) 262-9777 My schedule for fall '96 I am teaching CS 412 and MA 313 Look for some of my former or present students Selected recent articles on approximation theory written at UW are available by anonymous ftp from ftp cs wisc edu/Approx The read me file provides access to individual files there at the click of a button (it's a clickable version of the read me file there) The (small) subset of these (co)authored by me are clickable in here Click here for a list of errata for the third edition of [Conte and de Boor, Elementary Numerical Analysis: An Algorithmic Approach ], and here for that list of errata for the various printings of [Carl de Boor, A Practical Guide to Splines ] Check out the latest versions of the various programs and drivers in that latter book Click Journal of Approximation Theory (published by Academic Press ) for information about that journal (including recently accepted and published papers) as well as for email and postal addresses of many approximators and much, much more Ditto for Constructive Approximation (published by Springer-Verlag ) Ditto for East Journal on Approximations Search their tables of content, singly or combined, (and thank Paul Nevai for this handy tool) There is also Approximation down under and Amos Ron 's list of homepages of approximators A spline bibliography is available For links to various publishers, journals, people, resources, see the Ilas Information Center (IIC) Seek and ye shall find For an organized introduction into the joys of vi , see viva_vi! There are also on-screen tutorials Click here for a great picture of Hermite The same place also contains useful information about html But the html-primer might be even better For a very unusual and ever_changing home page, try David Griffeath's Primordial Soup Kitchen For various interesting information, see odds and ends , and thank Allan Pinkus at pinkus@techunix technion ac il or Paul Nevai if you find any of it useful Also, check out Paul Nevai's way to make his mathematical output available COURSES Check here for information about MATH/CS 717 Click here for information about Numerical Analysis here at CS *) The house next door to Iso's is now occupied by Takis Souganides and Thaleia Zariphopoulou The Szego bust now stands here Have a look at the inscription 	1
173	 Mark D Hill's Home Page Mark D Hill ( markhill@cs wisc edu ) Associate Professor of Computer Sciences and Electrical and Computer Engineering at the University of Wisconsin Table of Contents Addresses and Office Hours Current Teaching and Catalog Information Education Research Interests and Summary Wisconsin Wind Tunnel Project A Sampler of Recent Papers Ph D Graduates Links to Useful Information World-Wide Computer Architecture Information Wisconsin CS's Computer Architecture Group Wisconsin Architectural Research Tool Set (WARTS) Stuff I like to use Oral Presentation Advice, including David Patterson's How to Give a Bad Talk Online Raw Data for Cache Performance of the SPEC92 Benchmark Suite Proof that I am into hardware A Wisconsin sound :-) Addresses: Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA markhill@cs wisc edu Phone: 608-262-2196 Secretary: 608-265-4892 (Julie Fingerson or Thea Sklenar) Departmental Office: 608-262-1204 Fax: 608-262-9777 Office Hours (Fall 1996-1997): Monday 2:00-3:00, Wednesday 11:00-12:00, or by appointment markhill@cs wisc edu Current Teaching Fall 1996-1997 - CS/ECE 752 Advanced Computer Architecture I Fall 1996-1997 - CS 838 Topics in Computing - Java: The Language and the Implementation I Catalog Information on Courses I Teach CS/ECE 354 - Machine Organization and Programming CS/ECE 552 - Introduction to Computer Architecture CS/ECE 752 - Advanced Computer Architecture I CS/ECE 757 - Advanced Computer Architecture II Education: Ph D ( Computer Science ) University of California - Berkeley, 1987 M S ( Computer Science ) University of California - Berkeley, 1983 B S E ( Computer Engineering ) University of Michigan, 1981 Research Interests: Computer architecture Parallel computing Memory systems Performance evaluation Research Summary My research targets the memory systems of shared-memory multiprocessors and high-performance uniprocessors Memory system design is important, because it largely determines a computer's sustained performance My work emphasizes quantitative analysis (often requiring new evaluation techniques) of system-level (not just hardware) performance Much of my recent work is part of the Wisconsin Wind Tunnel Project with Profs Larus and Wood and many students The project expects most future massively-parallel computers will be built from workstation-like nodes and programmed in high-level parallel languages--like HPF--that support a shared address space in which processes uniformly reference data Our research seeks to develop a consensus about the middle-level interface--below languages and compilers and above system software and hardware We have recently proposed the Tempest interface that enables programmers, compilers, and program libraries to implement and use message passing, transparent shared memory, and hybrid combinations of the two We are developing Tempest implementations on a Thinking Machines CM-5, a cluster of workstations (COW), and hypothetical hardware platforms The Wisconsin Wind Tunnel project is so named because we use our tools to cull the design space of parallel supercomputers in a manner similar to how aeronautical engineers use conventional wind tunnels to design airplanes Other recent work with Madhu Talluri targets improving translation lookaside buffer (TLB) and page table performance by clustering aligned groups of base pages Options require changes to hardware only (complete-subblocked TLBs), operating system only (clustered page tables), or both (superpages and partial-subblocked TLBs) See our ASPLOS and SOSP papers A Sampler of Recent Papers The Wisconsin Wind Tunnel Project: An Annotated Bibliography, Mark D Hill, James R Larus, David A Wood, unpublished manuscript, revised frequently 1996 Parallel Computer Research in the Wisconsin Wind Tunnel Project, Mark D Hill, James R Larus, David A Wood, NSF Conference on Experimental Research in Computer Systems, June 1996 Bidirectional Technology Transfer: Sabbaticals in Industry, Mark D Hill, NSF Conference on Experimental Research in Computer Systems, June 1996 Coherent Network Interfaces for Fine-Grain Communication, Shubhendu S Mukherjee, Babak Falsafi, Mark D Hill, and David A Wood International Symposium on Computer Architecture (ISCA), 1996 Optimistic Simulation of Parallel Architectures Using Program Executables, Sashikanth Chandrasekaran and Mark D Hill Workshop on Parallel and Distributed Simulation (PADS), May 1996 1995 A New Page Table for 64-bit Address Spaces, Madhusudhan Talluri, Mark D Hill, Yousef A Khalidi, Symposium on Operating Systems Principals (SOSP), December 1995 Presidential Young Investigator Award Final Report, Mark D Hill, July 1995 Efficient Support for Irregular Applications on Distributed-Memory Machines, Shubhendu S Mukherjee, Shamik D Sharma, Mark D Hill, James R Larus, Anne Rogers, and Joel Saltz, PPoPP, July 1995 Cost-Effective Parallel Computing, David A Wood and Mark D Hill, (IEEE Computer, February 1995) Solving Microstructure Electrostatics on a Proposed Parallel Computer, Frank Traenkle, Mark D Hill, Sangtae Kim, Computers and Chemical Engineering, 1995 1994 Application-Specific Protocols for User-Level Shared Memory, Babak Falsafi, Alvin R Lebeck, Steven K Reinhardt, Ioannis Schoinas, Mark D Hill James R Larus, Anne Rogers, David A Wood, Supercomputing '94, Nov 1994 Surpassing the TLB Performance of Superpages with Less Operating System Support, Madhusudhan Talluri and Mark D Hill, International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS), October 1994 An Evaluation of Directory Protocols for Medium-Scale Shared-Memory Multiprocessors, Shubhendu S Mukherjee and Mark D Hill, International Conference on Supercomputing (ICS), July 1994 A Comparison of Trace-Sampling Techniques for Multi-Megabyte Caches, R E Kessler, Mark D Hill, David A Wood, IEEE Transactions on Computers, June 1994 1993 Cooperative Shared Memory: Software and Hardware for Scalable Multiprocessors, Mark D Hill, James R Larus, Steven K Reinhardt, David A Wood, ACM Transactions on Computer Systems (TOCS), November 1993 Wisconsin Architectural Research Tool Set (WARTS), Mark D Hill, James R Larus, Alvin R Lebeck, Madhusudhan Talluri, David A Wood, Computer Architecture News (CAN), August 1993 Cache Performance of the SPEC92 Benchmark Suite, Jeffrey D Gee, Mark D Hill, Dionisios N Pnevmatikatos, Alan Jay Smith, IEEE Micro, August 1993 A Unified Formalization of Four Shared-Memory Models, Sarita V Adve and Mark D Hill, IEEE Transactions on Parallel and Distributed Systems (TPDS), June 1993 Performance Implications of Tolerating Cache Faults, Andreas Farid Pour and Mark D Hill, IEEE Transactions on Computers (TOC), March 1993 Mechanisms for Cooperative Shared Memory, David A Wood, Satish Chandra, Babak Falsafi, Mark D Hill, James R Larus, Alvin R Lebeck, James C Lewis, Shubhendu S Mukherjee, Subbarao Palacharla, Steven K Reinhardt, International Symposium on Computer Architecture (ISCA), May 1993 The Wisconsin Wind Tunnel: Virtual Prototyping of Parallel Computers, Steven K Reinhardt, Mark D Hill, James R Larus, Alvin R Lebeck, James C Lewis, David A Wood, ACM SIGMETRICS, May 1993 1992 Page Placement Algorithms for Large Real-Index Caches, R E Kessler, Mark D Hill, ACM Transactions on Computer Systems, November 1992 Programming for Different Memory Consistency Models, Kourosh Gharachorloo, Sarita V Adve, Anoop Gupta, John L Hennessy, Mark D Hill, Journal of Parallel and Distributed Computing, August 1992 Tradeoffs in Supporting Two Page Sizes, Madhusudhan Talluri, Shing Kong, Mark D Hill, David A Patterson, International Symposium on Computer Architecture (ISCA), May 1992 1991 Detecting Data Races on Weak Memory Systems, Sarita V Adve, Mark D Hill, Barton P Miller, Robert H B Netzer, International Symposium on Computer Architecture (ISCA), June 1991 Comparison of Hardware and Software Cache Coherence Schemes, Sarita V Adve, Vikram S Adve, Mark D Hill, Mary K Vernon, International Symposium on Computer Architecture (ISCA), June 1991 A Model for Estimating Trace-Sample Miss Ratios, David A Wood, Mark D Hill, R E Kessler ACM SIGMETRICS, May 1991 Implementing Stack Simulation for Highly-Associative Memories (extended abstract) Yul H Kim, Mark D Hill, David A Wood, ACM SIGMETRICS, May 1991 1990 Implementing Sequential Consistency In Cache-Based Systems, Sarita V Adve, Mark D Hill, International Conference on Parallel Processing, August 1990 Weak Ordering - A New Definition, Sarita V Adve, Mark D Hill, International Symposium on Computer Architecture (ISCA), June 1990 Ph D Graduates Madhusudhan Talluri, Ph D Expected August 1995, Use of Superpages and Subblocking in the Address Translation Hierarchy, first employment: Sun Microsystems, current email: madhu@eng sun com Sarita V Adve, Ph D November 1993, Designing Memory Consistency Models for Shared-Memory Multiprocessors, first employment: Assistant Professor at Rice University, current email: sarita@rice edu Richard E Kessler, Ph D July 1991, Analysis of Multi-Megabyte Secondary CPU Cache Memories (click here for table of contents), first employment: Cray Research, current email: richard kessler@cray com Last Updated Wed Aug 14 16:52:16 CDT 1996 Keywords to help search engines rank this page higher than my other pages: Mark Hill Home Page, Computer Sciences, Wisconsin Mark Hill Home Page, Computer Sciences, Wisconsin Mark Hill Home Page, Computer Sciences, Wisconsin Mark Hill Home Page, Computer Sciences, Wisconsin 	1
58	 Saluja, Kewal K College of Engineering University of Wisconsin - Madison Kewal K Saluja Professor 4611 Engineering Hall 1415 Engineering Drive Madison, WI 53706 Tel: 608-262-6490 Fax: E-mail: saluja@engr wisc edu Portrait: 9K JPG Departments Electrical and Computer Engineering Computer Science Education PhD 1973, University of Iowa Research Interests design for testability, computer architecture, data compression, integrated circuits (VLSI), fault-tolerant computing My general area of research interest is test generation and testable and reliable design of digital systems To carry out research in this area we make extensive use of VLSI CAD and analysis tools The research involves modeling of faults, designing digital circuits, test generation, design modification for enhancing testability, built-in self-testing designs, fabrication of circuits and test application We are investigating techniques to make the test generation and fault simulation process efficient for both combinational and sequential circuits Data compression and compaction methods applicable in design for testability and built-in self-test environment are being investigated In the area of built-in self-test we are concentrating on regular structures such as programmable logic arrays and RAMs We are investigating self-test algorithms which can be implemented in hardware with little performance and area penalty In another project we are investigating ways to use built-in self-test hardware to test a system while it is performing its normal operation The goal is that the system is tested continuously as it operates with little or no impact on system performance Much of our work is performed using facilities of the VLSI digital system laboratory The laboratory houses a number of SUN stations with color monitors and terminals for programming and design [ UW | COE | Depts | Centers | Consortia | Services | Fountain ] [ Index | Search | Mail | What's New | Credits | Help ] Last Modified: Friday, 03-May-96 16:26:43 CDT This page is best viewed by browsers that support TABLES All photographs &#169; 1996 College of Engineering Address comments to webmaster@engr wisc edu Update Profile 	1
27	 Vladimir J Lumelsky's Home Page Vladimir J Lumelsky Professor Mechanical Engineering, Computer Sciences, and EC&E Depts University of Wisconsin-Madison E-mail: lumelsky@engr wisc edu Telephone: (608) 263-1659 Fax: (608) 265-2316 Ph D , Institute of Control Sciences, Russian National Academy of Sciences, Moscow, 1970 Research Interests: Robotics, Geometry and Complexity of Motion Planning, Kinematics, Cognitive and Information Aspects of Motion, Sensor-Based Intelligent Systems, Industrial Automation, Control Theory, Pattern Recognition Research My current research is in the area of fully automatic (robotic) and human-centered semi-automatic systems, and covers theoretical, simulation/animation, and experimental work In the area of fully automatic systems, our focus is on development of means for geometric reasoning and control necessary for automatic planning of motion in a complex environment A machine equipped with such means is able to purposely move in a complex scene with multiple, perhaps moving, obstacles of arbitrary shapes We are especially interested in a paradigm which assumes incomplete information and continuous real-time computation based on sensory feedback (e g , from vision or range sensors) This model suggests economic active sensing guided by the motion planning needs A strong factor in such systems is the effect of system dynamics and nonholonomic contstraints on real-time control As part of our work on human-centered systems, we study (jointly with cognitive scientists) human skills in motion planning and space orientation These results are then used for comparison with the performance of automatic systems and for developong hybrid physical (teleoperated) and computer graphics interaction systems The major property of such a hybrid system is that it blends together, in a synergistic manner, human and machine intelligences Our hardware/experimental work includes systems with massive real-time sensing and control (e g with thousands of sensors operating in parallel) Courses Recent Projects Selected Publications Maze-searching algorithms Effect of kinematics in sensor-based motion planning Dynamics and sensor-based control: the Jogger's Model Sensing and planning Decentralized intelligence: groups of robots Special topics in sensor-based motion planning: Tethered robots; Underwater robots; Kinematic redundancy Sensitive skin project Human-centered systems Computational Geometry Some global links IEEE Society of Robotics and Automation (IEEE RAS) IEEE RAS Tech Committee on Robot Motion & Path Planning Some Links at U-Wisconsin Robotics Lab Home Page College of Engineering Mechanical Engineering Dept Electrical and Computer Engineering Dept Computer Sciences Dept Mathematics Dept Mathematics and Computation in Engineering Graduate Program (MaCE) Sea Grant Institute 	1
175	 Amos Ron's Home Page --> --> --> key words for search engines: approximation theory, splines, wavelets, box splines, radial basis functions, shift-invariant spaces, approximation to scattered data, multiquadrics, thin-plate splines this page is Netscape 1 1+ enhanced --> to my homepage Amos Ron Associate Professor Department of Computer Sciences University of Wisconsin-Madison 1210 West Dayton Street Madison, Wisconsin 53706-1685 USA E-mail: amos@cs wisc edu Telephone: (608) 262-6621 Fax: (608) 262-9777 Amos Ron's Home Page is presently under --> --> Table of links At present, only items are accessible If you are here in order to download the paper Affine systems: the analysis of the analysis operator of Zuowei Shen and me, choose between the following versions: if you are using Unix, click HERE , to get a compressed version Otherwise, download the uncompressed version from HERE If none works, our ftp server may be down Try then to get a copy directly from my account HERE For CS513 handouts and email, click HERE Click my vita if you want to see my vita List of various publications, including abstracts Selected articles of mine Information about anonymous ftp site Carl de Boor and I maintain an ftp site at ftp cs wisc edu The site contains postscript and compressed postscript files of various articles of the approximation theory group at UW Also found there are technical files concerning TeX, vi and more, that should be useful to the general public I recommend that you click the read me file, which provides a list of available files, click there those that you wish to view (on-line), view them on-line, and download those you wish to My Ph D students , including information about their research and publications My main areas of interest , together with a short summary of my present research and future goals in each one of these The activity of the Approximation Theory group at the Univeristy of Wisconsin, Madison The activity of the Numerical Analysis group here Links to home pages of other people in the approximation theory community can be found HERE Miscellaneous topics and activities Finally, my official CS homepage Please deposit any comments you have in my mailbox 	1
176	 Home Page of Eric Bach Eric Bach Professor Computer Sciences Department University of Wisconsin 1210 W Dayton St Madison, WI 53706-1685 telephone: (608) 262-1204 fax: (608) 262-9777 email: bach@cs wisc edu Ph D , University of California, Berkeley, 1984 Interests: Theoretical computer science, computational number theory, algebraic algorithms, complexity theory, cryptography, six-string automata Research Summary I am interested in how one uses computers to efficiently solve algebraic and number-theoretic problems (example: how does one tell if a 100-digit number is prime without examining all possible factors ) These problems have intrinsic mathematical interest, as well as applications to random number generation, codes for reliable and secure information transmission, computer algebra, and other areas I am also interested in applying probability theory to the design and analysis of algorithms For example, if a large number is composite, it can be proved so by a simple test that uses an auxiliary number, called a `witness ' In practice one usually finds a witness by direct search among the small primes This leads to the following natural question How large is the least witness, as a function of the number tested In recent work, we have given an accurate heuristic model, based on probabilistic assumptions, that allows this, and similar questions, to be answered Recent Publications Improved approximations for Euler products, Proc CNTA-4 (Canadian Math Soc Proceedings, v 15) , 1995 DNA models and algorithms for NP-complete problems (with A Condon, E Glaser, S Tanguay), Proc 11th Annual Conf on Computational Complexity , 1996 Algorithmic Number Theory (Volume I: Efficient Algorithms) (with J Shallit), MIT Press, 1996 For info click on ANT-1 Curriculum Vitae This page created July 30, 1996 Email bach@cs wisc edu to report errors 	1
121	 Olvi L Mangasarian's Home Page Olvi L Mangasarian John von Neumann Professor of Mathematics and Computer Sciences, and member of the Center for the Mathematical Sciences Computer Sciences Department University of Wisconsin 1210 W Dayton St Madison, WI 53706-1685 Telephone: (608) 262-1204 Fax: (608) 262-9777 Email: olvi@cs wisc edu Ph D , Harvard University, 1959 Interests: Mathematical programming, machine learning, and parallel computing Research Summary Optimization theory is rich mathematically while being very effective computationally in solving many real-life problems My interests in this topic have ranged over a broad spectrum that encompasses theoretical aspects, such as error bounds for mathematical programs and variational inequalities, convergence proofs for parallel gradient and variable distribution algorithms for optimization, smoothing techniques for solving constrained optimization problems as differentiable nonlinear equations, as well as applications to machine learning, both in general and specific contexts An important aspect of my research is the use of mathematical programming techniques in diagnosing breast cancer, that has resulted in a highly accurate computerized diagnostic system in current use at University of Wisconsin Hospitals Current PhD Students Paul Bradley Recent Publications O L Mangasarian and M V Solodov A Linearly Convergent Descent Method for Strongly Monotone Complementarity Problems Mathematical Programming Technical Report 96-07, October 1996 O L Mangasarian and Jong-Shi Pang Exact Penalty Functions for Mathematical Programs with Linear Complementarity Constraints Mathematical Programming Technical Report 96-06, August 1996 O L Mangasarian Mathematical Programming in Data Mining Mathematical Programming Technical Report 96-05, August 1996 O L Mangasarian Error Bounds for Nondifferentiable Convex Inequalities under a Strong S later Constraint Qualification Mathematical Programming Technical Report 96-04, July 1996 P S Bradley, O L Mangasarian and W N Street Clustering via Concave Minimization Mathematical Programming Technical Report 96-03, May 1996 Submitted to Neural Information Processing Systems 1996 W N Street, O L Mangasarian and W H Wolberg Individual and Collective Prognostic Prediction Mathematical Programming Technical Report 96-01, January 1996 P S Bradley, O L Mangasarian and W N Street Feature Selection via Mathematical Programming Mathematical Programming Technical Report 95-21, December 1995 Submitted to INFORMS Journal on Computing O L Mangasarian Machine Learning via Polyhedral Concave Minimization Mathematical Programming Technical Report 95-20, November 1995 "Applied Mathematics and Parallel Computing -- Festschrift for Klaus Ritter", H Fischer, B Riedmueller, S Schaeffler, editors, Physica-Verlag, Germany 1996, 175-188 O L Mangasarian The Ill-Posed Linear Complementarity Problem Mathematical Programming Technical Report 95-15, August 1995 Submitted to SIAM Proceedings of the International Symposium on Complementarity Problems, Baltimore, MD, November 1-4, 1995 Revised November 1995 W Nick Street and O L Mangasarian Improved Generalization via Tolerant Training Mathematical Programming Technical Report 95-11, July 1995 O L Mangasarian Mathematical Programming in Machine Learning Mathematical Programming Technical Report 95-06, April 1995, Revised July 1995 To appear in Proceedings of Nonlinear Optimization and Applications Workshop, Erice June 1995, Plenum Press Chunhui Chen and O L Mangasarian Hybrid Misclassification Minimization Mathematical Programming Technical Report 95-05, February 1995, Revised July 1995 and August 1995 To appear in Advances in Computational Mathematics O L Mangasarian Optimization in Machine Learning Mathematical Programming Technical Report 95-01, January 1995 SIAG/OPT Views-and-News 6, 1995, 3-7 Chunhui Chen and O L Mangasarian A Class of Smoothing Functions for Nonlinear and Mixed Complementarity Problems Mathematical Programming Technical Report 94-11, August 1994 Revised October 1994, February 1995 and September 1995 Computational Optimization and Applications 5, 1996, 97-138 O L Mangasarian, W Nick Street and W H Wolberg Breast Cancer Diagnosis and Prognosis via Linear Programming Mathematical Programming Technical Report 94-10, August 1994 Revised December 1994 Operations Research 43(4), July-August 1995, 570-577 O L Mangasarian The Linear Complementarity Problem as a Separable Bilinear Program Mathematical Programming Technical Report 94-09, July 1994 Journal of Global Optimization 6, 1995, 153-161 O L Mangasarian and M V Solodov Backpropagation Convergence via Deterministic Nonmonotone Perturbed Minimization Mathematical Programming Technical Report 94-06, June 1994 Advances in Neural Information Processing Systems 6, (J D Cowan, G Tesauro and J Alspector, editors) 383-390, Morgan Kaufmann Publishers, San Francisco, California 1994 Chunhui Chen and O L Mangasarian Smoothing Methods for Convex Inequalities and Linear Complementarity Problems Computer Sciences Technical Report 1191r, November 1993 Revised November 1994 Mathematical Programming 71, 1995, 51-69 O L Mangasarian Misclassification Minimization Computer Sciences Technical Report 1186, October 1993 Revised September 1994 Journal of Global Optimization 5(4), December 1994, 309-323 O L Mangasarian and M V Solodov Serial and Parallel Backpropagation for Neural Nets via Nonmonotone Perturbed Minimnization Computer Sciences Technical Report 1149r, April 1993 Revised December 1993 Optimization Methods and Software 4, 1994, 103-116 Chronological cancer bibliography WWW Page of Other Publications of MP Group at Wisconsin ftp papers and reports View and download papers and reports of MP Group View home page of MP Group periodically updated by olvi@cs wisc edu 	1
144	 Pei Cao' Home Page Pei Cao ( cao@cs wisc edu) Assistant Professor of Computer Science Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA cao@cs wisc edu Phone: 608-262-2252 Departmental Office: 262-1204 Fax: 608-262-9777 Education Research Interests Courses Recent Papers Recent Talks Summary My Collection of Links Education: Ph D Princeton University, 1996 M S Princeton University, 1992 B S Tsinghua University, Beijing, China, 1990 Research Interests: Operating systems, high performance file systems, memory resource allocation; High performance I/O systems for parallel computers; Research Projects: Optimal Parallel Prefetching and Caching ACFS: Application Controlled File Caching and Prefetching Courses: CS739: Research Topics in Distributed Systems and Operating Systems (Fall 1996) CS736: Advanced Operating System (Spring 1996) Traces and Simulators: File Access Traces Recent Papers Integrated Parallel Prefetching and Caching Tracy Kimbrel, Pei Cao, Anna Karlin, Ed Felten, and Kai Li, Princeton CS Department Tech Report TR-502-95, November 1995 A shorter version is in the Proceedings of 1996 SIGMETRICS Conference Application Controlled File Caching and Prefetching (PhD thesis) Also Princeton CS Department Tech Report TR-522-96 Implementation and Performance of Integrated Application-Controlled Caching, Pre fetching and Disk Scheduling Pei Cao, Edward W Felten, Anna Karlin and Kai Li CS-TR-94-493, Princeton University To appear in ACM TOCS A Study of Integrated Prefetching and Caching Strategies Pei Cao, Edward W Felten, Anna Karlin and Kai Li CS-TR-94-479, Princeton University Proceedings of SIGMETRICS/Peformance '95 Implementation and Performance of Application Controlled File Cache Pei Cao, Edward W Felten, and Kai Li CS-TR-94-462, Princeton University, 1994 Proceedings of the First OSDI Symposium, 1994 Here are the slides of the presentation at OSDI94 Application-Controlled File Caching Policies Pei Cao, Edward W Felten, and Kai Li Proceedings of the USENIX Summer 1994 Technical Conference The TickerTAIP Parallel RAID Architecture Pei Cao, Swee Boon Lim, Shivakumar Venkataraman, and John Wilkes Proceedings of ISCA 93 Recent Talks Slides for "Application Controlled File Caching and Prefetching" ; Postscript of Page 26 and Postscript of Page 46 Research Summary My research focuses on I/O and storage management in uniprocessor and parallel systems In particular, I am investigating two techniques to improve file system performance: application-specific replacement policies for the file cache, and aggressive prefetching of file data from the disk I have developed a system in which the kernel allocates physical pages to individual applications, and each application is responsible for deciding how to use its physical pages for caching and prefetching The system uses a fair global allocation policy in the kernel, and carefully integrates cache replacement, prefetching and disk scheduling A prototype implementation on uniprocessor systems has demonstrated that good application-chosen replacement strategies and prefetching information can significantly improve the I/O performance of many applications Currently, I am extending these techniques to parallel systems I am developing integrated caching and prefetching algorithms for parallel disk arrays In addition, I am investigating the global resource management problems in operating systems Last modified: Wed Apr 24 21:38:49 1996 by Pei Cao cao@cs wisc edu 	1
126	 Guri Sohi's Home Page Gurindar S Sohi ( sohi@cs wisc edu) Associate Professor of Computer Sciences and Electrical and Computer Engineering Addresses Education Research Interests and Summary Current Graduate Students Recent Talks Recent Publications Recent Ph D Graduates Addresses: Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA sohi@cs wisc edu Phone: 608-262-7985 Departmental Office: 608-262-1204 Fax: 608-262-9777 Education: Ph D (Computer Science) University of Illinois - Urbana, 1985 M S (Electical Engineering) University of Illinois - Urbana, 1983 B E (Electrical and Electronics Engineering) Birla Institute of Technology and Science - Pilani, India, 1981 Research Interests: Instruction-level parallel (ILP) processing Compiling for ILP architectures Shared memory multiprocessors Memory Systems Research Summary My current research focuses on the design of the highest performance uniprocessors of a current generation Currently we are investigating the architecture of a circa 2000 processor With plenty of transistors available on a chip, the challenge is to use these resources to get the highest possible performance when executing a sequential program A target that we have set for ourselves is to sustain the execution of over 10 instructions per cycle, for ordinary non-numeric application programs My research group is investigating several issues that need to be resolved before our goals can be achieved We are studying and characterizing the nature of instruction-level parallelism in non-numeric application programs in order to understand the available parallelism and how it could be exploited The bulk of my group's research effort is expended in continuing the development of the Multiscalar processing model, a novel paradigm for exploiting ILP Currently we are developing the Multiscalar compiler, and carrying out detailed simulation studies to assess the potential of the Multiscalar concept Current Graduate Students Todd Austin Scott Breach Andreas Moshovos T N Vijaykumar Recent Talks Will Instruction Sets be Important in Future Processors given at the RISC in 1995 Symposium held at IBM T J Watson Research Center, Yorktown Heights, NY, November 7-8, 1995 File is compressed postscript, generated by Framemaker Multiscalar Processors The generic Multiscalar talk, given at several places File is compressed postscript, generated by Framemaker Recent Publications High-Bandwidth Address Translation for Multiple-Issue Processors , T M Austin and G S Sohi, to appear in 23rd Annual International Symposium on Computer Architecture, May 1996 An appendix of detailed results is also available ) Zero-Cycle Loads: Microarchitecture Support for Reducing Load Latency T M Austin and G S Sohi, 28th Annual International Symposium on Microarchitecture (MICRO-28), 1995 The Microarchitecture of Superscalar Processors J E Smith and G S Sohi, in Proceedings of the IEEE, December 1995 A Hardware Mechanism for Dynamic Reordering of Memory References M Franklin and G S Sohi, to appear in IEEE Transactions on Computers Multiscalar Processors, G S Sohi, S Breach, and T N Vijaykumar, 22th International Symposium on Computer Architecture, 1995 Streamlining Data Cache Access with Fast Address Calculation, T M Austin, D N Pnevmatikatos, and G S Sohi, 22th International Symposium on Computer Architecture, 1995 The Anatomy of the Register File in a Multiscalar Processor, S Breach, T N Vijaykumar, and G S Sohi, 27th Annual International Symposium on Microarchitecture (MICRO-27), 1994 Request Combining in Multiprocessors with Arbitrary Interconnection Networks, A Lebeck and G S Sohi, in IEEE Transactions on Parallel and Distributed Systems, 1994 Efficient Detection of All Pointer and Array Access Errors, T M Austin, S E Breach and G S Sohi, SIGPLAN '94 Conference on Programming Language Design and Implementation, 1994 Guarded Execution and Branch Prediction in Dynamic ILP Processors, D Pnevmatikatos and G S Sohi, 21th International Symposium on Computer Architecture, 1994 Memory Systems, J R Goodman and G S Sohi, The Handbook of Electrical Engineering, CRC Press, 1993 Control Flow Prediction for Dynamic ILP Processors, D Pnevmatikatos, M Franklin and G S Sohi, 26th Annual International Symposium on Microarchitecture (MICRO-26), 1993 Register Traffic Analysis for Streamlining Inter-operation Communication in Fine-Grain Parallel Processors, M Franklin and G S Sohi, 25th Annual International Symposium on Microarchitecture (MICRO-25), 1992 The Expandable Split Window Paradigm for Exploiting Fine-Grain Parallelism, M Franklin and G S Sohi, 19th International Symposium on Computer Architecture, 1992 Dynamic Dependency Analysis of Ordinary Programs, T M Austin and G S Sohi, 19th International Symposium on Computer Architecture, 1992 Efficient Detection of All Pointer and Array Access Errors T M Austin, S E Breach and G S Sohi, Technical Report #1197, Computer Sciences Department, University of Wisconsin-Madison, December 1993 Guarded Execution and Branch Prediction in Dynamic ILP Processors D N Pnevmatikatos and G S Sohi, Technical Report #1193, Computer Sciences Department, University of Wisconsin-Madison, November 1993 Knapsack: A Zero-Cycle Memory Hierarchy Component T M Austin, T N Vijaykumar, and G S Sohi, Technical Report #1189, Computer Sciences Department, University of Wisconsin-Madison, November 1993 Tetra: Evaluation of Serial Program Performance on Fine-Grain Parallel Processors T M Austin and G S Sohi, Technical Report #1162, Computer Sciences Department, University of Wisconsin-Madison, July 1993 Recent Ph D Grads Todd Austin, Ph D , April 1996, Hardware and Software Mechanisms for Reducing Load Latency Dionisios Pnevmatikatos, Ph D , December 1995, Incorporating Guarded Execution into Existing Instruction Sets Manoj Franklin, Ph D , December 1993, The Multiscalar Architecture Mark Friedman, Ph D , January 1992, An Architectural Characterization of Prolog Execution Sriram Vajapeyam, Ph D , December 1991, Instruction Level Characterization of the Cray Y-MP Processor Men-Chow Chiang, Ph D , September 1991, Memory System Design for Bus Based Multiprocessors Last Updated: 5 April 1996 	1
37	 Solomon's Home Page Marvin Solomon Professor and Former Chair (New chair is Jim Goodman ) Computer Sciences Department University of Wisconsin -- Madison 1210 West Dayton Street Madison, WI 53706-1685 USA Phone: (608) 262-1204 Fax: (608) 262-9777 solomon@cs wisc edu Research Interests: Object-oriented database systems, Software development support environments, Distributed operating systems, Computer networks, Design and implementation of programming languages, Programming language theory Recent Publications Towards Effective and Efficient Free Space Management Proc 1996 ACM SIGMOD Conf on Management of Data, June, 1996 Mark L McAuliffe , Michael J Carey , and Marvin Solomon Abstract PostScript The GMAP: A Versatile Tool for Physical Data Independence Proc Conf on Very Large Databases, September, 1994 Odysseas Tsatalos , Marvin Solomon , and Yannis Ioannidis Abstract PostScript Expanded version appears in The VLDB Journal v 5, n 2 (April 1996) Abstract PostScript Shoring Up Persistent Applications Proc 1994 ACM SIGMOD Conf on Management of Data, June, 1994 Michael J Carey , David J DeWitt , Michael J Franklin , Nancy E Hall , Mark L McAuliffe , Jeffrey F Naughton , Daniel T Schuh , Marvin H Solomon , C K Tan , Odysseas G Tsatalos , Seth J White , and Michael J Zwilling Available as Tech Report 1222 An Overview of the CAPITL Software Development Environment Fourth International Workshop on Software Configuration Management Paul Adams and Marvin H Solomon , Available as Tech Report 1143 An updated version is to appear in Lecture Notes in Computer Science POL: Persistent Objects with Logic Paul Adams and Marvin H Solomon , Available as Tech Report 1158 Other points of interest A graphical interface to the rooms program, built using Java CS 736 home page from Spring 1995 Univ of Wisconsin Computer Sciences Department SHORE project home page SHORE project photo album Today's Dilbert 	1
75	 Raghu Ramakrishnan's Home Page Raghu Ramakrishnan Associate Professor of Computer Science ( raghu@cs wisc edu ) Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street, Madison, WI 53706 USA Phone: 608-262-9759 (Department: 262-1204, Fax: 262-9777) Education Teaching Activities Research Interests Research Projects Ph D Graduates Education: Ph D University of Texas at Austin, 1987 B Tech , Indian Institute of Technology, Madras, 1983 Teaching Activities: Course text: Database Management Systems Software for educational use: Minibase and Coral The text Database Management Systems, published by McGraw-Hill, is aimed at first and second courses in database systems at the undergraduate and graduate levels The Minibase relational DBMS was developed in conjunction with this text The Coral system is also used in courses that deal with logic databases at several schools Research Interests: Integrating heterogeneous data sources Content-based querying and indexing of sequence and image data Exploratory analysis of large data sets (data mining) Extending database query languages using constraints and deduction As the use of databases grows and diversifies, it is increasingly important to be able to access data from dispersed, heterogeneous, independently developed sources easily In the RODIN project, and its successor, the C O D project, I am investigating several issues: formal techniques and practical toolkits for semantic integration, supporting multiple levels of service and access to a database, and database access in a networked cluster of machines This is joint work with Profs Ioannidis and Livny In recent work, the results on visual data exploration from the NEXT! project, which is joint work with Prof Livny, are being applied to data integration, and querying over the Web My second area of interest is content-based querying of complex data such as sequences and image sets The SEQ system deals with queries over sequence data, and focuses on DBMS design and optimization issues related to sequence data It is a part of the NEXT! project, and is joint work with Prof Livny An important aspect of this work is its use for identifying trends in the data, or in general, identifying useful patterns of information In the PIQ project, the goal is to support content-based retrieval from large sets of images Our focus is on developing and implementing an expressive data definition language that can be used to customize a general image database system to take advantage of specialized information about a given collection of images that is to be indexed and queried My interest in querying and analysis of data covers data exploration and mining We have developed a powerful clustering algorithm called BIRCH for large datasets and a visual data exploration tool called DEVise as part of the NEXT! project A long-standing research interest is the extension of relational database query languages with logic programming features such as structured terms and recursion, and the use of arithmetic constraints to specify data and queries more compactly and efficiently An ongoing project involves the continued development and use of the CORAL deductive system The evaluation is based upon bottom-up fixpoint evaluation techniques, and several optimizations are applied to make it efficient across a broad range of programs Research Projects: CORAL C O D NEXT! PIQ Ph D Graduates S Sudarshan, Ph D August 1992, Run-Time Optimizations in Bottom-Up Evaluation of Logic Programs, First employment: AT&T Bell Labs, Murray Hill (sudarsha@research att com) D Srivastava, Ph D August 1993, Deductive and Object-Oriented Languages, First employment: AT&T Bell Labs, Murray Hill (divesh@research att com) S Dar, Ph D August 1993, Design and Evaluation of Transitive Closure Algorithms, First employment: AT&T Bell Labs, Murray Hill (dar@research att com) P Seshadri, Ph D August 1996, Sequence Data Management First employment: Computer Sciences Department, Cornell University (praveen@cs cornell edu) 	1
137	 Susan B Horwitz Susan B Horwitz Professor Computer Sciences Department University of Wisconsin-Madison 1210 West Dayton Street Madison, WI 53706-1685 USA E-mail: horwitz@cs wisc edu Telephone: (608) 262-7946 Secretary: (608) 262-0017 Department: (608) 262-1204 Fax: (608) 262-9777 Ph D , Cornell University, 1985 Research interests: language-based programming environments program slicing, differencing, and merging static analysis of programs interprocedural dataflow analysis Research Summary My work mainly involves the design and implementation of language-based programming tools that help programmers with problems like: understanding how existing programs work, and how they would be affected by proposed modifications; understanding the textual, structural, and semantic differences between two versions of a program; retesting a program after changing it; combining pieces of old programs to produce a new program, with certain semantic guarantees This work has involved the use of a program representation called the program dependence graph (PDG) , and an operation called slicing I am also working on new algorithms for precise, interprocedural dataflow analysis Previous work on interprocedural dataflow analysis mainly concentrated either on efficient algorithms for specific individual problems, or on (not necessarily efficient) algorithms for a general class of problems Thomas Reps, Mooly Sagiv, and I have developed and implemented a new algorithm that is both efficient, and applies to a large class of problems Recent Publications M Shapiro and S Horwitz, Fast and accurate flow-insensitive points-to analysis , To appear in Conference Record of the Twenty-Fourth ACM Symposium on Principles of Programming Languages , (Paris, France, January 1997) S Horwitz, T Reps, and M Sagiv, Demand interprocedural dataflow analysis In Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering , (Washington DC, October 1995) M Sagiv, T Reps, and S Horwitz, Precise interprocedural dataflow analysis with applications to constant propagation In Proceedings of the Sixth International Joint Conference on the Theory and Practice of Software Development , (Aarhus Denmark, May 1995) T Reps, M Sagiv, and S Horwitz, Precise interprocedural dataflow analysis via graph reachability In Conference Record of the Twenty-Second ACM Symposium on Principles of Programming Languages , (San Francisco CA, January 1995) S Bates and S Horwitz, Incremental program testing using program dependence graphs In Conference Record of the Twentieth ACM Symposium on Principles of Programming Languages , (Charleston, SC, January 1993) S Horwitz and T Reps, The use of program dependence graphs in software engineering In Proceedings of the Fourteenth International Conference on Software Engineering , (Melbourne, Australia, May 1992) S Horwitz, Identifying the semantic and textual differences between two versions of a program In Proceedings of the SIGPLAN 90 Conference on Programming Language Design and Implementation , (White Plains, NY, June 1990) Teaching cs536 	1
197	 Jeffrey F Naughton Jeffrey F Naughton naughton@cs wisc edu Research Interests OLAP, multi-dimensional data analysis, parallel object-relational DBMS The overall goal of my research is the development of database systems that surpass current database systems both in performance and in ease of use Currently I have three main areas of interest (1) Techniques for improving the performance of multi-dimensional data analysis, including array-based storage and processing algorithms, bit-map indices, and algorithms for computing the "cube"; (2) The performance of object-relational database systems, including benchmarking O/R DBMS, algorithms for set-valued attributes, and techniques for parallelizing O/R workloads; (3) Parallel geo-spatial information systems Recent Publications On the Computation of Multidimensional Aggregates (with Sameet Agarwal, Rakesh Agrawal, Prasad M Deshpande, Ashish Gupta, Raghu Ramakrishnan, and Sunita Sarawagi In proceedings of the 22nd International Conference on Very Large Databases, Mumbai (Bombay), 1996 Storage Estimation for Multidimensional Aggregates in the Presence of Hierarchies (with Amit Shukla, Prasad M Deshpande, and Karthikeyan Ramasamy ) 22nd International Conference on Very Large Databases, Mumbai (Bombay), 1996 The BUCKY Object-Relational Database Benchmark (with Michael Carey, David DeWitt, Johannes Gerhke, Dhaval Shah, and Mohammed Asgarian) In preparation Toward a MOLAP ADT for an Object-Relational DBMS (with Yihong Zhao and Kristin Tufte, submitted for publication 	1
210	 Home Page of Miron Livny Miron Livny Professor Computer Sciences Department University of Wisconsin 1210 W Dayton St Madison, WI 53706-1685 telephone: (608) 262-1204 fax: (608) 262-9777 email: miron@cs wisc edu Ph D , Weizmann Institute of Science, Rehovot, Israel, 1984 Interests: Resource management algorithms, performance modeling and analysis, discrete event simulation Research Summary The major emphasis of my research is on the design and evaluation of resource management policies I have been involved in the development of new resource management policies for processing and data management systems For both types of systems, general-purpose as well as real-time scheduling algorithms have been considered My research involves performance studies of the different policies, with special emphasis on the interplay between the properties of the system and the performance of the policy Since most of my performance studies employ simulation, I am interested in discrete event modeling and simulation techniques I am currently in the process of implementing a simulation laboratory that is based on a novel simulation language The laboratory includes data management utilities, visualization tools, and graphical interfaces Sample Recent Publications Disk-tape joins: Synchronizing disk and tape access (with J Myllymaki), Proceedings of the ACM SIGMETRICS Conference , 1995 Sequence query processing (with P Sashadri and R Ramakrishnan), Proceedings of the ACM SIGMOD Conference , 1994 Foundations of visual metaphors for schema display (with E Haber and Y Ioannidis), Journal of Intelligent Information Systems , vol 3, no 3/4, July 1994 This page was automatically created October 30, 1995 Email pubs@cs wisc edu to report errors 	1
240	 Home Page of Charles N Fischer &nbsp&nbsp&nbsp&nbsp&nbsp&nbspCharles N Fischer &nbsp&nbsp&nbsp&nbsp&nbsp&nbspProfessor of Computer Sciences &nbsp&nbsp&nbsp&nbsp&nbsp&nbspUniversity of Wisconsin Computer Sciences Department University of Wisconsin 1210 W Dayton St Madison, WI 53706-1685 Telephone: (608) 262-6635 Messages: (608) 262-1204 Fax: (608) 262-9777 Email: fischer@cs wisc edu Teaching This semester I'm teaching CS 701, the graduate course in compilers In the spring I'll be teaching CS 536, the undergraduate course in compilers Research My research interests focus on compiler design and implementation Recently, I've been interested in how to best exploit the enormous capabilities provided by modern computer architectures Some of the issues my students and I have investigated include: Code scheduling is important to avoid unnecessary pipeline delays We have investigated issues in optimally scheduling arithmetic expressions The dominant model for global (procedure-level) register allocation is graph coloring Is this the best model Maybe not Other models that explicitly quantify the likelihood and benefit of register residence are very attractive Careful register allocation is vital in generating code -- unnecessary loads and stores must be avoided The ultimate in register allocation is interprocedural register allocation in which all the procedures of a program are analyzed We have studied interprocedural allocation models that optimally allocate register among procedures in polynomial time What's more, the approach seems to be effective in practice Anyone who codes in C or C++ knows how easy it is to make mistakes Errors involving pointers and array indices are especially common We have studied ways to automatically check all pointer and array operations at run-time on shared-memory multiprocessor workstations Using one processor to run a program and another to monitor the program, it is possible to routinely check programs as they execute, with little or no apparent slowdown Recent Publications "Minimum Cost Interprocedural Register Allocation," Steven M Kurlander and Charles N Fischer, POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, January, 1996 "Low-cost, Concurrent Checking of Pointer and Array Accesses in C Programs," Harish Patil and Charles N Fischer, to appear in Software--Practice and Experience "Demand-Driven Register Allocation," Todd A Proebsting and Charles N Fischer, to appear in ACM Transactions on Programming Languages and Systems "Efficient Instruction Scheduling for Delayed-Load Architectures," Steven M Kurlander, Todd A Proebsting and Charles N Fischer, ACM Transactions on Programming Languages and Systems, Vol 17, No 5, 740-776, (1995) "Zero-cost Range Splitting," Steven M Kurlander and Charles N Fischer, SIGPLAN '94 Conference on Programming Language Design and Implementation, June, 1994 Other Activities A new, completely revised second edition of "Crafting a Compiler," co-authored with Ron Cytron and Richard J LeBlanc, Jr is almost complete It will be published by Benjamin/Cummings Look for it soon at better bookstores everywhere I am the "Short Communications" Editor for ACM Transactions on Programming Languages and Systems (TOPLAS) Education Ph D , Cornell University, 1974 "On Parsing Context-Free Languages in Parallel Environments," supervised by John H Williams Ph D Students Donn R Milton, "Syntactic Specification and Analysis with Attributed Grammars," July 1977 Bruce R Rowland, "Semantic Attribute Evaluation During Syntactic Analysis," July 1977 Stephen K Skedzielewski, "Definition and Use of Attribute Reevaluation in Attributed Grammars," September 1978 Bernard A Dion, "Locally Least-Cost Error Correctors for Context-Free and Context-Sensitive Parsers," December 1978 Mahadevan Ganapathi, "Retargetable Code Generation and Optimization Using Attribute Grammars," November 1980 Vimal Begwami, "A New Approach for Attribute Evaluation and Error Correction in Compilers," August 1982 Jon Mauney, "Least-cost Syntactic Error Correction Using Extended Right Context," January 1983 Gregory F Johnson, "Context Sensitive Attribute Flow," August 1983 Anil Pal, "Generating Execution Facilities for Integrated Programming Environments," December 1986 William H Winsborough, "Automatic, Transparent Parallelization of Logic Programs at Compile Time," August 1988 G A Venkatesh, "A Framework for Specification and Implementation of Program Analysis Algorithms," August 1989 Todd A Proebsting, "Code Generation Techniques," August 1992 Steve Kurlander, "Approaches to Interprocedural Register Allocation," January 1996 Harish Patil, "Efficient Program Monitoring Techniques," June 1996 	1
102	 Bart Miller's Home Page Barton P Miller ( bart@cs wisc edu ) Professor Computer Sciences Department University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA T he following is a list of some of the things that I do Research Projects: Paradyn Parallel Performance Tools Fuzz Random Software Testing Teaching: CS537: Introduction to Operating Systems (Spring 1996) CS638/699: Honors Internet Seminar CS736: Advanced Operating Systems (Fall 1996) CS739: Distributed Systems Director, Undergraduate Projects Lab My Ph D Graduates Professional: 1996 Symposium on Parallel and Distributed Tools Monona Terrace (Frank Lloyd Wright) Convention Center Technical Advisory Group Personal: My "Official" CS Department Home Page Some Family Photos bart@cs wisc edu / Last modified: Tue Aug 13 15:11:33 CDT 1996 	1
160	 Home Page of David J DeWitt David J DeWitt Professor and Romnes Fellow Computer Sciences Department University of Wisconsin 1210 W Dayton St Madison, WI 53706-1685 Telephone: (608) 262-1204 Fax: (608) 262-9777 Email: dewitt@cs wisc edu Ph D , University of Michigan, 1976 Interests: Object oriented database systems, parallel database systems, database benchmarking, geographic information systems Research Summary My two main research projects are SHORE and Paradise The objective of SHORE is to design, implement, and evaluate a persistent object system that will serve the needs of a wide variety of target applications including hardware and software CAD systems, persistent programming languages, geographic information systems, satellite data repositories, and multimedia applications SHORE expands on the basic capabilities of the widely-used Exodus Storage Manager (developed at Wisconsin, funded by ARPA) in a number of ways including support for typed objects, multiple programming languages, a `Unix-like' hierarchical name space for named objects, and a Unix-compatible interface to objects with a `text' field This interface is intended to ease the transition of applications from the Unix file system environment to SHORE as existing Unix tools such as vi and cc will be able to store their data in SHORE objects without modification (basically a Unix file becomes either a single SHORE object or the text field of a complex object) SHORE is being targeted at a wide range of hardware environments, scaling all the way from individual workstations to heterogeneous client/server networks to large multiprocessors such as the Intel Paragon SHORE is a joint project with Profs Carey, Naughton, and Solomon The Paradise project is attempting to apply the technology developed as part of the SHORE and Gamma projects (Gamma is a parallel relational database system developed at the University of Wisconsin) to the task of storing and manipulating geographic data sets Currently, many geographic information systems (GIS) use relational database systems to hold their data While such systems are excellent for managing business data they are a poor match for the modeling needs of a GIS which must be capable of storing and manipulating much more complex objects such as polygons and polylines Instead, Paradise employs an object-oriented data model, providing a much better match to the type needs of a GIS Another significant difference from current GIS systems is that Paradise employs parallelism to facilitate executing and processing large data sets such as satellite images The target hardware platform for the project is a cluster of 64 Sparc 20s connected with ATM Sample Recent Publications The OO7 benchmark (with M Carey and J Naughton), Proceedings of the SIGMOD Conference , Washington, DC, May, 1993 Shoring up persistent applications (with D DeWitt, M Franklin, N Hall, M McAuliffe, J Naughton, D S chuh, C Tan, O Tsatalos, S White, and M Zwilling), Proceedings of the ACM SIGMOD International Conference on Management of Data , Minneapolis, MN, May, 1994 Client-server Paradise (with N Kabra, J Luo, J Patel, and J Yu), Proceedings of the Very Large Data Base Conference , Santiego, Chile, August, 1994 Recent Talks VLDB 95 Invited Talk 1996 Object-Relational Summit Presentation This page was automatically created January 18, 1995 Email pubs@cs wisc edu to report errors 	1
18	 John Strikwerda's Home Page John Strikwerda , Professor, Computer Sciences John C Strikwerda Department of Computer Sciences University of Wisconsin-Madison 1210 West Dayton Street Madison, Wisconsin 53706-1685 USA c v email: strik@cs wisc edu telephone: (608) 262-0822 fax: (608) 262-9777 This Fall I will be teaching CS310 , Problem Solving Using Computers Beginning in January 1997 I will be on assignment with the National Science Foundation for two years Click here for information about Numerical Analysis Qualifying exams Research Interests: Numerical Analysis Computational Fluid Dynamics My Official CS Department Home Page Other Stuff: The Field Museum Point: It's What You're Searching For A rating of web home pages and other information Chicago Best of the Web The Chicago Tribune Car Talk (the radio show about cars) Big 10 Football My kids: Nathan at NU Nathan Drew 	1
47	 Larry E Travis' Home Page Larry E Travis Professor Computer Sciences Department University of Wisconsin 1210 W Dayton St Madison, WI 53706-1685 E-mail: travis@cs wisc edu Telephone: (608) 262-6587 Fax: (608) 262-9777 Ph D , University of Californa, Los Angeles, 1966 Interests: Expert systems, non-procedural control of automatic deduction, computer support for understanding complex data, philosophical foundations of artificial intelligence, computing management, social implications of computing Research Summary My research centers around using logic as a basis for knowledge formalization in expert systems and for deductive augmentation of database systems Recent work has focused on non-procedural control of automatic deduction and on design of systems that support the contruction, display, and testing of high-level abstractions from patterns formed by information contained in large, heterogeneous databases Special attention is being devoted to the representation and use of geographic information in ways that enhance data integration and data visualizability (as with maps) I am actively involved with several expert system development projects and with a large "intelligent" database project that incorporates databases, "what if" modeling, and visualization aids into a single integrated system; with organizational and social issues associated with the introduction and use of information technology; and with analysis of the pre-suppositions underlying alternative approaches to artificial intelligence Current PhD Students Chuck Ohare Bryan So Scott Swanson Andy Whitsitt Derek Zahn Recent Publications If we could do it again: "Failures" in expert system development and implementation (with J Oravec) to appear in Journal of Systems and Software , 1992 The computational metaphor and artificial intelligence: A reflexive examination of AI's falsework (with D West) Artificial Intelligence Magazine , 1991 From society to landscape: Alternative metaphors for artificial intelligence (with D West) Artificial Intelligence Magazine , 1991 Some Interesting Links U-Wisc CS Dept U-Wisc AI Group Last Changed: June 4, 1994 by so@cs wisc edu 	1
223	 Home Page of Lawrence H Landweber Lawrence H Landweber Professor Computer Sciences Department University of Wisconsin 1210 W Dayton St Madison, WI 53706-1685 Telephone: (608) 262-1204 Fax: (608) 265-2635 Email: lhl@cs wisc edu Ph D , Purdue University, 1967 Interests: Computer networks and protocols, high speed networks, electronic mail Research Summary My research program focuses on high speed networks We are participating in the Gigabit project, a DARPA-NSF national project which involves the design and implementation of network testbeds operating at gigabit per second data rates At Wisconsin we are working on issues of protocol design, congestion and admission control, visualization of atmospheric phenomena and virtual conferencing Sample Recent Publications Design and implementation of a fast virtual circuit establishment method for ATM networks (with R Olsen), Proceedings of the IEEE INFOCOM Conference , San Francisco, April, 1993 Dynamic time windows: Packet admission control with feedback (with T Faber and A Mukherjee), Proceedings of the ACM SIGCOMM Conference , Baltimore, August, 1992 Dynamic time windows and generalized virtual clock: Combined closed-loop / open loop congestion control (with A Mukherjee and T Faber), Proceedings of the IEEE INFOCOM Conference , pp 322-332, Florence, May, 1992 Networking Courses Connectivity Table 	1
54	 Charles R Dyer's Home Page Charles R Dyer Professor Department of Computer Sciences University of Wisconsin-Madison 1210 West Dayton Street Madison , Wisconsin 53706-1685 USA E-mail: dyer@cs wisc edu Telephone: (608) 262-1965 Fax: (608) 262-9777 Finger info Ph D , University of Maryland, 1979 ( Curriculum Vitae ) Areas of Interest: Computer vision, three-dimensional shape representation, appearance modeling, view synthesis, active vision, visualization Group Leader, Wisconsin Computer Vision Group Program Co-Chair, CVPR '96 Research Interests View Synthesis The goal of this work is to develop basic tools for controlling in real-time, either autonomously or interactively, a virtual camera of a real environment The input is a set of images or video streams, acquired from fixed or mobile cameras around a site, and the output is a panoramic visualization of the scene in which a virtual, user-controlled camera can be moved through the environment With this technology a user could interactively navigate through a real environment, controlling a customized path of views of the site that are not predetermined by the input images The main research question is how to adaptively combine a set of basis images to synthesize new views of the scene without 3D models or 3D scene reconstruction as an intermediate step Recently we have developed an innovative technique, which we call view morphing , that takes two basis images and interpolates a continuous range of in-between images corresponding to views on the linear path connecting the two camera centers Visual Exploration Computer vision researchers have recently started to investigate how to actively control the image acquisition process by controlling camera parameters We have been studying how to purposefully control the position and orientation of a camera in order to dynamically adjust viewpoint based on the appearance of a three-dimensional scene The use of real-time viewpoint-control behaviors is important for solving tasks such as exploring an unknown object in order to find specific surface markings, building a global model of an unknown shape, or recognizing an object By coordinating simple observer behaviors that change the appearance of surfaces in a well-defined way, we simplify the image computations required, make precise the global progress of an algorithm, and eliminate the need for accurate differential measurements of the camera motion We believe that this active approach of moving towards viewpoints that are closely related to the geometry of the viewed objects is a very important and general one We have used this approach to develop provably-correct algorithms for (1) moving to a side view of a surface of revolution in order to recover its shape, and (2) reconstructing the global surface of an unknown smooth, arbitrarily-shaped object Visualization In the area of visualization we have developed mapping techniques capable of generating displays of all possible data objects defined in a user's algorithm, without the need for user-defined, type-specific graphics display procedures This capability for displaying arbitrary combinations of an algorithm's data objects in a common frame of reference, coupled with interactive control of algorithm execution, provides a powerful way to understand algorithm behavior, especially interactive visual experiments with scientific data analysis algorithms We have implemented a system called VIS-AD for experimenting with these techniques and have used it for visualizing intermediate and final results of data analysis algorithms for problems such as discriminating clouds in satellite images Recent Publications S M Seitz and C R Dyer, Cyclic motion analysis using the period trace, in Motion-Based Recognition , M Shah and R Jain, eds , Kluwer, Boston, to appear S M Seitz and C R Dyer, View-invariant analysis of cyclic motion, Int J Computer Vision , to appear S M Seitz and C R Dyer, View morphing , Proc SIGGRAPH 96 , 1996, 21-30 S M Seitz and C R Dyer, Toward image-based scene representation using view morphing , Proc 13th Int Conf Pattern Recognition, Vol I, Track A: Computer Vision , 1996, 84-89 L Yu and C R Dyer, Shape recovery from stationary surface contours by controlled observer motion , in Advances in Image Understanding: A Festschrift for Azriel Rosenfeld , IEEE Computer Society Press, Los Alamitos, Ca , 1996, 177-193 K N Kutulakos and C R Dyer, Global surface reconstruction by purposive control of observer motion , Artificial Intelligence 78 , No 1-2, 1995, 147-177 S M Seitz and C R Dyer, Complete scene reconstruction from four point correspondences , Proc 5th Int Conf Computer Vision , 1995, 330-337 S M Seitz and C R Dyer, Physically-valid view synthesis by image interpolation , Proc Workshop on Representation of Visual Scenes , 1995, 18-25 K N Kutulakos and C R Dyer, Recovering shape by purposive viewpoint adjustment , Int J Computer Vision 12 , 1994, 113-136 K N Kutulakos, W B Seales, and C R Dyer, Building global object models by purposive viewpoint control , Proc 2nd CAD-Based Vision Workshop , 1994, 169-182 K N Kutulakos, C R Dyer, and V J Lumelsky, Provable strategies for vision-guided exploration in three dimensions , Proc 1994 IEEE Int Conf Robotics and Automation , 1994, 1365-1372 K N Kutulakos and C R Dyer, Occluding contour detection using affine invariants and purposive viewpoint control , Proc Computer Vision and Pattern Recognition Conf , 1994, 323-330 S M Seitz and C R Dyer, Affine invariant detection of periodic motion , Proc Computer Vision and Pattern Recognition Conf , 1994, 970-975 S M Seitz and C R Dyer, Detecting irregularities in cyclic motion , Proc Workshop on Motion of Non-Rigid and Articulated Objects , 1994, 178-185 W L Hibbard, B E Paul, A L Battaiola, D A Santek, M-F Voidrot-Martinez, and C R Dyer, Interactive visualization of earth and space science computations , Computer 27 , No 7, July 1994, 65-72 W L Hibbard, C R Dyer, and B E Paul, A lattice model for data display , Proc Visualization '94 , 1994, 310-317 Recent publications (including abstracts) by Wisconsin Computer Vision Group Courses Taught CS 540 - Introduction to Artificial Intelligence (Spring 1996, Fall 1996) CS 766 - Computer Vision (Fall 1995, Spring 1997) Current Ph D Students Gareth Bestor Brian Morgan Steve Seitz Liangyin Yu Ph D Graduates Bill L Hibbard , Ph D 1995 ( whibbard@macc wisc edu ) Visualizing Scientific Computations: A System based on Lattice-Structured Data and Display Models Kiriakos N Kutulakos , Ph D 1994 ( kyros@cs rochester edu ) Exploring Three-Dimensional Objects by Controlling the Point of Observation Mark C Allmen , Ph D 1991 ( allmen@iutech den mmc com ) Image Sequence Description using Spatiotemporal Flow Curves: Toward Motion-Based Recognition W Brent Seales , Ph D 1991 ( seales@dcs uky edu ) Appearance Models of Three-Dimensional Shape for Machine Vision and Graphics W Harry Plantinga , Ph D 1988 ( whp@wheaton edu ) The Asp: A Continuous, Viewer-Centered Object Representation for Computer Vision Charles V Stewart , Ph D 1988 ( stewart@cs rpi edu ) Connectionist Models of Stereo Vision Bradley P Kjell , Ph D 1985 ( kjell@ccsua ctstateu edu ) Oriented Edge Separation Texture Measures Links of Interest My Bookmarks 	1
219	 Duffie, Neil A College of Engineering University of Wisconsin - Madison Neil A Duffie Professor 407 Engineering Research Building 1500 Engineering Drive Madison, WI 53706 Tel: 608-262-9457 Fax: 608-262-9458 E-mail: duffie@engr wisc edu Portrait: 45K JPG Departments Mechanical Engineering Education BS, 1972, University of Wisconsin-Madison MS, 1974, University of Wisconsin-Madison PhD, 1980, University of Wisconsin-Madison Research Interests robotics, computer control, manufacturing systems, precision engr , computer-integrated manufacturing, micromechanisms Centers and Consortia Manufacturing Systems Engineering Program Wisconsin Center for Space Automation and Robotics Professor Duffie's research in manufacturing systems involves integrating sensors, actuators, computers and data bases into advanced automated production systems He has developed controls for self-guided inspection machines and welding robots, high-performance material handling systems, and automated finishing systems for mold and die production and rework He is studying highly distributed, non-hierarchical system control architectures in hope of reducing cost and complexity in large-scale, computer-controlled manufacturing systems while increasing flexibility and fault tolerance Duffie has constructed several experimental manufacturing systems that incorporate real-time, fully distributed scheduling and optimization into their control systems He is developing theories explaining the properties and performance of these systems Duffie is associate director of the Wisconsin Center for Space Automation and Robotics Research at the NASA-funded center emphasizes automated agriculture systems, sensors for tactile feedback to human operators in telerobotic systems, and methods for performance evaluation, as well as human factors research in sensory feedback and fatigue He has developed a telerobotics test bed in which experimental work is carried out Duffie works closely with manufacturing and aerospace industries and teaches courses on manufacturing systems, automatic controls and computer controls He co-authored Computer Control of Machines and Processes [ UW | COE | Depts | Centers | Consortia | Services | Fountain ] [ Index | Search | Mail | What's New | Credits | Help ] Last Modified: Tuesday, 08-Oct-96 09:53:37 CDT This page is best viewed by browsers that support TABLES All photographs &#169; 1996 College of Engineering Address comments to webmaster@engr wisc edu Update Profile 	1
218	 Shapiro, Vadim College of Engineering University of Wisconsin - Madison Vadim Shapiro Assistant Professor 355 Mechanical Engineering 1513 University Avenue Madison, WI 53706 Tel: 608-262-3591 Fax: 608-265-2316 E-mail: vshapiro@engr wisc edu Portrait: 46K JPG URL: http://sal-cnc me wisc edu Departments Computer Science Mechanical Engineering Education BA 1981, New York University MS 1983, University of California, Los Angeles MS 1989, Cornell University PhD 1991, Cornell Univeristy Research Interests computer-aided design and manufacturing, applied computational geometry, geometric and solid modeling, physical modeling, analysis and simulation, design and production automation Centers and Consortia Mathematics and Computation in Engineering Graduate Program Manufacturing Systems Engineering Program Spatial Automation Laboratory Selected Awards and Honors National Science Foundation CAREER Award, 1995 General Motors Fellow, 1986-1990 Selected Publications "Maintenance of geometric representations through space decompositions," International Journal on Computational Geometry and Applications , 1995 "Chain models of physical behavior for engineering analysis and design," Research in Engineering Design , Vol 5, No 3, April 1994 (with R S Palmer) "Real functions for representation of rigid solids," Computer-Aided Geometric Design , Vol 11, No 2, April 1994 "Separation for boundary to CSG conversion," ACM Transactions on Graphics , January 1993 (with D L Vossler) Professor Shapiro's research interests center on relationships between geometry and physical phenomena, so that mechanical artifacts can be modeled, represented, analyzed, manipulated, designed, and manufactured based on computer representations and algorithms Some specific ongoing projects include: Geometric Modeling: Ability to create, convert between, and to maintain consistency of distinct representations of mechanical parts is a major technological barrier that undermines the usefulness and reliability of commercial geometric modeling systems Current research efforts focus on eliminating ambiguity in communicating engineering specifications, formal modeling of parametric families of mechanical parts, and investigating novel methods and computational techniques in support of design and manufacturing Mechanical Design: Today mechanical forms, functions, and fabrication processes cannot be described combinatorially, in terms of discrete, simple, and interacting primitives; this apparent lack of combinatorial structure is a major roadblock for competitive design and manufacturing of mechanical systems In collaboration with industry, the present research deals with theoretical, practical, and computational aspects of mechanical design and seeks to establish a formal basis for making mechanical design and manufacturing of parts more systematic and competitive, and for smooth integration of mechanical form modeling with other engineering activities Physical Modeling: Geometric models contain only part of the information needed to capture the desired physical behavior of an artifact, and the processes used to manufacture it Recent study of algebraic topological models (so called "chain models") of physical behavior suggests that it may be possible to unify physical and geometric modeling and thus facilitate development of new computer-aided engineering tools Current investigations use these and other models of physical behavior to develop new engineering languages and computer algorithms for systematic specification, modeling, simulation, and analysis of physical objects and systems [ UW | COE | Depts | Centers | Consortia | Services | Fountain ] [ Index | Search | Mail | What's New | Credits | Help ] Last Modified: Thursday, 18-Jul-96 10:39:07 CDT This page is best viewed by browsers that support TABLES All photographs &#169; 1996 College of Engineering Address comments to webmaster@engr wisc edu Update Profile 	1
107	 Yannis Ioannidis Yannis E Ioannidis yannis@cs wisc edu Research Interests Database management systems, scientific databases, user interfaces and information visualization, complex query optimization, heterogeneous databases My research primarily focuses on two areas of database systems: optimization of complex queries and database support for scientific data Future database applications pose several new challenges to query optimization The complexity of queries asked will be significantly higher than in traditional systems The number of alternative evaluation algorithms will be much higher as well, especially with the use of parallelism or with attempts to optimize for several values of run-time parameters (parametric query optimization) Thus, the number of alternative access plan for processing a query will be extremely large, so that the currently used algorithms for finding the optimum among them will be inadequate My research investigates the use of randomized optimization algorithms as a viable solution to this problem I am primarily interested in simulated annealing and genetic algorithms, as well as other alternatives that take advantage of special properties of query optimization I am also looking into complex query scheduling problems, especially those that arise in parallel and multimedia environments Error propagation of size and cost estimates in complex queries are also part of my studies, where I am trying to identify the appropriate information that must be maintained by a database system to limit the propagation of error To that end, I'm primarily focusing on identifying the properties of optimal histograms that approximate the distribution of values in relation attributes The computational mode of investigation is expected to be part of many experiments in various scientific disciplines in the future The databases to be generated need specialized support on many aspects that current technology is not ready to provide I am involved in the development of the {\it ZOO Desktop Experiment Management Environment} that will help scientists throughout the life cycle of their experimental studies A primary component of that system will be a database system Two major issues that my work addresses are visual user interfaces and semantic heterogeneity In the former, I'm concentrating on identifying what the right metaphors are for representing complex database schemas, queries, and objects to scientists so that they are natural to them, and also on investigating the power of {\it dynamic visual queries} In the latter, I'm concentrating on developing visual tools that will facilitate translation and integration of different data formats or schemas Although these issues are generic and arise in all experimental scientific disciplines, my efforts are guided by the needs of specific projects with which I am associated, in particular, simulation-based performance studies of computer systems, simulation-based modeling of plant growth, NMR spectroscopy, DNA sequencing, and microscopic imaging Recent Publications Y Ioannidis, "Query Optimization", ACM Computing Surveys, symposium issue on the 50th Anniversary of ACM, Vol 28, No 1, March 1996, pp 121-123 M Garofalakis and Y Ioannidis, "Scheduling Issues in Multimedia Query Optimization", ACM Computing Surveys, symposium issue on Multimedia Systems, Vol 27, No 4, December 1995, pp 590-592 Y Ioannidis and R Ramakrishnan, "Containment of Conjunctive Queries: Beyond Relations As Sets", ACM Transactions on Database Systems (TODS), Vol 20, No 3, September 1995, pp 288-324 E Haber, Y Ioannidis, and M Livny, "Foundations of Visual Metaphors for Schema Display", Journal of Intelligent Information Systems, Vol 3, No 3/4, July 1994, pp 263-298 (Special issue on Visual Information Systems ) Y Ioannidis and M Tsangaris, "The Design, Implementation, and Performance Evaluation of BERMUDA", IEEE Transactions on Knowledge and Data Engineering (TKDE), Vol 6, No 1, February 1994, pp 38-56 R Miller, Y Ioannidis, and R Ramakrishnan, "Translation and Integration of Heterogeneous Schemas: Bridging the Gap between Theory and Practice", Information Systems, Vol 19, No 1, January 1994, pp 3-31 Y Ioannidis and S Christodoulakis, "Optimal Histograms for Limiting Worst-Case Error Propagation in the Size of Join Results", ACM Transactions on Database Systems (TODS), Vol 18, No 4, December 1993, pp 709-748 Y Ioannidis, R Ramakrishnan, and L Winger, "Transitive Closure Algorithms Based on Graph Traversal", ACM Transactions on Database Systems (TODS), Vol 18, No 3, September 1993, pp 512-576 Y Ioannidis, "Dynamic Information Visualization", ACM Sigmod Record, Vol 24, No 4, December 1996 Y Ioannidis and V Poosala, "Histogram-Based Solutions to Diverse Database Estimation Problems", IEEE Data Engineering, Vol 18, No 3, September 1995, pp 10-18 Y Ioannidis, M Livny, S Gupta, and N Ponnekanti, "ZOO: A Desktop Experiment Management Environment", Proc 22nd International VLDB Conference, Bombay, India, September 1996, pp 274-285 V Poosala and Y Ioannidis, "Estimation of Query-Result Distribution and its Application in Parallel-Join Load Balancing", Proc 22nd International VLDB Conference, Bombay, India, September 1996, pp 448-459 V Anjur, Y Ioannidis, and M Livny, "Frog and Turtle: Visual Bridges Between Files and Object-Oriented Data", Proc 8th International Conference on Scientific and Statistical Database Management, Stockholm, Sweden, June 1996, pp 76-85 M Garofalakis and Y Ioannidis, "Multi-Dimensional Resource Scheduling for Parallel Queries", Proc 1996 International ACM SIGMOD Conference, Montreal, Canada, May 1996, pp 365-376 V Poosala, Y Ioannidis, P Haas, and E Shekita, "Improved Histograms for Selectivity Estimation of Range Predicates", Proc 1996 International ACM SIGMOD Conference, Montreal, Canada, May 1996, pp 294-305 Y Ioannidis, M Livny, J Bao, and E Haber, "User-Oriented Visual Layout at Multiple Granularities", Proc 3nd International Workshop on Advanced Visual Interfaces, Gubbio, Italy, May 1996, pp 184-193 E Haber, Y Ioannidis, and M Livny, "OPOSSUM: Desk-Top Schema Management through Customizable Visualization", Proc 21st International VLDB Conference, Zurich, Switzerland, September 1995, pp 527-538 Y Ioannidis and V Poosala, "Balancing Histogram Optimality and Practicality for Query Result Size Estimation", Proc 1995 International ACM SIGMOD Conference\fP, San Jose, CA, May 1995, pp 233-244 O Tsatalos, M Solomon, and Y Ioannidis, "The GMAP: A Versatile Tool for Physical Data Independence", Proc 20th International VLDB Conference, Santiago, Chile, September 1994 O Tsatalos and Y Ioannidis, "A Unified Framework for Indexing in Database Systems", Proc 4th International DEXA Conference, Athens, Greece, September 1994 Y Ioannidis and M Lashkari, "Incomplete Path Expressions and their Disambiguation", Proc 1994 International ACM SIGMOD Conference, Minneapolis, MN, May 1994, pp 138-149 E Haber, Y Ioannidis, and M Livny, "OPOSSUM: A Flexible Schema Visualization and Editing Tool", Proc 1994 ACM CHI Conference, Boston, MA, April 1994 R Miller, Y Ioannidis, and R Ramakrishnan, "Translation and Integration of Heterogeneous Schemas: Bridging the Gap between Theory and Practice", Proc 4th International EDBT Conference, Cambridge, England, March 1994, pp 73-80 Y Ioannidis, "Universality of Serial Histograms", Proc 19th International VLDB Conference, Dublin, Ireland, August 1993, pp 256-267 R Miller, Y Ioannidis, and R Ramakrishnan, "The Use of Information Capacity in Schema Integration and Translation", Proc 19th International VLDB Conference, Dublin, Ireland, August 1993, pp 120-133 J Wiener and Y Ioannidis, "A Moose and a Fox Can Aid Scientists with Data Management Problems", Proc 4th International Workshop on Database Programming Languages, New York, NY, August 1993 	1
39	 Jim Goodman's Home Page James R Goodman ( goodman@cs wisc edu) Professor of Computer Sciences Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706 USA Research Interests: Lots of good stuff Current Projects: Galileo and SCI at Wisconsin Last Updated: May 2, 1994 	1
165	 Periodic Motion Information Periodic and Cyclic Motion Analysis Steve Seitz , Chuck Dyer Many real-life motions are periodic in some frame of reference For instance, most human locomotory motions (e g , walking running, skipping, shuffling) are periodic in a frame of reference that moves with the person We have developed an approach for determining if an image sequence could have been produced by an object whose motion is periodic in some reference frame Unlike all previous attempts to determine periodicity information, our approach allows the camera to move during filming For more information (1 3M poscript paper), click here Period Trace This image shows the period trace (red lines) recovered from an image sequence of a phonograph turntable Ramps correspond to moments in time where the turntable was momentarily slowed The period trace is shown superimposed on the error surface from which it was recovered Real repeating motions tend not to be perfectly even, i e , the period varies slightly from one cycle to the next, because of physically important changes in the scene A generalization of period is defined for cyclic motions that makes periodic variation explicit This representation, called the period trace , is compact and purely temporal, describing the evolution of an object or scene without reference to spatial quantities such as position or velocity By delimiting cycles and identifying correspondences across cycles, the period trace provides a means of temporally parsing a cyclic motion In addition, several purely temporal motion features can be derived, relating to the nature and location of irregularities The period trace can also be used for medical image enhancement by compositing images from different cycles Furthermore, the period trace can be reliably recovered from image sequences in a view-invariant fashion using a theory of affine invariance For more information (1 3M poscript paper) click here Heart X-ray Image Enhancement Top: two corresponding angiographic images determined from period trace Bottom: composite of 5 such corresponding images Note additional structure visible in composite but not apparent in single raw images 	2
50	 Paradyn Project Home Page Paradyn Parallel Performance Tools Release Information This page contains describes how you can get a copy of Release 1 1 of the Paradyn tools Project Goals The Paradyn Parallel Program Performance Tools project is exploring new approaches to building scalable tools for parallel program performance Technical Papers Paradyn Manuals Status Report A recent status report (Jan '95) on the Blizzard/Paradyn Project 1996 ARPA CSS PI Meeting Panel Presentation This presentation was made at the 1996 ARPA CSTO meeting in San Antonio 1995 ARPA CSTO "Super Symbol Table" Presentation This presentation was made at the 1995 ARPA CSTO meeting in Florida This project is an effort to develop common access routines to compiler-generated information used by tools for high-level parallel languages Project Staff Super Computing 1994 Poster A hypertext version of our poster from Super Computing 1994 Related Projects Elsewhere SPDT 96 1st ACM/SIGMETRICS Symposium on Parallel and Distributed Tools You can also see: Restaurants (this is included in the Paradyn page as a temporary placeholder) Contact Information Paradyn Project Department of Computer Sciences University of Wisconsin 1210 West Dayton Street Madison, WI 53706 Email: paradyn@cs wisc edu FAX: (608) 262-9777 Last modified: Tue Oct 1 17:12:32 CDT 1996 by bart@cs wisc edu 	2
231	 Coral Database Project Coral Database Project Document Contents: Objective Overview Release Information See Also: Publications related to Coral People working on Coral Other Research at UW-Madison Objective: The objective of the CORAL project is to develop a robust and efficient deductive database system, and to investigate its use in various application domains Several of the algorithms underlying the Coral system have been developed by members of the group during the duration of the project (since 1988) Overview: Coral is a deductive system which supports a rich declarative language, and an interface to C++ which allows for a combination of declaritive and imperative programming The declarative query language supports general Horn clauses augmented with complex terms, set-grouping, aggregation, negation, and relations with tuples that contain (universally quantified) variables A CORAL declarative program can be organized as a collection of interacting modules The CORAL implementation supports a wide range of evaluation strategies, and automatically chooses an efficient evaluation strategy for each module in the program In addition, users are permitted to guide query optimization, if desired, by selecting from among a wide range of control choices at the level of each module The CORAL system provides imperative constructs such as update, insert and delete rules CORAL also has an interface with C++, and users can program in a combination of declarative CORAL and C++ extended with CORAL primitives A high degree of extensibility is provided by allowing C++ programmers to use the class structure of C++ to enhance the CORAL implemenation CORAL provides support for both main-memory and disk-resident data Disk-resident data is supported using the EXODUS storage mananger, which also provides transaction management in a client-server environment Release Information: The current release of Coral is Version 1 5, released October 10, 1996 To install Coral on your system, then grab the tar file you want The nobin version contains only the source code, requiring you to compile Coral The other versions include pre-made binaries for the indicated machine type Click on a file to grab it: README : General information Installation Manual for Coral : Instructions for installation coral-1 5 nobin tar gz : No binaries included coral-1 5 hpux tar gz : HP-UX (series 700) binaries included coral-1 5 sun4 tar gz : SunOs 4 binaries included coral-1 5 sun5 tar gz : Sun Solaris binaries included coral-1 5 sol386 tar gz : PC Solaris binaries included coral-1 5 linux tar gz : Linux binaries included To stay informed of new releases, you can add yourself to Coral's announcemnt mailing list which recieves announcements of releases and other relevant information Releases are also announced on the newsgroup comp lang misc You may also submit questions, comments, or bug reports for coral Or send mail to: coral@cs wisc edu Last Modified: October 10, 1996 Shawn Flisakowski / flisakow@cs wisc edu 	2
157	 Pattern Separation via Mathematical Programming Pattern Separation via Mathematical Programming This WWW page describes work in Pattern Separation via Linear Programming in the Mathematical Programming section of the University of Wisconsin-Madison Computer Sciences Department Brief History and Method Outline Mathematical optimization approaches, in particular linear programming, have long been used in problems of pattern separation In [65] linear programs were used to construct planes to separate linearly separable point sets Separation by a nonlinear surface using linear programming was also described, whenever the surface parameters appeared linearly, e g a quadratic or polynomial surface These formulations however could fail on sets that were not separable by a surface linear in its parameters A Multisurface Method (MSM) [68,93] avoided this difficulty MSM separates 2 disjoint finite point sets in n -dimensional Euclidean space as follows: Choose 2 parallel planes in n -dimensional Euclidean space as close together so that only the region between the two planes contains points from both sets (i e the regions NOT between the 2 parallel planes contain only points of 1 set or no points) Discard the points in the regions not between the 2 parallel planes Repeat the process on the points between the 2 parallel planes, until the region between the 2 parallel planes contains no points or very few points Multisurface Method Tree (MSM-T), a variant on the Multisurface Method was developed in [92a], [92b], [93] Let A and B be finite disjoint point sets in n -dimensional Euclidean space The goal of MSM-T is to determine a sequence of planes in n -dimensional Euclidean space that separate the sets A and B as follows: Determine a plane in n -dimensional Euclidean space that minimizes the average "distances" of misclassified points A point from set A is misclassified if it lies on the side of the separating plane assigned to B Similarly, a point from set B is misclassified if it lies on the side of the separating plane assigned to A If the regions assigned to A and B contain only (or mostly) points of the set A or B , then stop Otherwise, generate another error-minimizing plane (in 1 ) in this region The sequence of planes generated can be viewed as a decision tree For each node in the tree, the best split of the points reaching that node is found by solving the LP in 1, above The node is split into 2 branches, and the same procedure is applied until there are only (or mostly) points of one set at the node This linear programming approach can also be viewed as training a neural network with 1 hidden layer (see [93] ) MSM-T has been shown to learn concepts as well or better than more traditional learning methods such as C4 5 and CART It also has an advantage over artificial neural network (ANN) methods such as backpropagation in that training proceeds much faster (see [92a] ) Implementations of MSM-T MSM-T has been implemented in C using the MINOS numerical optimization package by Nick Street and Kristin Bennett MSM-T has also been implemented for the MATLAB optimization package by Paul Bradley Following is a description of the MATLAB implementation of MSM-T Together with the M-files required to run it Chronological Bibliography [65] O L Mangasarian Linear and Nonlinear Separation of Patterns by Linear Programming Operations Research, Vol 13, No 3, May-June, 1965, pages 444 - 452 [68] O L Mangasarian Multisurface Method of Pattern Separation IEEE Transactions on Information Theory, Vol IT-14, No 6, November 1968, pages 801 - 807 [92a] K P Bennett Decision Tree Construction via Linear Programming Proceedings of the 4th Midwest Artificial Intelligence and Cognitive Science Society Conference, 1992, pages 97 - 101 [92b] K P Bennett and O L Mangasarian Robust Linear Programming Discrimination of Two Linearly Inseparable Sets Optimization Methods and Software, Vol 1, 1992, pages 23 - 34 [93] O L Mangasarian Mathematical Programming in Neural Networks ORSA Journal on Computing, Vol 5, No 4, Fall 1993, pages 349 - 360 Last modified: Wed Jul 12 10:40:37 1995 by Paul Bradley paulb@cs wisc edu 	2
63	 University of Wisconsin Robotics Lab Home Page UW-Madison Robotics Lab 302 Mechanical Engineering 1513 University Avenue Madison, WI 53706 Vladimir Lumelsky , Director About the Lab Brief Review of the Lab's Research Activities People in the Lab Lab Technical Reports (compressed postscript available) The Simulation Library, v2 0 Related Courses Robotics Seminar Recent Projects and Selected Publication Abstracts Maze-searching algorithms Effect of kinematics in sensor-based motion planning Dynamics and sensor-based control: the Jogger's Model Sensing and planning Decentralized intelligence: groups of robots Special topics in sensor-based motion planning: Tethered robots; Underwater robots; Kinematic redundancy Sensitive skin project Human-centered systems Computational Geometry Related Research at UW--Madison Neil A Duffie -- Manufacturing Systems Chuck Dyer -- Computer Vision Robert Lorenz -- Sensors and Actuators Jude Shavlik -- Machine Learning Robotics links IEEE Society of Robotics and Automation (IEEE RAS) IEEE RAS Tech Committee on Robot Motion & Path Planning Robotics Internet Resources Page Robotics Web Servers ROBOTICS NASA Telerobotics Research Program Robotics Frequently Asked Questions List Local links UW-Madison CS Dept UW-Madison AI Group UW-Madison College of Engineering Comments/suggestions/errata: hert@cs wisc edu 	2
64	 Condor Project Homepage Objective: The goal of the Condor project is to develop, implement, deploy, and evaluate mechanisms and policies that support High Throughput Computing (HTC) on large collections of distributively owned computing resources Guided by both the technological and sociological challenges of such a computing environment, the Condor Team has been building software tools that enable scientists and engineers to increase their computing throughput Introduction --> How Did It Start High Throughput Computing (HTC) Research The Condor System Condor Pools at University of Wisconsin, Madison Condor Help Page at CAE DBC Project Home Page Condor-World Mailing List Any comments or suggestions condor-admin@cs wisc edu Last Modified Sun Sep 15 1996 	2
46	 View Morphing (by Steve Seitz) View Morphing Investigators: Steve Seitz , Chuck Dyer Related Publications: View Morphing --- to appear in SIGGRAPH 96 Toward Image-Based Scene Representation Using View Morphing --- to appear in ICPR 96 Image morphing techniques can generate compelling 2D transitions between images However, differences in object pose or viewpoint often cause unnatural distortions in image morphs that are difficult to correct manually Using basic principles of projective geometry, this paper introduces a simple extension to image morphing that correctly handles 3D projective camera and scene transformations The technique, called {\em view morphing}, works by prewarping two images prior to computing a morph and then postwarping the interpolated images Because no knowledge of 3D shape is required, the technique may be applied to photographs and drawings, as well as rendered scenes The ability to synthesize changes both in viewpoint and image structure affords a wide variety of interesting 3D effects via simple image transformations , View morphing between two images of an object taken from two different viewpoints produces the illusion of physically moving a virtual camera Click for an MPEG movie (184K) of this interpolation Morph between views of different faces produces simultaneous interpolation of facial shape, color, and pose Click for an MPEG movie (143K) of this interpolation More MPEG Movies of View Morphs Two resolutions of Mona Lisa Mona Lisa reflection: High resolution MPEG movie (198K, 10 frames) Low resolution MPEG movie (64K, 20 frames) Click for MPEG movie (84K) of Jude Shavlik Chuck Dyer Last Changed: September 8, 1996 	2
92	 Home Page of the UW-Madison Machine Learning Research Group This WWW home page contains relevant information about, and for, the members of the Machine Learning Research Group (MLRG) at the University of Wisconsin - Madison Table of Contents Group Members MLRG's Archive of Recent Papers MLRG's Archive of Datasets and Domain Theories MLRG's Paper-Reading Schedule The AI Seminar CS 760 - Machine Learning (graduate course) Relevant Local Links Some Useful External Links Group Members Carolyn Allex Jonathon Bodner Kevin Cherkauer Mark Craven Tina Eliassi Richard Maclin (graduated August 1995) David Opitz (graduated August 1995) Jude Shavlik MLRG's Archive of Recent Papers Visit the page describing our recent publications (An ASCII file containing a list of our recent abstracts is also available ) MLRG's Archive of Datasets and Domain Theories You can access our ftp directory that contains several ML testbeds (You can also access via ftp the Wisconsin Breast Cancer Database , which is from Prof Olvi Mangasarian's group) MLRG's Paper-Reading Schedule See the MLRG's current schedule of papers to read (Our old schedules are also on line ) The AI Seminar See the current schedule of the local AI seminar Relevant Local Links CS 760 - Machine Learning (graduate course) UW-Madison Machine-Learning/Math-Programming Group Computational Biology in the UW-Madison CS Dept UW-Madison Computational Neuroscience UW-Madison AI Group UW-Madison Computer Vision Group UW-Madison Robotics Group UW-Madison CS Dept Home Page UW-Madison Home Page (DoIT) UW-Madison Center for Mathematical Sciences Gopher UW-Madison Graduate School UW-Madison Library Recent Table of Contents and Abstracts of Selected ML Journals (mostly from Wendt Library; readable only if @cs wisc edu) Procs: Workshop on Agents that Learn from Other Agents , held at the 1995 International Machine Learning Conference More local links Last modified: Fri Mar 1 11:00:45 1996 by Jude Shavlik shavlik@cs wisc edu 	2
212	 NEXT! Homepage What is NEXT! People on the NEXT! Project Last Modified September, 1995 miron@cs wisc edu 	2
147	 SHORE Project Home Page SHORE - A High-Performance, Scalable, Persistent Object Repository Document Contents: Objective Overview Release Information Mailing Lists See Also: Shore, version 1 0 On-line Information Source, Binaries and Documentation The Beta-release of Shore (version 0 9 3) Publications related to Shore People working on Shore Latest Research Summary for ARPA Paradise Project: a GIS built on SHORE EXODUS Project: the predecessor to Shore OO7 Benchmark: a benchmark for OODBs Shore Photo Album UW-Madison, Database Research Group UW-Madison, CS Department Server Objective: The objective of the SHORE project is to design, implement, and evaluate a persistent object system that will serve the needs of a wide variety of target applications including hardware and software CAD systems, persistent programming languages, geographic information systems, satellite data repositories, and multi-media applications Shore expands on the basic capabilities of the widely-used EXODUS Storage Manager (developed at Wisconsin, funded by ARPA ) in a number of ways including support for typed objects, multiple programming languages, a "Unix-like" hierarchical name space for named objects, and a Unix-compatible interface to objects with a "text" field This interface is intended to ease the transition of applications from the Unix file system environment to Shore as existing Unix tools such as vi and cc will be able to store their data in Shore objects without modification (basically a Unix file becomes either a single Shore object or the text field of a more complex object) Overview: SHORE is something of a hybrid system by nature, inheriting characteristics both from object-oriented database systems and from file systems This section briefly describe the basic features of SHORE The paper, Shoring Up Persistent Applications , describes SHORE in much greater detail SHORE has three major goals: Scalability Support for hardware and language heterogeneity Support for existing, file-based applications When the SHORE project began 3 years ago, these goals were unique among the research and commercial OODBMS community While the ODMG effort has also concentrated on providing some degree of support for language heterogeneity (which, in turn, facilitates hardware heterogeneity), SHORE remains distinguished by its focus on scalability and support for applications that depend on the Unix file system for persistent storage Furthermore, since the SHORE data model (SDL) is basically compatible with the ODMG data model (ODL) , we expect that much of the technology that we develop can eventually be transferred to the commercial sector Scalable Architecture SHORE's software architecture is unique is several ways First, SHORE uses a symmetric, peer-to-peer distributed architecture In SHORE, every participating processor runs a SHORE server process whether or not the processor has SHORE data disks attached The software has been designed to be scalable; it can run on a single processor, a network of workstations, or a large parallel processor such as the Intel Paragon or IBM SP1/2 This design is in contrast to the client-server architecture used by EXODUS and all the OODBMS vendors While a client-server architecture is fine for a design environment such as is typically used in software and hardware CAD efforts, it is not scalable The second unique feature of the SHORE architecture is its notion of a ``value-added'' server By structuring the software that runs in the server with extensibility in mind, it is relatively simple for users to build application-specific servers For example, the Paradise project is already using the SHORE server to build a geographic information system for NASA's EOSDIS project We feel that these two unique pieces of technology will play a important role in a variety of future research and commercial endeavors For example, the digital libraries of the future will almost certainly depend on the availability of scalable, persistent object technology Such systems are going to store, retrieve, manipulate, and transmit objects containing video and pictures as well as text While current OODBMS products could be used, these systems are oriented toward dealing with gigabytes, and not terabytes, of data Customizability is equally important The indexing, retrieval, and query processing mechanisms needed for a digital library are very different from those required for a geographic information system Language and Hardware Heterogeneity Objects in SHORE are typed SHORE provides a single, language-neutral type system that is used to define the types of all SHORE objects This type system is embodied in the SHORE Data Language (SDL), which is the language in which SHORE object types are defined SDL enhances the OMG data model IDL with support for database features such as bulk types (e g , sets and lists) and persistence The provision of typed persistent objects simplifies the task of supporting heterogeneous hardware environments and makes it feasible to support access to persistent objects from multiple programming languages, which is a key objective of the SHORE project As mentioned earlier, SDL is quite closely related to ODL, the language-neutral object type definition language that was recently proposed as a standard by the OODB vendor consortium ODMG In terms of its emphasis, however, ODMG has largely concentrated on providing a standardized interface to existing C++ oriented OODBs Our focus is on support for inter-language object sharing within a large name-space of objects Support for Existing, File-based Applications A major goal of SHORE is to enable applications that currently use untyped, byte-oriented files for their persistent data, flattening and un-flattening their data each time it is accessed, to stop doing so Such applications should be able to store their data as typed, structured objects for more convenient, type-safe, intra- and inter-program data sharing Our ultimate hope is that SHORE will displace byte-oriented file systems such as the Unix file system SHORE provides two major services from a file system standpoint First, to support object naming and space management in a world with many persistent objects, SHORE provides a flexible, tree-structured, Unix-like name-space in which all persistent objects are reachable, either directly or indirectly Doing so gives SHORE users a familiar framework in which to register individual persistent objects (termed "registered" objects), the roots of large persistent data structures, or bulk sets of unnamed objects (termed "anonymous" objects) The realization of this framework involves several different kinds of SHORE file system objects, including directories, pools (which are files containing anonymous objects), symbolic links, and cross references SHORE provides two mechanisms to ease the transition of legacy Unix applications such as compilers, editors, and CAD systems from traditional byte-stream files to SHORE First, for applications that can be re-linked, SHORE provides a standard Unix-compatible file system interface (e g open, close, read, write, mkdir, chdir, ) In order to make access to SHORE objects via Unix file system calls possible, the definer of a SHORE object type can optionally designate one variable-length byte string or character string attribute of the object as being the object's "Unix data" Programs that attempt to read an object through SHORE counterparts of the Unix file system calls will only see this portion of the object For legacy programs that wish to do so without being re-linked, it is possible to NFS-mount a SHORE file system and access the Unix data contained in its objects directly This makes it feasible for both new and old applications to access the same set of objects While old applications can only access the "Unix data" component of the object, new applications can define and access other, more structured, attributes of the object Release Information: Below is the latest time table for the release of SHORE These dates are approximate and subject to change If you have any questions, contact shore_support@cs wisc edu Beta Release (0 9) On May 3, 1995 we had our first beta release Beta Release (0 9 3) The second Beta-rlease of Shore (version 0 9 3) is now available (Sept 18, 1995) It includes improved documentation, more complete implementations of many SDL features, many bug fixes, and ports to Solaris, HP-UX, Linux Version 1 0 On August 6, 1995 we released Shore, version 1 0 Gzip'd tar files of the source, documentation and a binary release (sparc and pentium solaris 2 5), can be found at &lt;ftp://ftp cs wisc edu/shore/1 0/&gt; Mailing Lists There are two Shore-related mailing lists: shore_support@cs wisc edu and shore_all@cs wisc edu shore_support@cs wisc edu This mailing list reaches the Shore development team It is for use by Shore users to submit questions, comments, and bug reports to us You cannot subscribe to this mailing list shore_all@cs wisc edu This is a mailing list for users of (and those interested in) SHORE This list is managed by the listproc software at the UW-Madison CS department It is currently unmoderated, but in the unlikely event that it gets cluttered with junk mail we will moderate it mail messages If you are interested in the list, but your mailbox is already too cluttered, you can sign up for weekly digests See below for more information More information about the list will be sent when you subscribe Purpose of shore_all Notifying interested parties of new releases and other changes in the Shore ftp archive Requests for help from other users By default, replies will be sent only to the sender, rather than being posted to the entire list If you want the entire list to see your reply, just copy the reply to shore_all This list is an public mailing list Thus, anyone may subscribe to it Only subscribers may post to the list The existence of this list is shown in the listing returned by listproc when it processes a LISTS request When you subscribe, your subscription is "concealed" by default That is, other subscribers cannot obtain the membership list from the listproc system Subscribing to shore_all To subscribe or to change your subscription, you must mail a special message to: listproc@cs wisc edu To subscribe, the content of the message should look like this: subscribe shore_all To receive weekly digests (rather than individual messages), send this along with your subscription (or send it in a separate message): set shore_all mail digest To un-subscribe, the content of the message should be: unsubscribe shore_all To get help on the list processor, the content of the message should be: help Last Modified: Mon Mar 18 10:41:39 CST 1996 Nancy Hall / nhall@cs wisc edu Footnotes: compatibility with ODL SHORE and ODMG concurrently decided to use the OMG data model IDL as the starting point for their data models Hence SDL and ODL are very similar to one another Once ODL stabilizes we can convert SDL to be 100% compatible with ODL 	2
51	 Galileo/SCI Home Page The Galileo and SCI Projects at Wisconsin Table of contents Galileo Project description Publications Related projects SCI at Wisconsin Project description Publications Project Members Galileo at Wisconsin Galileo is a project being conducted in the computer architecture group at the University of Wisconsin-Madison Our project focuses on the medium- to long-term evolution of processor and system architectures, with an emphasis on the memory system Specifically, we are studying what the relationship between the processor and main memory will be in future systems: completely separate, as today, or integrated (and if so, to what extent) Processing capability and bit storage may merge in at least two ways Because of increasing off-chip penalties (in issuable instructions) and/or limited off-chip bandwidth, designers may place more and more capacity on the processor chip and module, until eventually a sizable fraction of main memory resides on-chip (represented by the arrow labeled MOP in the above diagram) A different possibility is the migration of processor capability onto the DRAM chips themselves, eventually obviating the central processor (see the IRAM arrow above) Our specific research currently focuses on the following areas: Examining the performance impact of large memory latencies and limited memory bandwidth in current and future microprocessor-based systems Performance modeling of the various design points along the processor/memory (P/M) integration spectrum Cache hierarchy design for P/M integrated systems Design of main memory banks in a P/M integrated system Program execution in systems with multiple integrated chips (DataScalar architectures) Galileo-specific publications: Exploiting Optical Interconnects to Eliminate Serial Bottlenecks Doug Burger and James R Goodman Appears in the 3rd International Conference on Massively Parallel Processing Using Optical Interconnects, October, 1996 DataScalar Architectures and the SPSD Execution Model Doug Burger, Stefanos Kaxiras, and James R Goodman University of Wisconsin-Madison Computer Sciences Department Technical Report 1317, July, 1996 Quantifying Memory Bandwidth Limitations of Current and Future Microprocessors Doug Burger, James R Goodman, and Alain K&auml;gi Appears in the 23rd International Symposium on Computer Architecture, May, 1996 The Declining Effectiveness of Dynamic Caching for General-Purpose Microprocessors Douglas C Burger, James R Goodman, and Alain K&auml;gi University of Wisconsin-Madison Computer Sciences Department Technical Report 1261, January, 1995 Related projects: IRAM - UC-Berkeley PPRAM - Kyushu Univeristy, Japan SCI at Wisconsin Our group is also closely involved with research relating to cache-coherent shared-memory multiprocessor design, specifically studying the Scalable Coherent Interface coherence and transport layers We are using SCI, which is an IEEE standard (1596-1992), as a base platform for the exploration of our ideas The SCI standard specifies a linked-list based hardware coherence protocol, which includes support for efficient synchronization primitives (Queue On Lock Bit, or QOLB), as well as optimizations for different sharing patterns, such as pairwise-sharing and fresh read-sharing The standard also includes a definition for an extremely high-bandwidth (1 GB/s), low latency transport layer in between processing elements or individual clusters We are currently performing SCI-related research on the following topics: Extending SCI with logarithmically-growing sharing structures Efficient hardware synchronization for shared-memory multiprocessors A scalability study of the base SCI protocol, including its standard extensions Aggressive consistency models for shared-memory multiprocessors Wisconsin SCI Publications: Mechanisms for Minimizing Synchronization Overheads in Shared-Memory Applications --> --> --> The GLOW Cache Coherence Protocol Extensions for Widely Shared Data Stefanos Kaxiras and James R Goodman To appear in the proceedings of the 10th ACM International Conference on Supercomputing, May, 1996 Kiloprocessor Extensions to SCI Stefanos Kaxiras To appear in the proceedings of the 10th International Parallel Processing Symposium, April, 1996 Techniques for Reducing Overheads of Shared-Memory Multiprocessing Alain K&auml;gi, Nagi Aboulenein, Douglas C Burger, and James R Goodman Appears as "Best Architecture Paper" in the proceedings of the 9th ACM International Conference on Supercomputing, July, 1995 Also University of Wisconsin-Madison Computer Sciences Department TR #1266, May, 1995 Simulation of the SCI Transport Layer on the Wisconsin Wind Tunnel Douglas C Burger and James R Goodman In the proceedings of the Second International Workshop on SCI-based High-Performance Low-Cost Computing, March, 1995 Also University of Wisconsin-Madison Computer Sciences Department Technical Report 1265, March, 1995 Hierarchical Extensions to SCI James R Goodman and Stefanos Kaxiras University of Wisconsin-Madison Computer Sciences Department Technical Report 1235, July 1994 Extending the Scalable Coherent Interface for Large-Scale Shared-Memory Ross Evan Johnson University of Wisconsin-Madison Computer Sciences Department Technical Report 1136, February 1993 Hardware Support for Synchronization in the Scalable Coherent Interface (SCI) Nagi M Aboulenein, Stein Gjessing, James R Goodman, and Philip J Woest University of Wisconsin-Madison Computer Sciences Department Technical Report 1117, November 1992 Interconnect Topologies with Point-to-Point Rings Ross E Johnson and James R Goodman University of Wisconsin-Madison Computer Sciences Department Technical Report 1058, December 1991 Analysis of the SCI Ring Steven L Scott, James A Goodman, and Mary K Vernon University of Wisconsin-Madison Computer Sciences Department Technical Report 1055, November 1991 Lower Bounds on Latency for Scalable Linked-List Cache Coherence Ross Johnson University of Wisconsin-Madison Computer Sciences Department Technical Report 1029, June 1991 An Analysis of Synchronization Mechanisms in Shared-Memory Multiprocessors Philip J Woest and James R Goodman University of Wisconsin-Madison Computer Sciences Department Technical Report 1005, February 1991 A Set of Efficient Synchronization Primitives for a Large-Scale Shared-Memory Multiprocessor James R Goodman, Mary K Vernon, Philip J Woest In the proceedings of the Third International Conference on Architectural Support for Programming Languages and Operating Systems, April, 1989 Also University of Wisconsin-Madison Computer Sciences Department Technical Report 814 Project participants: Faculty Jim Goodman Graduate students Doug Burger Alain K&auml;gi Stefanos Kaxiras Project alumni Nagi Aboulenein Ross Johnson Steve Scott Last modified: Fri Aug 2 09:12:00 1996 by Doug Burger (dburger@cs wisc edu) 	2
198	 EXODUS Project Home Page EXODUS - An Extensible Object-Oriented Database System Toolkit NOTE: Document is under construction The Exodus project has been succeded by the SHORE project but we still provide minimal support for users Both the Exodus Storage Manager and a compiler for the E persistent programming language , are available via ftp on ftp cs wisc edu No licenses are required If more information is needed contact exodus@cs wisc edu Principal Investigators Mike Carey David DeWitt See Also: Publications related to EXODUS SHORE: the successor to EXODUS Latest Exodus Storage Manager and E compiler Contributed software for the Storage Manager A mailing list for Exodus users: exodus_all@cs wisc edu OO7 Benchmark: a benchmark for OODBS Date Prepared: 19 April 1994 Michael Zwilling / zwilling@cs wisc edu 	2
79	 Wisconsin Multiscalar Project Home Page Wisconsin Multiscalar Project Technical Papers Talks Given by Multiscalar People Contributors Funding Sources Related Projects Available Software Wisconsin CS's Computer Architecture Group Computer Sciences Department at the University of Wisconsin World-Wide Computer Architecture Information Information of interest to local users only Last Updated: 20 February 1996 by Guri Sohi (sohi@cs wisc edu) 	2
159	 Steve Seitz's Animation Writeup Image Motion Analysis for Character Animation Control Steve Seitz , Chuck Dyer Our research is motivated by the problem of teaching a graphical model to perform a realistic motion This problem has its roots in the art of cartoon animation and has modern applications to computer animation, virtual reality, teleconferencing, and robotics The task is to endow a graphical model with the knowledge of how to perform a repertoire of interesting motions Once learned, these motions can be invoked directly via high-level cues (e g "smile", "walk"), inferred via an abstract goal (e g "go to the store"), or cued off of low-level events from a virtual input device or an image sequence Other projects include the analysis of periodic motion and tracking of rigid and nonrigid objects 	2
119	 Steve Seitz's View Interpolations View Synthesis by Image Interpolation Investigators: Steve Seitz , Chuck Dyer We have devised a provably-correct automated technique for creating new views of a scene from two basis views of the same scene The technique relies on geometric image interpolation, known as "morphing" in the graphics community, to produce intermediate images Although morphing techniques currently enjoy widespread use, their theoretical validity has not been established In particular, does 2D interpolation of two views of the same scene produce a sequence of physically valid in-between views of that scene Surprisingly, the answer is yes, providing the images first undergo a simple rectification procedure and certain assumptions about visibility and the projection process are satisfied The view synthesis work described here uses automated stereo techniques to determine image correspondences Our more recent work on View Morphing considers how user-interaction may be used to guide the interpolation Below are computed interpolations for three different image pairs The rectified original images are shown at left and right Click on the interpolated images (center) to see mpeg movies (~50K) showing the computed interpolations View Interpolations Original (1) Interpolated (1 5) Original (2) This work is described in: Physically-Valid View Synthesis by Image Interpolation , S M Seitz and C R Dyer, Proc Workshop on Representation of Visual Scenes , 1995 Last Changed: June 30, 1995 	2
44	 Wisconsin Wind Tunnel Project Home Page Wisconsin Wind Tunnel Project Most future massively-parallel computers will be built from workstation-like nodes and programmed in high-level parallel languages--like HPF--that support a shared address space in which processes uniformly reference data The Wisconsin Wind Tunnel (WWT) Project seeks to develop a consensus about the middle-level interface--below languages and compilers and above system software and hardware Our first proposed interface was Cooperative Shared Memory, which is an evolutionary extension to conventional shared-memory software and hardware Recently, we have been working on a more revolutionary interface called Tempest Tempest provides the mechanisms that allow programmers, compilers, and program libraries to implement and use message passing, transparent shared memory, and hybrid combinations of the two We are developing implementations of Tempest on a Thinking Machines CM-5, a cluster of workstations ( Wisconsin COW ), and a hypothetical hardware platform One approach on COW uses bus snooping logic, implemented with FPGAs and SRAM We are collaborating with the Wisconsin Paradyn Project to adapt their performance tools to Tempest Overview and Annotated Bibliography Slides from an Overview Talk (November 1995) with one slide per page or four slides per page Complete Technical Papers Contributors Funding Sources Origin of Project Name Wisconsin Week Article on WWT & Paradyn Related Projects Wisconsin CS's Computer Architecture Group Computer Sciences Department at the University of Wisconsin World-Wide Computer Architecture Information Last Updated: 6 July 1995 by Mark D Hill (markhill@cs wisc edu) 	2
161	 Machine Learning for Cancer Diagnosis and Prognosis Machine Learning for Cancer Diagnosis and Prognosis This page describes various linear-programming-based machine learning approaches which have been applied to the diagnosis and prognosis of breast cancer This work is the result of a collaboration at the University of Wisconsin-Madison between Prof Olvi L Mangasarian of the Computer Sciences Department and Dr William H Wolberg of the departments of Surgery and Human Oncology Here is a copy of the press release distributed at the American Cancer Society Science Writers seminar in March of 1994 It provides a good overview of this research Table of Contents Diagnosis Prognosis Bibliography Citation in the Popular Press Local Related Links Other Related Links Diagnosis This work grew out of the desire by Dr Wolberg to accurately diagnose breast masses based solely on a Fine Needle Aspiration (FNA) He identified nine visually assessed characteristics of an FNA sample which he considered relevant to diagnosis In collaboration with Prof Mangasarian and two of his graduate students, Rudy Setiono and Kristin Bennett , a classifier was constructed using the multisurface method (MSM) of pattern separation on these nine features that successfully diagnosed 97% of new cases The resulting data set is well-known as the Wisconsin Breast Cancer Data The image analysis work began in 1990 with the addition of Nick Street to the research team The goal was to diagnose the sample based on a digital image of a small section of the FNA slide The results of this research have been consolidated into a software system known as Xcyt , which is currently used by Dr Wolberg in his clinical practice The diagnosis process is now performed as follows: An FNA is taken from the breast mass This material is then mounted on a microscope slide and stained to highlight the cellular nuclei A portion of the slide in which the cells are well-differentiated is then scanned using a digital camera and a frame-grabber board The user then isolates the individual nuclei using Xcyt Using a mouse pointer, the user draws the approximate boundary of each nucleus Using a computer vision approach known as "snakes", these approximations then converge to the exact nuclear boundaries This interactive process takes between two and five minutes per slide Here is an image showing Xcyt in use Once all (or most) of the nuclei have been isolated in this fasion, the program computes values for each of ten characteristics of each nuclei, measuring size, shape and texture The mean, standard error and extreme values of these features are computed, resulting in a total of 30 nuclear features for each sample Based on a training set of 569 cases, a linear classifier was constructed to differentiate benign from malignant samples This classifier consists of a single separating plane in the space of three of the features: Extreme Value of Area, Extreme Value of Smoothness, and Mean Value of Texture By projecting all the cases onto the normal of this separating plane, approximate probability densities of the benign and malignant points were constructed These allow a simple Bayesian computation of probability of malignancy for new patients These densities are shown to the patient, allowing her to judge the "confidence" of her diagnosis by comparison to hundreds of previous samples To date, this system has correctly diagnosed 176 consecutive new patients (119 benign, 57 malignant) In only eight of those cases did Xcyt return a "suspicious" diagnosis (that is, an estimated probability of malignancy between 0 3 and 0 7) A small subset of the source images used in this research can be found here These are very good test cases for image segmentation or object recognition algorithms If your pet segmentation algorithm can automatically identify all of the nuclei in these images, please email me (street@cs wisc edu) and let's work together Prognosis The second problem considered in this research is that of prognosis, the prediction of the long-term behavior of the disease We have approached prognosis as a function-approximation problem, using input features -- including those computed by Xcyt -- to predict a time of recurrence in malignant patients, using right-censored data Our solution is termed the Recurrence Surface Approximation method (RSA), and utilizes a linear program to construct a surface which predicts time of recurrence for new patients By examining the actual recurrence of those training cases with similar predicted recurrence times, we can plot the probability of disease-free survival for various times (out to 10 years) for an individual patient This capability has been incorporated into Xcyt and an example is shown here These survival curves plot the probability of disease-free survival versus time (in years) The black disease-free survival curve represents all patients in our original study; the red curve represents the probability of disease-free survival for the sample case This particular case therefore has an above-average prognosis, with a probability of being disease-free after 10 years equal to about 80% The RSA procedure can also be used to compare the predictive power of various prognostic factors Our results indicate that precise, detailed cytological information of the type provided by Xcyt gives better prognostic accuracy than the traditional factors Tumor Size and Lymph Node Status If corroborated by other researchers, this result could remove the need for the often painful axillary lymph node surgery Chronological Bibliography Linked papers are provided in postscript format; if you don't have a postscript viewer, you can download the file (e g , shift-click in Netscape) and print it Abstracts are ASCII text To obtain papers which are not linked, please contact the first author O L Mangasarian, R Setiono and W H Wolberg Pattern Recognition via Linear Programming: Theory and Application to Medical Diagnosis In Proceedings of the Workshop on Large-Scale Numerical Optimization , 1989, pages 22-31, Philadelphia, PA SIAM O L Mangasarian and W H Wolberg Cancer Diagnosis via Linear Programming SIAM News, Vol 23, 1990, pages 1 & 18 W H Wolberg and O L Mangasarian Multisurface Method of Pattern Separation for Medical Diagnosis Applied to Breast Cytology Proceedings of the National Academy of Sciences, U S A , Vol 87, 1990, pages 9193-9196 W N Street Toward Automated Cancer Diagnosis: An Interactive System for Cell Feature Extraction Technical Report 1052, Computer Sciences Department, University of Wisconsin, October 1991 W H Wolberg, K P Bennett and O L Mangasarian Brast Cancer Diagnosis and Prognostic Determination from Cell Analysis Manuscript, 1992, Departments of Surgery and Human Oncology and Computer Sciences, University of Wisconsin, Madison, WI 53706 W H Wolberg, W N Street, and O L Mangasarian Breast Cytology Diagnosis via Digital Image Analysis Analytical and Quantitative Cytology and Histology, Vol 15 No 6, pages 396-404, December 1993 ( abstract ) W N Street, W H Wolberg and O L Mangasarian Nuclear Feature Extraction For Breast Tumor Diagnosis In IS&T/SPIE 1993 International Symposium on Electronic Imaging: Science and Technology, volume 1905, pages 861-870, San Jose, CA, 1993 ( abstract ) W H Wolberg, W N Street, and O L Mangasarian Machine learning techniques to diagnose breast cancer from fine-needle aspirates Cancer Letters Vol 77, pages 163-171, 1994 ( abstract ) W N Street Cancer Diagnosis and Prognosis via Linear-Programming-Based Machine Learning Ph D Dissertation, University of Wisconsin-Madison, August 1994 Available as UW Mathematical Programming Technical Report 94-14 ( abstract ) W H Wolberg, W N Street, D M Heisey, and O L Mangasarian Computerized breast cancer diagnosis and prognosis from fine needle aspirates Archives of Surgery 1995; 130:511-516 ( abstract ) W H Wolberg, W N Street, and O L Mangasarian Image analysis and machine learning applied to breast cancer diagnosis and prognosis Analytical and Quantitative Cytology and Histology, Vol 17 No 2, pages 77-87, April 1995 ( abstract ) W H Wolberg, W N Street, D M Heisey, and O L Mangasarian Computer-derived Nuclear Features Distinguish Malignant from Benign Breast Cytology Human Pathology, Vol 26, pages 792-796, 1995 ( abstract ) W H Wolberg, W N Street, D M Heisey, and O L Mangasarian Computer-derived Nuclear ``Grade'' and Breast Cancer Prognosis Analytical and Quantitative Cytology and Histology, Vol 17 No 4, pages 257-264, August 1995 ( abstract ) O L Mangasarian, W N Street and W H Wolberg Breast cancer diagnosis and prognosis via linear programming Operations Research, 43(4), pages 570-577, July-August 1995 Available as UW Mathematical Programming Technical Report 94-10 ( abstract ) W N Street, O L Mangasarian, and W H Wolberg An inductive learning approach to prognostic prediction Proceedings of the Twelfth International Conference on Machine Learning , A Prieditis and S Russell, eds , pages 522-530, Morgan Kaufmann, 1995 ( abstract ) M W Teague, W H Wolberg, W N Street, O L Mangasarian, S C Call and D L Page Indeterminate Fine Needle Aspiration of the Breast: Image Analysis Aided Diagnosis Cancer , submitted ( abstract ) W N Street, O L Mangasarian, and W H Wolberg Individual and collective prognostic prediction Technical Report 96-01, Computer Sciences Department, University of Wisconsin, Madison, WI, January 1996 Submitted to ICML and AAAI conferences ( abstract ) Citation in the Medical and Popular Press News from Medicine segment, CNN Prime News, March 12, 1994 Breast Biopsy Without Surgery Tim Friend, USA Today, March 24, 1994 Cancer Detection Imitates Oil Prospecting Joe Manning, Milwaukee Sentinel, March 24, 1994 Analyzing Breast Cancer Detroit News, March 28, 1994 A High-tech Cancer Hunt Marilynn Marchione, Milwaukee Journal, March 28, 1994 Computerized Interpretation of Breast FNA Biopsies: Progress Reported, Oncology Times, April 1994 Computer Program Hunts Breast Cancer, Ruth SoRelle, Houston Chronicle, April 22, 1994 Computer Program May Improve Interpretation of Aspirate, Oncology News International, May 1994 New Data Suggest Needle Biopsies Could Replace Surgical Biopsy for Diagnosing Breast Cancer Journal of the American Medical Association, Medical News & Perspectives column, June 9, 1994, Vol 271, No 22 Diagnosis Via Image Analysis and Machine Learning, Cope, September/October 1994 Computer Seeks Out Breast Cancer, Madison Capital Times, January 17, 1995 Computer-Aided Cancer Prediction, Los Angeles Times, January 25, 1995 Local Related Links UW Mathematical Programming Group UW Machine Learning Group UW Medical School Other Related Links The National Library of Medicine (NLM) University of Nevada Center for Biomedical Modeling Research OncoLink Washington University Institute for Biomedical Computing paulb@cs wisc edu 	2
184	 SEQ Home Page The SEQ Project: Querying Sequence Data (Document under construction) --> Time to put Order in the Database! Order Time put in the Database! Time to put the Database in Order! Document Contents: Project Objectives Current Status Motivating Example SEQ Data Model Sequin Query Language Optimization Techniques SEQ System Development Publications Related Work Contact Information Project Objectives A number of important database applications require the processing of large amounts of ordered sequence data The domains of these applications include financial management, historical analysis, economic and social sciences, metereology, medical sciences and biological sciences Existing relational databases are inadequate in this regard; data collections are treated as sets, not sequences Consequently, expressing sequence queries is tedious, and evaluating them is inefficient Databases should model the data using the abstraction of sequences , allow data sequences to be queried in a declarative manner , utilizing the ordered semantics take advantage of the unique opportunities available for query optimization and evaluation integrate sequence data with relational data, so that users can store and query a combination of relation and sequences These requirements serve as the goals of the SEQ project Various kinds of sequences need to be supported, temporal sequences being the most important kind Queries should be expressible using notions like "next" and "previous" which are natural when considering sequences These queries should be optimized so that they can be evaluated efficiently These issues need to be studied in theory, and then a database system needs to be built that demonstrates the feasibility of the theoretical ideas Project Status The current status of the project is: We have defined the SEQ data model that can support most important kinds of sequence data We have also defined algebraic query operators that can be composed to form sequence queries (analogous to the composition of relational algebra operators to form relation queries) We have described how sequence queries can be efficiently processed, and have identified various optimization techniques We use a sequence query language Sequin that can declaratively express queries over sequences A Sequin query can include embedded expressions in a relational query language like SQL, or vice-versa We are building a disk-based database system to demonstrate the feasibility of our proposals The system implements the SEQ model using a nested complex object architecture It is built over the SHORE storage manager and can process several megabytes of data Relations and sequences are supported in an integrated and extensible manner Motivating Example of a Sequence Query A weather monitoring system records information about various meteorological phenomena There is a sequentiality in the occurrence of these phenomena; the various meteorological events are sequenced by the time at which they are recorded A scientist asks the query: "For which volcano eruptions did the most recent earthquake have a strength greater than 7 0 on the Richter scale " If this query is to be expressed in a relational query language like SQL, complex features like groupby clauses, correlated subqueries and aggregate functions are required Further, a conventional relational query optimizer would not find an efficient query execution plan, even given the knowledge that the Earthquakes and Volcano relations are sorted by time However a very efficient plan exists, if one models the data as sequences ordered by time The two sequences can be scanned in lock step (similar to a sort merge join) The most recent earthquake record scanned can be stored in a temporary buffer Whenever a volcano record is processed, the value of the most recent earthquake record stored in the buffer is checked to see if its strength was greater than 7 0, possibly generating an answer This query can therefore be processed with a single scan of the two sequences, and using very little memory The key to such optimization is the sequentiality of the data and the query Data Model The details of the SEQ data model are described in a published paper (click here for postscript version) Here we present the gist of it The basic model of a sequence is a set of records mapped to an ordered domain of ``positions'' This many-to-many relationship between records and positions can be viewed in two dual but distinct ways: as a set of records mapped to each position, or as a set of positions mapped to each record These two views are called ``Positional'' and ``Record-Oriented'' respectively, and each gives rise to a set of query operators based on that view Queries on sequences could require operators of either or both flavors The Record-Oriented operators are similar to relational operators and include various kinds of joins (overlap, containment, etc) and aggregates Such operators have been extensively explored by researchers in the temporal database community The Positional operators include Next, Previous, Offset, Moving Aggregates, etc Further operators allow ``zooming'' operations on sequences by means of collapsing and expanding the ordering domains associated with the sequence For instance, a daily sequence could be ``zoomed out'' (i e collapsed) to a weekly sequence, or ``zoomed in'' (i e expanded) to an hourly sequence The last part of the model deals with operations on groups (i e sets) of sequences The advantage is that this makes it easy to model queries involving sequence collections (which is the case in many real-world situations) All the sequence operators are extended to work with groups of similar sequences, instead of with single sequences This extension of the SEQ model indicates that a practical implementation of SEQ would probably involve a nested complex object system Sequin Query Language We have devised a query language called Sequin using which declarative sequence queries can be specified The language is similar in flavor to SQL, except that the inputs to queries as well as the results of queries are sequences Click here for a description of the Sequin language with examples Optimization Techniques We have proposed new optimization techniques for sequence queries involving Positional operators There are existing techniques that have been proposed for queries with Record-Oriented operators Our optimizations use query transformations, meta--data, and caching of intermediate results to efficiently evaluate a query An optimal query evaluation plan can be generated using an algorithm that relies on cost estimates One of the important observations is that accessing sequence data in a single stream is probably very efficient, and evaluation strategies should take this into account The details of the optimization techniques are described in a published paper (click here for postscript version) System Development The SEQ database system has a client-server architecture, supporting multiple clients via a multi-threaded server The server is built on top of the SHORE storage manager Both Sequin and a subset of SQL are supported as query languages which can be embedded inside each other The data model is a nested complex object model that allows arbitrary levels of nesting of relations inside sequences and vice versa The system is also extensible, providing support for new data types, new ordering domains, user-defined functions, new storage implementations and new query languages For more details on the SEQ system, click here Publications Sequence Query Processing Praveen Seshadri, Miron Livny and Raghu Ramakrishnan Proceedings of the ACM SIGMOD Conference on Data Management , May 1994 SEQ: A Framework for Sequence Data Praveen Seshadri, Miron Livny and Raghu Ramakrishnan Proceedings of the IEEE Conference on Data Engineering , March 1995 The Design and Implementation of a Sequence Database System Praveen Seshadri, Miron Livny and Raghu Ramakrishnan Submitted to VLDB 96 What's Next Sequence Queries Raghu Ramakrishnan, Michael Cheng, Miron Livny, and Praveen Seshadri In Proceedings of the International Conference on the Management of Data (COMAD) , December, 1994 Related Work The DEVise project is complementary to SEQ It provides a visualization environment that can be used to explore sequence data DEVise can act as a front-end through which queries can be posed against a SEQ database server, and the answers can be examined graphically Also see: SHORE Project: Storage Manager used for SEQ People working on SEQ and related projects UW-Madison, Database Research Group UW-Madison, CS Department Server Contact Information For more information, contact Praveen Seshadri , praveen@cs wisc edu Raghu Ramakrishnan , raghu@cs wisc edu Miron Livny , miron@cs wisc edu Computer Sciences Department, University of Wisconsin, 1210, W Dayton Street, Madison, WI 53706 Last modified: Fri Sep 15 1995 by Praveen Seshadri Praveen Seshadri / praveen@cs wisc edu 	2
186	 The Paradise Project Paradise - A Parallel Database System for GIS Applications Document Contents: Objective Client Server Paradise Samples of the Paradise Frontend Contact Information See Also: Publications related to Paradise People working on Paradise SHORE Project: Object Manager used for Paradise The OPT++ Extensible Optimizer Paradise Bug Reporting Examine the Sequoia 2000 Benchmark scripts used in the VLDB 94 paper Information on SSL UW-Madison, Database Research Group UW-Madison, CS Department Server Objective: The objective of the Paradise project is to design, implement, and evaluate a scalable, parallel geographic information system that is capable of storing and manipulating massive data sets By applying object-oriented and parallel database technologies to the problem of storing and manipulating geographic information we hope to significantly advance the size and complexity of GIS data sets that can be successfully stored, browsed, and queried Client Server Paradise: Paradise is a database system aimed at handling GIS types of applications Paradise provides a graphical user interface for querying and browsing the database and supports a subset of SQL for issuing ad-hoc queries Paradise provides an extended-relational data model for modeling GIS applications In addition to support for the base data types such as integer, real, and string, Paradise has built-in support for raster, polygon, polyline, point, circle, and video (mpeg images) data Paradise uses SHORE as its underlying persistent object manager The Paradise front end allows you to display objects with spatial attributes on a 2-D map The map provides a layered display for overlapping spatial attributes Each layer corresponds to one query You can customize the ordering and display of the layers by selecting color, labelling, and other display attributes for each query The database can be queried either with a graphical interface or with ad-hoc queries The graphical interface can be be used to issue implicit spatial queries by zooming, clicking, and sketching a rubber-banded box For ad-hoc queries, Paradise provides a query composer Menus in the query composer provide access to the database schema to assist in query composition Query results can either be viewed on the 2-D map, if they have spatial attributes, or they can be displayed in a table so that you can browse the tuples in the result The front end also provides context-sensitive help Paradise supports a subset of SQL for issuing ad-hoc queries To SQL we have added the ability to invoke methods defined on the extended set of types For example, you can calculate the area of a polygon by using the method polygon area() Paradise also supports the standard database operations including create and drop database, create and drop extent, create and drop indices, insert, and update The current version of Paradise employs a client-server architecture The front-end ships queries in our SQL syntax to the Paradise server for execution After executing the query, the server ships the result objects back to the client The Paradise server is multi-threaded so that multiple clients can connect to the same server In designing and implementing the Paradise sever, careful attention was paid to insure that the system could efficiently process queries (especially those involving spatial attributes) on large volumes of data Samples of the Paradise Frontend Europe Data For more samples press here Contact Information: Paradise Project ATTN: Prof David J DeWitt University of Wisconsin-Madison Computer Sciences Department 1210 West Dayton Street Madison, WI 53706 Email: paradise@cs wisc edu More To Come Biswadeep Nag (bng@cs wisc edu) 	2
156	 DEVise Home Page DEVise: an Environment for Data Exploration and Visualization Table of Contents: Features Examples In Depth Publications Related Work Release Contacts Features These features distinguish DEVise from other visualization environments: Visual query interface: Visualizations constructed with one set of data may be saved and applied to other input data Data larger than memory are efficiently handled Mapping from data to graphics at record level (e g , you can control the color or shape of individual records ) Ability to query data records used to represent graphics Flexible layout mechanisms within windows It helps user group data together for comparison, or put the aside when not needed Linked X, Y, or X and Y axes Cursor helps compare the relationship between different views of the data Record based input data Direct input of ASCII files Integer, float, date, and string data types Examples Check out the following examples for some cool pictures, and a quick introduction to what DEVise can do R-Tree Validation Molecular Biology (Cell Images) Soil Science/BIRCH Clustering Financial Data Exploration Family Medicine/National Climate Data Center Geographical Information System Soil Science File server Program Traces Clinical Sciences Many more examples at the Data Viewer for Family Medicine In Depth For a detailed description of DEVise: Model of Visualization Visual Query Interface Performance Issues Publications Miron Livny, Raghu Ramakrishnan, and Jussi Myllymaki ``Visual Exploration of Large Data Sets '' In Proceedings of the IS&T/SPIE Conference on Visual Data Exploration and Analysis, January, 1996 Michael Cheng, Miron Livny, and Raghu Ramakrishnan ``Visual Analysis of Stream Data '' In Proceedings of the IS&T/SPIE Conference on Visual Data Exploration and Analysis, February, 1995 Raghu Ramakrishnan, Michael Cheng, Miron Livny, and Praveen Seshadri, ``What's next Sequence queries '' In Proceedings of the International Conference on the Management of Data (COMAD), December, 1994 Related Work The SEQ project is complementary to DEVise in that it is designed to query record based sequenced data The output of the queries may be visualized with DEVise Release Information We are currently releasing version 1 1 8 of DEVise The executables for the Solaris platforms are dynamically linked so you need to set your LD_LIBRARY_PATH environment variable appropriately to run DEVise On all other supported architectures, the executables are statically linked and require no shareable libraries at run time To download DEVise click here Contacts For more information on this research project, contact Miron Livny , Raghu Ramakrishnan , Jussi Myllymaki , Guangshun Chen , or Kent Wenger User Support Hotline Send mail to the DEVise User Support Hotline This page has been accessed times since October 1, 1996 	2
244	 Net Scout Services Homepage go to text version Newsletter of new and newly discovered Internet resources and network tools Internet announcements -- updated daily! The most effective Internet tools available A web report for students, by students Surf smarter, not longer Let the InterNIC Net Scout project at the University of Wisconsin - Madison show you the way to only the best--then you can choose what's best for you We filter hundreds of Internet annoucements each week looking for the most valuable online resources and network tools Then we organize, summarize, and annotate the best of what we've found, and offer it to the Internet community in several useful formats The goal of Net Scout is to support effective use of the Internet by educators and researchers in the US However, everyone is welcome to use the publications and Web sites provided by Net Scout, and we encourage feedback and suggestions from the entire Internet community The three primary services provided include the Scout Report , Net-Happenings , and the Scout Toolkit Our newest project is Y'Know , a Web report for students, by students Net Scout Services is located at the Department of Computer Sciences at the University of Wisconsin-Madison and is a project of the InterNIC Comments, Suggestions, Feedback scout@internic net &#169; 1996 Net Scout Services For more information on using the Internet: InterNIC Information & Education Services 	2
5	 CS132 Using Computers - Lectures 3 &amp; 4 CS132 - Using Computers Instructor Info: Instructor: &nbsp; Sally Peterson Office: &nbsp;5381 Computer Science Phone: &nbsp;263-7763 E-Mail: sally@cs wisc edu or slpeters@facstaff wisc edu Office Hours: Tuesday 10:45-11:45, Thursday 11:00-12:00 or by appointment Vital Class Info: Time: TR 8:00 to 9:15 (Lecture 3) TR 9:30 to 10:45 (Lecture 4) Place: All lectures held in 1800 Engineering Hall Lecture Text: Information Technology and Society by Laudon, Traver &amp; Laudon Lab Text: Point, Click &amp; Drag: Using the Macintosh by Peterson Course Introduction: This class is designed to take you from zero knowledge of computers to being a crack shot user (and using these skills to get yourself through college and into the job arena!) Our lab sections are taught using Macintosh computers, but sections using PCs are available (see CS132 Using Computers - Lectures 1 &amp;2 ) The course has two components: Part 1 - Lecture: In the lecture we will discuss computers in &quot;generic&quot; terms, i e general computer science topics We will discuss how computers work, including the following topics (not necessarily in this order): application programs (including word processors, spreadsheets, graphics and databases) hardware, input/output, storage devices operating systems, programming languages networks and telecommunications artificial intelligence and expert systems computer-related social issues Part 2 - Lab: In the laboratory (discussion) sections you will have hands-on experience on Macintosh IIci computers with the following programs: word processing ( MS Word 5 0 ) electronic mail, newsgroups, and World Wide Web ( Eudora 3 0 and Netscape 3 0 ) painting and drawing ( Aldus SuperPaint 3 0 ) spreadsheet and charting ( MS Excel 5 0 ) database ( FileMaker ) presentation manager ( HyperCard 2 1 ) desktop publishing ( Aldus PageMaker 4 0 ) An integral part of lab is learning the Macintosh operating system (System 7 5 3) as well In addition, there are some special tools (CD-ROM and scanners) available There are 10 TAs that teach the lab sections Both the TAs and I have the goal of providing you with high quality instruction and a rich educational experience TAs: Name Section Time Days Jon Bodner 358 6:10 MW Nick Leavy 338 340 3:30 11:00 MW TR Shannon Lloyd 354 356 5:20 6:40 TR TR Jeff Reminga 331 357 7:45 4:50 MWF MW Ira Sharenow 351 352 1:00 2:30 TR TR Brian Swander 335 336 12:05 1:20 MWF MWF Brad Thayer 333 334 9:55 11:00 MWF MWF Joe Varghese 339 355 9:30 8:00 TR TR Geoff Weinberg 337 353 2:25 4:00 MWF TR Maria Yuin 332 359 8:50 7:30 MWF MW Recommended Background: No background is necessary for this course Assignments, Quizzes and Exams: Your grade will be based on two exams from lecture, and on regular assignments and quizzes in lab Syllabus: To glance at the syllabus (which contains all nitty-gritty class details), click here Assignments: Assignment 3: SuperPaint Assignment 4: Excel Last modified: October 13, 1996 by Jon Bodner 	3
188	 CS 354 Home Page CS/ECE 354 - Machine Organization and Programming 4 credits An introduction to current system structures of control, communication, memories, processors and I/O devices Projects involve detailed study and use of a specific small computer hardware and software system Prerequisites: CS 302 or consent of instructor Not open to students who have taken CS/ECE 552 Open to Freshmen Semesterly course information: No info as of Fall 1994 	3
242	 CS302 Home Page Computer Sciences 302 Algebraic Language Programming Sections and Instructors We would like your comments, suggestions, or complaints about CS302 Feedback may be provided by clicking here - Jim Skrentny, CS302 Coordinator, Office: CS1303, 262-0191, Email skrentny@cs Information for All Sections CS 302 Frequently Asked Questions Course Overview Microcomputer Laboratories Consultants - Fall 1996 Consulting Schedule Tutors (mainly C++) Policy on Academic Misconduct Courses Offered by CS Department Software for All Sections Introduction to Microsoft Windows Hints for Windows Compilers The Windows Operating System Email Netscape Creating and Using Subdirectories C++ Information The Savitch Text Book Introduction to Borland C++ The C++ language The Borland C++ integrated development environment Fortran Information See Jeff Lampert's home page for Section 70 Last Updated: Fri 8/30/96, Jim Skrentny CS302 Coordinator, skrentny@cs wisc edu 	3
206	 ECE/CS 752 Spring 1996 ECE/CS 752: Advanced Computer Architecture I Spring 1996 Offering Course Information Instructor: Prof James E Smith Office: 4621 Engineering Hall Office hours: 2:30-3:30PM, Tues and Thurs Office phone: 265-5737 Email: jes@ece wisc edu TA: Dan Prince Office: 3614 Engineering Hall Office hours: 2:00-3:00PM Wed; 1:00-2:00PM Fri Office phone: 265-3825 E-mail address: princed@cae wisc edu Table of Contents News Readings Lecture Notes Homeworks Project Miscellaneous News Homework 5 solns 5/10 Special Office hours: 10-11:30AM Fri May 10 FINAL EXAM: Rm 132 Biochemistry, Sun May 12, 12:25 PM Readings Readings 1 Table of Contents (get full papers from DoIT) Readings 2 Table of Contents (get full papers from DoIT) Readings 3 Table of Contents (get full papers from DoIT) Readings 4 Table of Contents (get full papers from DoIT) Lecture Notes Course Overview and Introduction to Computer Architecture Performance and Cost Instruction Sets Pipelining Advanced Pipelining, part 1 Advanced Pipelining, part 2 Vectors and VLIW ILP limits and software Cache Memories Advanced Caches Advanced Caches (BIG) Main Memory Main Memory (BIG) I/O systems Disk arrays I/O and disk arrays (BIG) Interconnect technology Interconnect technology (BIG) ATM networks ATM networks (BIG) Multiprocessors part 1 Multiprocessors part 1 (BIG) Multiprocessors part 2 Multiprocessors part 2 (BIG) Homeworks Homework 1 assignment Homework 1 solution Homework 2 assignment Homework 2 solution Homework 3 assignment Note on Homework 3 Homework 3 solution Homework 4 assignment Homework 4 solution Homework 5 assignment Homework 5 solution Project Project Assignment Trace information Project list Miscellaneous Some useful tools for projects Review for Midterm Midterm Exam from 1995 SPECmarks Considered Harmful An Analysis of Pipeline Clocking Detailed Design of Reservation Station 757 lecture: Network Routing 757 lecture: Network Routing (BIG) Cache Summary Final Exam from 1995 	3
115	 CS132 Using Computers - Lectures 3 &amp; 4 CS132 - Using Computers Instructor Info: Instructor: &nbsp; Sally Peterson Office: &nbsp;5381 Computer Science Phone: &nbsp;263-7763 E-Mail: sally@cs wisc edu or slpeters@facstaff wisc edu Office Hours: Tuesday 10:45-11:45, Thursday 11:00-12:00 or by appointment Vital Class Info: Time: TR 8:00 to 9:15 (Lecture 3) TR 9:30 to 10:45 (Lecture 4) Place: All lectures held in 1800 Engineering Hall Lecture Text: Information Technology and Society by Laudon, Traver &amp; Laudon Lab Text: Point, Click &amp; Drag: Using the Macintosh by Peterson Course Introduction: This class is designed to take you from zero knowledge of computers to being a crack shot user (and using these skills to get yourself through college and into the job arena!) Our lab sections are taught using Macintosh computers, but sections using PCs are available (see CS132 Using Computers - Lectures 1 &amp;2 ) The course has two components: Part 1 - Lecture: In the lecture we will discuss computers in &quot;generic&quot; terms, i e general computer science topics We will discuss how computers work, including the following topics (not necessarily in this order): application programs (including word processors, spreadsheets, graphics and databases) hardware, input/output, storage devices operating systems, programming languages networks and telecommunications artificial intelligence and expert systems computer-related social issues Part 2 - Lab: In the laboratory (discussion) sections you will have hands-on experience on Macintosh IIci computers with the following programs: word processing ( MS Word 5 0 ) electronic mail, newsgroups, and World Wide Web ( Eudora 3 0 and Netscape 3 0 ) painting and drawing ( Aldus SuperPaint 3 0 ) spreadsheet and charting ( MS Excel 5 0 ) database ( FileMaker ) presentation manager ( HyperCard 2 1 ) desktop publishing ( Aldus PageMaker 4 0 ) An integral part of lab is learning the Macintosh operating system (System 7 5 3) as well In addition, there are some special tools (CD-ROM and scanners) available There are 10 TAs that teach the lab sections Both the TAs and I have the goal of providing you with high quality instruction and a rich educational experience TAs: Name Section Time Days Jon Bodner 358 6:10 MW Nick Leavy 338 340 3:30 11:00 MW TR Shannon Lloyd 354 356 5:20 6:40 TR TR Jeff Reminga 331 357 7:45 4:50 MWF MW Ira Sharenow 351 352 1:00 2:30 TR TR Brian Swander 335 336 12:05 1:20 MWF MWF Brad Thayer 333 334 9:55 11:00 MWF MWF Joe Varghese 339 355 9:30 8:00 TR TR Geoff Weinberg 337 353 2:25 4:00 MWF TR Maria Yuin 332 359 8:50 7:30 MWF MW Recommended Background: No background is necessary for this course Assignments, Quizzes and Exams: Your grade will be based on two exams from lecture, and on regular assignments and quizzes in lab Syllabus: To glance at the syllabus (which contains all nitty-gritty class details), click here Assignments: Assignment 3: SuperPaint Assignment 4: Excel Last modified: October 13, 1996 by Jon Bodner 	3
4	 cs520: Introduction to Theoretical Computer Science cs520: Introduction to Theoretical Computer Science Fall 1996 MWF 1:20pm, room 1325 cs lecturer: Brian Cole email: tuc@cs wisc edu office: 1309 cs office hours: Monday 2:15 - 3:15pm Friday 12:15 - 1:15pm teaching assistant: David Sundaram-Stukel email: sundaram@cs wisc edu office: 5364 cs office hours: Tuesday 3:00 - 4:00pm Wednesday 9:30 - 10:30am Thursday 3:00 - 4:00pm text: Introduction to Languages and the Theory of Computation , John C Martin, North Dakota State University, 1991, McGraw Hill, ISBN 0-07-040659-6 the tentative lecture schedule , including exam information some lecture clarifications the assignments page grading policy: %25 written assignments %40 mid-term examination %35 final examination archive of the cs520 mailing list cs520 Home Page / 1 September 1996 / Brian Cole &lt UW-Madison Computer Sciences home page &gt &lt UW-Madison home page &gt 	3
20	 CS 110 Introduction to Computer Programming Computer Sciences 110 Fall 1996 This is a one-credit course designed to cover the basic programming structures needed to prepare the students for CS310 and elementary engineering courses The material covered will be sufficient to enable the student to write simple programs to solve engineering problems in elementary courses The material in CS 110 is essentially the same as the first half of CS 302 List of fall sections: Lecture 1 (FORTRAN), Jeff Lampert Lecture 2 (FORTRAN), Jeff Lampert Lecture 3 (C++), Tony D'Silva Lecture 4 (C++), Tony D'Silva Lecture 5 (C++), Sidney Hummert Lecture 6 (C++), Sidney Hummert Lecture 7 (C++), Michael Birk Lecture 8 (C++), Michael Birk Lecture 9 (C++), Sidney Hummert Lecture 10 (C++),Sidney Hummert Lecture 11 (C++), Tony D'Silva Lecture 12 (C++), Tony D'Silva Lecture 13 (C++), Russell Manning Lecture 14 (C++), Russell Manning Lecture 15 (C++), Martin Reames Last modified: Wed Sep 4 11:29:13 1996 by Anthony D'Silva 	3
83	 Home Page for Sid Hummert's cs110, C++ sections CS110 Instructor: Sid Hummert How to contact me: email: hummert@cs wisc edu office: 1307, Computer Sciences and Statistics office phone: 262-6602 home phone: 276-4477 Office Hours: Monday 12:15-1:15 Thursday 3:00-4:00 Announcements: Textbook Problem solving with C++-- the object of programming by Walter Savitch Section Information: 9:55-10:45a, MWF, Psych 138, Lec 6 11:00-11:50a, MWF, Psych 130, Lec 10 Grades Computer Lab Rm 1350, Computer Science and Statistics Course Information: Day 1 handout What is 110 all about Tentative Syllabus for semester Late Policy Grading Criteria Academic Misconduct Viewgraphs Important software : Introduction to Microsoft Windows Hints for Windows Compilers The Windows operating system Email Mosaic Netscape C++ information: Introduction to Borland C++ The C++ language The Savitch Text Assignments: Program 0 due Wed, Nov 6 Program 1 due Fri, Nov 15 	3
36	 CS513, Fall96: on-line handouts CS513, Fall96: on-line handouts CS513, Fall96: final grades --> The list of available files will grow up, as we progress with the material and with the assignments The site you are accessing here is a mirror of the account ~amos/public/cs513 Thus, you may copy any file you find here without entering the www, by typing: cp ~amos/public/cs513/filename newfilename with filename being the file you wish to copy, and newfilename is the name you wish to assign to that file in your account You may view each file in following list by clicking the redball icon next to it email := A directory where all email messages to class are being stored as4 ps := Assignment # 4 , due November 11, 1995 mid_sam ps := A 55-minute midterm exam given to cs513 students in FALL93 as3 ps := Assignment # 3 , due October 23, 1995 as2 key := Comments on Assignment # 2 as2 ps := Assignment # 2 (2 pages), was due October 07, 1996 as1 key := Comments on Assignment # 1 as1 ps := Assignment # 1, was due September 20, 1996 geninfo ps := General Information about the course May be updated from time to time during the semester viva_vi ps := An advanced introduction to vi, written by Carl de Boor Should not be regarded as an official class handout grades := The most updated info concerning current grades in class as6 ps := Assignment # 6 , was due December 14, 1995 as5 ps := Assignment # 5 , was due November 30, 1995 as5 key := Comments on Assignment # 5 as4 key := Comments on Assignment # 4 as3 key := Comments on Assignment # 3 mid key := Comments on midterm exam midgrades ps := Temporary file that contains an unsorted list of midterm grades geninfo ps := --> 	3
108	 CS736 Spring 1996 CS 736: Advanced Operating Systems (Spring 1996) Summary This course is intended to give you a broad exposure to advanced operating systems topics There are two important components of this course: reading and discussion of various research papers, and a project involving implementation of an experimental system The research papers cover topics including synchronization and communications, memory management, file systems, protection and security, and distributed systems The project requires you to choose a problem, research and propose solutions, and implement a prototype system Lecture Info During each class, we will discuss topics relevant to the current papers The lecture will not be a detailed review of the papers, but rather a discussion of major topics and themes using the papers as a focal point Active participation in discussion is strongly encouraged Lecture: 11:00 - 12:15 Tuesday and Thursday, 2255 Engineering Hall Office Hour: 2:00 - 3:00pm Tuesday, or by appointment; 7361 Computer Sciences Text Our text is a selection of ``classic'' papers (from the 60's to the 90's) on operating system design and implementation You can purchase these readings at the DoIT (formerly MACC) documentation desk for about $20 The readings this semester are different from those of previous semesters; so please do buy a copy of these papers Grading There is no exam in this course Instead, there are two assignments The first assignment is using a benchmark suite to measure the performance of various operating systems (SunOS, Solaris, Linux, Windows, etc , as many as you can lay your hands on) The second assignment is the project, involving a project proposal, implementation, a final report, and a project presentation Of the total grade, class participation counts 10\%, the first assignment counts 20\%, and the project counts 70\% Schedule Here is a tentative schedule Projects Here is a list of suggested projects You can make up your own project as well In either case, you need to come and discuss with me before choosing a project Teams of two or more people are allowed Slides Here are the slides I used in my lectures Assigments Here is the first assignment 	3
148	 CS 302 Fall 1996 - Section 10 CS 302 Fall 1996 - Section 10 Algebraic Language Programming - C++ Tue /Thu 2:30-3:45, 455 Noland Instructor: Mike Steele Email: msteele@cs wisc edu Office: 1332 Comp Sci & Stat Building Office Hours: Mon /Wed 1-2:30pm (or other times by appointment), 1332 CS&S Office Phone: (608)262-6605 Important Announcements I have extended the deadline for Program 6 Please check your e-mail or read the NEW PROGRAM 6 DEADLINE INFORMATION Midterm 2 is on Tuesday, November 12th, from 7:15-9:15pm in Comp Sci & Stat 1325 again Current grades are on-line This includes grades for everything handed in through Tuesday, November 5th Sample programs: I've taken some of my examples from the past few weeks of class and filled in all the stuff I glossed over to make fully functioning programs out of them You may find this useful if you missed a day or even if you were there and didn't understand an example They're on the notes and examples page, near the bottom Remember to check your e-mail for clarifications to the programming assignments General Course Information CS 302 Home Page Course Objectives About the Vectra Lab CS 302 Consultants Course Syllabus and Reading Assignments Notes on Working from Home Class Handouts Programming Assignments Exams and Quizzes Some notes and examples Policy Information Email Policy Grading Policy (and Late Policy) Academic Misconduct Policy Useful Reference Pages Introduction to Microsoft Windows Introduction to Borland C++ Greg Sharp's Style Guide for C++ code Text Problem Solving with C++ - The Object of Programming by Walter Savitch Addison-Wesley Publishing Company, 1996 List of known errata Last modified: Wed Nov 6, 1996, by Mike Steele ( msteele@cs wisc edu ) 	3
181	 CS132 Lab 321 CS 132 Su-Hui Chiang: Lab 321 (Time: 8-9:15pm TR) Grades Go to CS132 homepage Go to my homepage 	3
224	 CS 536, Fall 1996 CS 536: Introduction to Programming Languages and Compilers Spring 1996 Story of the Month (new for October) Schedule Lecture: 9:30 - 10:45 TuTh, 1221 Comp Sci & Stat Recitation: 2:30 - 3:20 Tu, 107 Psychology Instructor: Susan Horwitz Office: 5391 CS&S Telephone: 262-7946 E-mail: horwitz@cs wisc edu Office Hours: Tuesday 3:30 - 4:30 Friday 1:30 - 2:30 or by appointment Teaching Assistant: Rahul Kapoor Office: 3360 CS&S Telephone: 262-9275 E-mail: rahul@cs wisc edu Office Hours: Monday and Wednesday 3:45 - 5:15 or by appointment Texts on Reserve at Wendt Library: Compilers Principles, Techniques, and Tools , Aho, Sethi, and Ullman Crafting a Compiler , Fischer and LeBlanc What's New (Check this regularly) General Course Information Course Overview Key Dates Information about assignments, exams, and grading (including late policy) Getting Started Readings Programming Assignments and Homeworks Examinations Lecture Notes Useful Programming Tools Grades Email Links of Interest 	3
110	 ECE 552 Home Page ECE 552 Intro to Computer Architecture Fall 1996 Professor Saluja NOTE: This page contains links to information for ECE 552, a course in the Electrical and Computer Engineering Department of the University of Wisconsin - Madison Materials are intended solely for the use of students enrolled in this course for the Fall 96 semester Professor and TA: Prof Kewal Saluja Mr Dan Sorin General Information Course Outline Course Conduct A Midterm Syllabus is now available An old midterm is now available Project specifications are now available Homework Assignments Fall 1996 HW#1 Problem Solution HW#2 Problem Solution HW#3 (Part II solution is now available) Problem Solution to Part I Solution to Part II HW#4 (Problem is now valid) Problem Solution MENTOR HELP For the project you need to use the Mentor Graphics Tools available on CAE workstations Please refer to the course outline for the project due dates The following literature on Mentor Tools will be of assistance to anyone who may be having problems These manuals are available online through bold_browser or may be checked out at CAE: Getting Started with Design Architect Training Workbook pages 1-35 to 1-48 and 2-60 to 2-88 Getting Started with Quicksim II Training Workbook do the lab exersise Additionally, these documents contain references to other documents which may be of help Click to send an email to Professor: Kewal Saluja TA: Dan Sorin Surfing Links: UW Engineering Homepage CAE Announcements News group WiscINFO , The UW Gopher Site The UW Engineering FTP server This file last modified 9-September-96 9:00pm CST Email questions and comments to Dan Sorin 	3
6	 CS 302 Section 70 Home Page CS 302 Algebraic Language Programming Section 70 (FORTRAN) This section is taught entirely in the FORTRAN programming language and is intended primarily for engineering students and non-computer science majors Click here for a course description Menu IMPORTANT ANNOUNCEMENTS - READ NOW! Lectures Instructor Grading Policy Syllabus Text and Lecture Notes Exams and Programming Assignments Problem Solving Exercises Computer Lab Other Pointers of Interest Lectures Section 70 : 103 Psychology, 9:55 am MWF Please be punctual to lectures to avoid disturbing the class Instructor - Gareth Bestor Office: Rm 1306 Computer Science & Statistics, 1210 W Dayton St Office Hours: Wed 7:45 - 8:45 am, Fri 11:00 - 1:00 pm or by appointment Phone: (608) 262-6601 [office] (608) 251-5193 [home, emergencies only ] E-mail: bestor@cs wisc edu (click here for finger) World-Wide-Web: http://www cs wisc edu/~bestor/bestor html Grading Policy Your final grade is based on seven programming assignments each worth 5% (not including Program #0) and three exams Your highest two exam scores will each contribute 25% to your final grade; your lowest exam score will contribute 15% You must complete and hand in all the assignments to be eligible to receive a passing grade for the course Final grades for all CS 302 sections are graded on a curve with a mean in the range of 2 8 - 3 0, where A = 4 0; the curve is computed after the final exam is completed Exam 1 Thur February 29, 7:15 - 9:15 pm Exam 2 Wed April 10, 7:15 - 9:15 pm, Rm 1207 Computer Science Final Mon May 13, 7:55 - 9:45 am Click here to see a list of the current class grades (identifed by student ID only) Syllabus (tentative) The following topics and sections of the text will be approximately covered each week during the semester You will only get the most out of this class if you read the relevant sections of the text before coming to class This way you will be able to ask questions in class about anything that you are unsure of, instead of waiting until you're in the lab trying to work on an assignment to discover you didn't really understand something Weeks 1-6 (Mid-Term Exam #1) Weeks 7-11 (Mid-Term Exam #2) Weeks 12-15 (Final Exam) Text and Lecture Notes Text: Fortran with Engineering Applications , 5th edition, by E Koffman and F Friedman, 1993 Lecture Notes: Copies of the lecture notes will be available on-line at the end of each week of class IMPORTANT - the on-line lecture notes are not a substitute for coming to class and only cover what I show on the overhead projector They do not include any examples or additional notes that I put on the board You are responsible for all the material covered in class Week 1 Week 2 Week 3 Week 4 Week 5 Week 6 Week 7 Week 8 Week 9 Week 10 Week 11 Week 12 Week 13 Week 14 Week 15 Exams and Programming Assignments There are three exams: two mid-term exams and one final exam Exams constitute 65% of your final grade so it is very important to do well on them to ensure a good grade, regardless of your performance on the assignments All exams are approximately two hours long (though you may stay a bit longer if you need extra time) and are closed-book You only need to bring a pen or pencil to exams - calculators are not necessary or even useful Exam Solutions: Mid-Term Exam #1 Mid-Term Exam #2 There are seven programming assignments (not including Program #0) each contributing 5% to your final grade All the assignments must be completed and handed in to be eligible to receive a passing grade for the course You must attempt to complete every programming assignment If you hand in a program that does not run or will not even compile without errors then it will not be graded and will automatically receive a zero grade and you risk failing the course Gradesheets Handin Directory (how to hand in assignments online) Late Policy Policy on Academic Misconduct (i e cheating) Assignment Specifications: Program #1 , due Monday 2/12/15/96, 9:55 am Program #2 , due Friday 2/23/96, 9:55 am Program #3 , due Wednesday 3/6/96, 9:55 am Program #4 , due Wednesday 3/27/96, 9:55 am Program #5 , due Friday 4/12/96, 9:55 am Program #6 , due Monday 4/29/96, 9:55 am Program #7 , due Friday 5/10/96, 1:00 pm How to Get Help with Your Assignments: Consultants: The consultants in the computer lab can help you with most problems They wear name tags and are on duty from approximately 8:00 am to 11:00 pm Consultants can answer short questions about compiler error messages and program syntax, as well as how to login, use the printers, send E-mail, run Netscape, etc Click here for more information about the consultants Instructor: General questions about an assignment or questions that may require a long explanation are best answered by myself Please see me during office hours or send me E-mail I am not normally in my office except during office hours because I do my dissertation research from home via a modem Therefore, if you want to see me outside of office hours please make an appointment first You can most easily contact me by E-mail because I regularly login and read my E-mail from home Click here to send me E-mail Problem Solving Exercises One of the most important skills you will learn in this class is problem solving Good problem solving skills distinguish a "good" computer programmer from a "bad" one - it doesn't matter how familiar or skilled you are in a particular programming language, if you do not understand how to solve the problem then you will not be able to write a computer program for it in any language To help you learn problem solving skills and techniques I will assign weekly problem solving exercises These will be small but non-trivial problems which I will give out each Monday You should look at the problem and think about it during the week and right down the steps you would go through to solve the problem; i e the overall structure of your program This is primarily an exercise in general problem solving so you do not have to write any FORTRAN code (though you may if you want to and have time) and your solution/algorithm should not even be dependent on a particular programming language such as FORTRAN Each Friday we will go over the solution in class Exercises: Week 3: Question 16, Pg 89 Click here for the solution Week 4: Question 4, Pg 147 Click here for the solution Week 5: Question 13, Pg 218 Click here for the solution Week 6: Question 6, Pg 269 Click here for the solution Week 7: Question 10, Pg 329 (subroutines) - click here for the solution; Question 11, Pg 330 (functions) - click here for the solution Week 8: Question 5, Pg 559 Click here for the solution Week 9: Question 8, Pg 401 Click here for the solution Week 10: Question 6, Pg 467 Click here for the solution Week 11: Question 5, Pg 467 Click here for the solution Week 12: Question 3, Pg 466 Click here for the solution Week 13: Question 5, Pg 655 Computer Lab You will be using the Vectra lab in Rm 1350 Computer Science & Statistics containing Hewlett-Packard Vectra's running Microsoft Windows and Microsoft FORTRAN This lab is open from 7:00 am to 1:00 am seven days a week except certain holidays The printer room is located across the hall in Rm 1359 You may also use your home or dorm computers to write your programs, however you will probably have to purchase your own copy of Microsoft FORTRAN or Lahey Personal FORTRAN (see the inside cover of the textbook) You may also work in any of the other computer labs on campus, however most do not have FORTRAN compilers (please see me first before using the CAE lab ) The software you will be using in the lab includes: Microsoft Windows and MS-DOS Microsoft FORTRAN E-mail Netscape Other Pointers of Interest CS 302 Home Page Gareth Bestor's Home Page Computer Sciences Department Home Page Starting Points for Internet Exploration Lycos (search the World-Wide-Web by keyword) Dilbert (comic relief for those long nights before an assignment is due) Copyright &copy 1996 Gareth S Bestor ( bestor@cs wisc edu ) Last modified April 24, 1996 	3
60	 CS310 Home Page Problem Solving using Computers - Fall 1996 Computer Sciences 310 Check the following pages for information on CS310 Instructors and teaching assistants including office hours Information on assignments including suggestions, copies of assignments, and explanations about grading Check the policy on assignments, doing your own work, etc Information on examinations and copies of past exams Information on labs including copies of the handouts Documents including a syllabus Many of the documents on these web pages are in postscript If you need a postscript viewer, you can obtain one from the CS ftp site Check the local services section of the CS department home page Under local services, go to the FTP web page, and then to the ghost directory Read the README file for further directions 	3
208	 CS 757 Home Page CS/ECE 757 - Advanced Computer Architecture II 3 credits Parallel algorithms, principles of parallelism detection and vectorizing compilers, interconnection networks, SIMD/MIMD machines, processor synchronization, data coherence, multis, dataflow machines, special purpose processors Prerequisites: CS/ECE 752 or consent of instructor Semesterly course information: No info as of Fall 1994 	3
112	 CS 367 &#160; CS 367-3: Introduction to Data Structures ( http://www cs wisc edu/~cs367-3/cs367 html , Revised 9/4/96) Fall 1996 James R Larus &#160; Instructor: James Larus larus@cs wisc edu 5393 Computer Sciences 262-9519 http://www cs wisc edu/~larus/larus html Office hours: Tuesday 3-4 pm , Friday 11-12 am Contents Teaching Assistants Text Lecture Information Electronic Mail The C++ Language Grading Exams Course Schedule Assignment 0 Assignment 1 Assignment 2 Assignment 3 Programming Assignments Course Objectives CS367 has two objectives: Present the concepts of data structures in general and some of the most widely used structures in detail Data structures are the fundamental building blocks of computer programs By the end of the course, you should be able to identify situations in which a data structure is necessary, determine the requirements for the data structure, and select the appropriate data structure from those covered in this course Reiterate the concepts of structure programming, abstract data types, and modularity These principles, which were introduced in CS302, are essential to writing clear, correct, and maintainable software As there is a close connection between abstract data types and data structures, this course places a strong emphasis on applying these principles in all programming exercises Teaching Assistants Wei Zhang and Chin Tang Chin are the teaching assistants (TAs) for this course (sections 2 and 3) They will grade your homework assignments and will be happy to answer questions about the assignments, or any other aspect of the course that is giving you trouble Wei Zhang Office: 1343 Compuer Sciences Office hours: Wednesday 10-11, Thursday 9-10, Sunday 3-4 Office phone: 262-5596 Email address: weiz@cs wisc edu Chin Tang Chin Office: 3310 Computer Sciences Office hours: Monday 9:30-10:30am, Tuesday 2:30-3:30pm, Friday 9:30-10:30am Office phone: 262-1721 Email address: cchin@cs wisc edu Home page: http://www cs wisc edu/~cchin/cchin html Text The text book for this course is Data Abstraction and Problem Solving with C++: Walls and Mirrors by Frank M Carrano (ISBN # 0-8053-1226-9) This is a well-written, if a little long-winded, text that covers most (but not all) of the material in this course It also includes background about C++, so a separate text for the language is not necessary The lectures will often (but not always) follow David Dewitt's CS 367 Lecture Notes - Fall 1995 These notes are far more complete that simple lecture notes, but they fall short of a true text book (they contain very little narrative text, no exercises, etc ) I am using these notes as a basis for my lectures; as such, I feel free to skip portions and cover additional material You may want to purchase these notes, which are available from the DoIT documentation desk at the Dayton Street entrance of the Computer Sciences building (1210 W Dayton St) If this course is your first experience with Unix, you will need information about activating your account, logging in, creating, editing, and manipulating files, and compiling, running, and debugging programs The handout CS 1000 , also available from the DoIT information desk, contains this crucial information (Also, see also the help section below ) Lecture Information Tuesday and Thursday: 11:00 - 12:30 in 107 Psychology As mentioned above, lectures will often follow DeWitt's notes Lecture attendence is strongly recommended as I will regularly present material that does not appear in the textbook or lecture notes, but will be useful for the programming assignments and exams Needless to say, You are responsible for all material covered in lecture! The exams will be based on the lecture material, reading assignments in the notes, and the course assignments Electronic Mail I often use electronic mail to notify students of changes in assignments, hints for programs, etc I assume that you regularly read your electronic mail Grading There will be one or two evening exams during the semester, a final exam and five programming assignments The exams will determine 50% of the final grade (with approximately equal weight for each one), and the programming assignments will count for 10% each The C++ Language CS 367 will be taught using the C++ programming language, and programming assignments must be written in C++ If you do not know C++, you should not be in this section of CS367 Jim Skrentny is teaching two sections of CS367 that cover C++ in addition to data structures C++ is a large and complex language; unless you are an experience programming (and even then), it is a difficult language to learn from a book There is also another WWW page with more information on the programming assignments Gdb There is also a web page that describes the gdb program debugger Exams Exam 1 Tuesday, Oct 22, 7:15-9:15pm, 1351 Chemistry Exam 2 TBA Final Exam Wednesday, December 18th, 5:05pm-7:05pm, place TBA Course Schedule The following is a rough outline of topics that will be covered in this course A more detailed scheduled will be provided later Topic Dewitt's Notes Introduction &amp; Administration Basic stuff of C++ lecture #2 Functions lecture #3 Pointers lecture #4 Records &amp; dynamic storage lecture #5 Lists lecture #6 Binary Search and O notation Advanced Lists lecture #7 Stacks lecture #8 Queues lecture #9 Hashing lecture #10 (Evening Exam) lecture #11 Recursion lecture #12 Trees Binary Trees - Sort &amp; Search lecture #13 AVL Trees Graphs lecture #16 (Evening Exam) Sorting lecture #17 TBA Assignment 0 This is an absolute requirement to get a grade other than F! Turn in an index card with the following information: Name and login name Year in school (freshman, sophomore, ) Previous CS courses Previous programming experience Recent photograph of you It should not be your picture from your 1st birthday, nor from that boy/girl scout trip in the summer of 1984 It can be color or black-and-white, any size, etc No CS367 grades will be given without a photo! Assignment 1 The first programming assignment is to write a simple abstract data byte for a bounded integer sequence The text of the assignment is on-line Assignment 2 The second programming assignment is to write a program to maintain a database of scores for a tennis tournament The text of the assignment is on-line Assignment 3 The second programming assignment is to write a program to produce a concordance using hash tables The text of the assignment is on-line 	3
127	 CS 766 - Computer Vision CS 766 - Computer Vision Fall 1995 Instructor: Chuck Dyer Office: 6397 CSS Telephone: 262-1965 Email: dyer@cs wisc edu Office Hours: 2:30 - 3:30 Mondays and Thursdays, and by appointment Teaching Assistant: Bryan So Office: 5364 CSS Telephone: 262-5105 Email: so@cs wisc edu Office Hours: 1:00 - 2:00 Wednesdays and Fridays, and by appointment Students What's New General Course Information Fundamentals of computer vision First, an introduction to low-level image analysis methods, including image formation, edge detection, feature detection, and segmentation Principles of defining modules for reconstructing three-dimensional scene information using techniques such as shape from shading and depth from stereo Active methods for scene recovery such as depth from focus and occluding contour detection by viewpoint control Motion detection and analysis including tracking Model-based three-dimensional object recognition Schedule 1:00 - 2:15 p m Tuesdays and Thursdays in 1325 CSS Prerequisites CS 540, fundamentals of calculus, probability theory, linear algebra, and C Grading Midterm Exam (Thursday, November 16): 35% Homework assignments: 35% Project: 25% Class participation: 5% Syllabus Required Readings Selected parts of Machine Vision by R Jain, R Kasturi, and B G Schunck, McGraw-Hill, New York, 1995 A collection of readings from journals and conference proceedings; to be sold at DOIT Documentation in small batches Supplementary Reading Sources Online Information Most course information will be available online at WWW URL http://www cs wisc edu/~dyer/cs766 html Reading Assignments to Date 9/5: Chapters 1 and 8 of JKS, and Paper #1 (at DOIT) 9/14: Chapter 2 9/21: Chapter 3 9/28: Chapters 4 and 5 10/5: 4 papers at DOIT available as Handout #3 10/17: Chapter 6 except 6 6, 6 7, 6 8 3, and 6 9 10/19: Chapter 7 1 - 7 3, and 2 papers at DOIT available as Handout #4 11/2: 3 papers at DOIT available as Handout #5, and Chapters 9, 11 1 - 11 3 11/28: Chapter 14 (primarily 14 4) Student Scores and Grades Homework Assignments Homework #0: Image Enhancement by Histogram Modification (Optional) Make a copy of your portrait image in ~cs766-1/public/images/ and then use xv to contrast enhance your face Do this by first rotating the image, then cropping a window around your head (say down to your shoulders), and finally interactively adjusting the Intensity modification function in the Color Editor window under the Windows button (You are also free to modify other things such as color if you wish ) When you have found a good grayscale transformation save the result as a color gif image and put it in the same directory where the original image is Send me email telling me qualitatively what intensity transformation you applied and why it improves the quality of the image overall I'll then use this image in the "photo board" of students in the class Feel free to use this image in your own Web home page as well! Homework #1: Skeletons (Due: October 3) Learn about getting started with the Vista vision software Read the Introduction to Vista Programming manual that is available at DOIT Documentation Corrections to the Original Assignment In Method 1, change condition 1 to be "at least 3 " instead of "at least 2 "; this will prevent some types of shapes from disappearing altogether In Method 1, condition 2 should also count as a 0-1 transition the case where NW=0 and N=1 In Method 2, the 3 x 3 matrix c for city-block distance should have infinity (i e , some large constant), not 0, in the four corners In Method 2, the 3 x 3 matrix c for chessboard distance should have 0, not 1, in the center position TEST IMAGES to be used: (1) /p/vision/images/hw1/DOIT v (2) /p/vision/images/hw1/hand v To evaluate your thinning results, you might want to try the following additional experiment using the output of at least one of your tests: (1) Convert your skeleton image to ubyte format using vconvert , (2) edit (you may need to use Emacs because vi is not "8-bit clean") the header of the new image file so that it contains the following lines right after the repn: ubyte line: component_interp: gradient low_threshold: 1 high_threshold: 2 (3) run vlink on this file, and then (4) vsegedges Try using the results on the image hand v , for example, to see how well this approach might be used to determine the direction the index finger is pointing (for a HCI application, say) Note: The thinning method may in fact delete entirely some shapes; e g , a 2 x 2 block of 1's surrounded by all 0's will disappear The thinning algorithm is based on the papers: (1) T Zhang and C Suen, A fast parallel algorithm for thinning digital patterns, Comm ACM 27 (3), 1984, 236-239, and (2) H Lu and P Wang, A comment on "a fast parallel algorithm for thinning digital patterns," Comm ACM 29 (3), 1986, 239-242 Comparison of student results of the different methods applied to the pointing hand image and a rotated version of this test image Homework #2: Image Splining for Mosaics (Due: October 24) Read the 3 papers: E H Adelson et al , Pyramid methods in image processing, RCA Engineer 29-6 , Nov/Dec 1984 P Burt and E H Adelson, The Laplacian pyramid as a compact image code, IEEE Trans Comm 31 , 1983, 532-540 P Burt and E H Adelson, A multiresolution spline with application to image mosaics, ACM Trans Graphics 2 , 1983, 217-236 Hints and FAQs Some splined images produced by students in the class Homework #3: Segmentation by Snakes (Due: November 9) Read the 2 papers: M Kass, A Witkin and D Terzopoulos, Snakes: Active contour models, Int J Computer Vision 1 , 1988, 321-331 D Williams and M Shah, A fast algorithm for active contours and curvature estimation, Computer Vision, Graphics, and Image Processing: Image Understanding 55 , 1992, 14-26 Hints and FAQs Homework #4: Your Own Project (Due: December 18) Student Project Titles and Abstracts See Supplementary Readings for some additional papers that might help you select a topic Student projects done in Stanford vision course Computer Accounts Accounts Course accounts are on the Sun Sparcstations called sun1 - sun36 in rooms 1358, 1363 and 1368 Each account has a large disk space quota of 50MB so you can store images for homeworks and your project Be sure to delete old images and compress others (see gzip(1) ), however, in order to save space Email Email sent to cs766-1list goes to everyone in the class including the instructor and TA Printers To print images you should use one of the laserprinters, laser1 - laser4 , which are located in room 1359 Alternatively, the generic printer name laser will send output to one of the four printers with the shortest queue Caution: Before sending images to the printer, be sure to check the queue; if there are a lot of jobs being printed it is bad manners to send images to be printed because they take so long to print Be considerate! Vision Software Vista The Vista programming environment will be used in the homework assignments The code is located in the directory /p/vision/ip-tools/vista/ Man pages are in /p/vision/ip-tools/vista/man/ and executables are in /p/vision/ip-tools/vista/bin/ Xv xv(1) is an interactive image display program for the X window system that is very useful for displaying images in a variety of formats ImgStar 70 basic image processing operations invoked using Unix-like command lines Code, executables and manual are in /p/vision/ip-tools/imgstar/ Khoros The Khoros image processing software development environment provides a set of basic image processing modules and a graphical programming language interface for rapid prototyping of simple image processing algorithms The code is located in the directory /p/vision/ip-tools/khoros /p/vision/ip-tools/khoros/bin/cantata is the executable that starts up the interactive environment Netpbm A toolkit for conversion of images between a large variety of different formats Based on the Pbmplus package Man pages are in /p/vision/ip-tools/man/ and executables are in /p/vision/ip-tools/bin/ Matlab Matlab(1) is a numeric computation and visualization environment Signal processing and image processing toolboxes are especially relevant Test Images Most test images will be put in the directory /p/vision/images/ although they may require format conversion to be used Some other images may be put in ~cs766-1/public/images/ Numerous image databases are also accessible via the WWW; for example, see the collection of test images at CMU Examination Examination Solution The Exam will be held on Thursday, November 16 from 12:45 pm to 2:15 pm in the regular classroom, 1325 CS Note the early starting time! The exam will cover topics up through shape-from-shading, including readings in the textbook, papers sold through DOIT, and homework assignments You may bring into the exam one (1) 8 5" x 11" sheet of paper with any notes you want on both sides The exam will focus on main ideas and algorithms, not proofs See old exams below for the types of questions that will be asked Old Exams Exam 1 - Spring 1994 Exam 2 - Spring 1994 Exam 1 - Spring 1992 Exam 2 - Spring 1992 Links of Interest Computer Vision Home Page (highly recommended!) Chuck Dyer's Links of Interest B Wandell's List of Useful Numbers in Vision Science HDTV Grand Alliance HDTV System Specification Advanced Television Systems Committee (ATSC) ATSC Documents in postscript SPIE Optical Science and Engineering Library Vision Demos and Projects Apple's Quicktime VR image mosaicing product IBM's PanoramIX image mosaicing An Example of Panoramic Image Mosaicing DECface talking synthetic face CMU Video-Rate Stereo Machine CMU Virtualized Reality Project IBM's QBIC Image Database Project Miscellaneous Computer Vision Demos Other Computer Vision and Related Courses CS 585 and CS 835 at Boston University Cardiff University (UK) Khoros Digital Image Processing Online Course Royal Institute of Sweden Stanford University University of Virginia University of Washington 	3
84	 CS564 Lecture 2 Home Page Welcome to the home page for CS564-2 This page is (obviously) under construction; as the semester progresses we will be adding information that you need to know to this page The most important thing to know now is that the class meeting room has been changed Currently we are meeting in 150 Russell Labs for the TR lectures; the optional discussion on Friday has not been moved so it is still in 103 Psychology Instructor Jeff Naughton Office: 7369 CS&S Phone: 262-8737 E-Mail: naughton@cs Office Hours: F 8:15AM - 9:45AM Teaching Assistant Tim Jung Office: 1308 CS&S Phone: 262-6602 E-Mail: tjung@cs Office Hours: 4:00PM - 5:00PM Monday; 2:30-3:30 Wednesday Lecture and Discussion Lecture Time: TR 11:00 - 12:15 Place: 150 Russell Labs Discussion (optional) Time: F 9:55 Place: 103 Psychology More information This lecture of 564 will be taught in close cooperation with Lecture 1; in fact, the assignments (but probably not the exams) will be the same for both For more information about CS564 in general, and the Minibase assignments in particular, please see the CS564 Lecture 1 Homepage 	3
200	 CS302 Homepage CS302 Homepage Welcome to the homepage for CS302 The purpose of this homepage is to provide my students with information pertaining to our sections of CS302 Since this page changes frequently, it is your responsibility to check this page often General Information Instructor: Todd Munson Email: tmunson@cs wisc edu Office: 1301 Computer Science and Statistics Office Phone: (608) 262-6600 Office Hours: 1:00 - 2:00 PM MW, 1:00 - 2:00 PM R, 7:30 - 8:30 AM F, and by appointment Sections: 8 and 25 Textbook: Problem Solving with C++ by Walter Savitch Class Information Expectations Syllabus Exam Schedule E-Mail Grading Late Assignments Extra Credit Policies Consultant Responsibilities Academic Misconduct Other Information Daily Notes and Assignments Homework Assignments Programs and Documents Used in Class Other Programs and Resources CS302 Homepage tmunson@cs wisc edu 	3
189	 CS 760 - Machine Learning CS 760 - Machine Learning (Spring 1996) General Course Information Instructor: Jude Shavlik 6357 CS &amp; Stats shavlik@cs wisc edu Office Hrs: Monday/Wednesday 2-3pm Teaching Assistant: Geoff Weinberg 94 Highway Labs (basement of the CAE building) geoffrey@cs wisc edu Office Hrs: Monday 2:30 - 3:30pm, Wednesday 3:00 - 4:00pm Office Phone: 262-5139, Home Home: 231-0950 Course Overview (postscript) Course Syllabus (postscript) Archive of Class Email (only readable if @cs wisc edu) Suggested Class Projects (postscript) Reading Assignments Assigned May 1, 1996: Read Chapter 7 (theory refinement) and Chapter 3 (computational learning theory) of Mitchell's textbook; feedback to author due May 15, 1996 Assigned April 24, 1996: Read `Learning Logical Definitions from Relations' by Quinlan (MLJ:5) and `Knowledge-Based Artificial Neural Networks' by Towell &amp; Shavlik (AIJ:70) Assigned April 22, 1996: Read `Chunking in Soar' by Laird, Rosenbloom, &amp; Newell (MLJ:1) and `Learning at the Knowledge Level' by Dietterich (MLJ:1) Assigned April 15, 1996: Read Chapter 10 (analytical learning) of Mitchell's textbook; feedback to author due April 26, 1996 Assigned April 8, 1996: Read journal articles on `unsupervised learning' by Fisher (MLJ:2), Rumelhart &amp; Zipser (CogSci:9), and Lenat (AIJ:9) Assigned April 1, 1996: Read Chapter 8 (genetic algorithms) of Mitchell's textbook; feedback to author due April 12, 1996 Assigned March 20, 1996: Read Chapter 13 (reinforcement learning) of Mitchell's textbook; feedback to author due April 5, 1996 Assigned March 6, 1996: Read `Backpropagation: The Basic Theory' by Rumelhart et al Assigned February 26, 1996: Read Chapter 5 (neural networks) of Mitchell's textbook; feedback to author due March 8, 1996 Also read the ML journal article by Shavlik, Mooney, and Towell that empirically compares ID3 and backprop Assigned February 12, 1996: Read Chapter 2 (concept space) of Mitchell's textbook; feedback to author due February 23, 1996 Assigned January 31, 1996: Read (1) `Machine Learning as an Experimental Science,' Kibler & Langley, RML:1 1 3, (2) Chapter 4 and Sections 6 10 & 6 11 of Empirical Methods for Artificial Intelligence , Cohen, MIT Press, 1995, and (3) Learning Representative Exemplars of Concepts: An Initial Case Study, Kibler & Aha, RML:2 2 4 (or the ML journal version of this article that's in the DoIT packet, but under a different title: `Instance-Based Learning Algorithms') Assigned January 24, 1996: Read Chapter 4 (decision trees) of Mitchell's textbook; feedback to author due February 2, 1996 Assigned January 22, 1996: Read Chapter 1 (introduction) of Mitchell's textbook; feedback to author due January 29, 1996 BRR Assignments BRR #3: on the ML journal article by Towell &amp; Shavlik on the KBANN algorithm Due Monday, May 6, 1996 BRR #2: on the ML journal article by Fisher on the COBWEB algorithm Due Wednesday, April 17, 1996 BRR #1: on the ML journal article by Shavlik, Mooney, &amp; Towell that empirically compares ID3 and backprop Due Wednesday, March 20, 1996 Be sure to answer (on one sheet of paper): Best Idea and Why What to do Next and How Do not summarize the assigned paper (one-sentence summary as a lead-in is ok); instead analyze it Late policy on BRRs: 50% off if handed in after material covered in lecture Homework Assignments Homework 4: Learning from Reinforcements - Q-Learning Due Wednesday, April 10, 1996 Homework 3: Training Neural Networks - BP Due Monday, March 25, 1996 Homework 2: Experimental Methodology Due Monday, February 26, 1996 Homework 1: Inducing Decision Trees - ID3 Due Monday, February 12, 1996 Homework 0: Creating Your Personal Concept Due Monday, January 29, 1996 Late policy on HWs: HWs are due at the start of class Each student will have FIVE "free" late days for use over the semester Once these are exhausted, there will be a penalty of 10% per day (measured noon-to-noon; weekends are free) To make the TA's job tractable, no HWs will be accepted more than one week late Previously Used Homeworks (postscript) Homeworks - Spring 1995 (most of these will migrate up as the semester progresses) Homework 1 - Inducing Decision Trees (ID3) Homework 2 - Heuristically Searching Concept Space (AQ) Homework 3 - Training Neural Networks (BP) Homework 4 - Learning from Reinforcements (Q-Learning and GA's) Homework 2 - Version Space (1992, postscript) Homework 4 - Explanation-Based Learning (1993, postscript) Homework 5 - Cobweb (1992, postscript) Previous Exams (postscript) Spring 1996 | Spring 1995 | Spring 1994 | Spring 1993 Spring 1992 | Spring 1990 | Spring 1989 | Spring 1988 &lt;IneedAgoodICON&gt; Some ML-Related Links Machine Learning journal ( the on-line page ) NIPS-95 papers (the premier neural net conference) Recent Table of Contents and Abstracts of Selected Journals (mostly from Wendt Library; readable only if @cs wisc edu) The UC-Irvine ML Dataset Archive Pointers to ML Courses Knowledge Discovery in Databases Neural Network Resources Some ILP Stuff Machine Learning Benchmarking IEEE Neural Networks Council (several journals connected to this page) International Society for Adaptive Behavior AI Bibliography Server (Austrian AI Institute) Neural Networks Bibliography Server (Austrian AI Institute) AI Resources (Canadian NRC Server) Aha's Links to People in ML More External AI References Help with Programming Assignments (from CS 540's page ) Using AKCL Common Lisp on Departmental Workstations Some Tips on Using Vi and Emacs for Lisp-code Writing Frequently Asked Questions about Lisp and the Course Computers Some Tips on Using the AKCL Debugger Some Help for Lisp Novices Lisp FAQ's (frequently asked questions) Steele's Common Lisp: The Language (2nd Edition) (This is a reference manual and not a textbook ) About Printing and Printers | How to Print WWW Pages Related Local Links U-Wisc ML Group U-Wisc ML &amp; Math-Programming Group U-Wisc Comp Biology (includes some ML) U-Wisc AI Group U-Wisc CS Dept U-Wisc Library More local links Last modified: Mon Apr 29 14:08:09 1996 by Jude Shavlik shavlik@cs wisc edu 	3
35	 / CS 110 Sections 1&2 Home Page CS 110 Introduction to Computer Programming Sections 1&2 (FORTRAN) CS 110 is a one-credit course which covers the basic programming structures needed to prepare students for CS 310 and elementary engineering courses No prior computer programming experience is required and only a basic knowledge of computers is assumed The material covered will enable you to write simple computer programs to solve engineering problems in elementary courses All programming is done in FORTRAN This course is intended for students who received little or no programming instruction in high school This section is taught entirely in the FORTRAN programming language and is intended primarily for engineering students and non-computer science majors Click here for a course description Menu IMPORTANT ANNOUNCEMENTS - READ NOW! Lectures Instructor Grading Policy Syllabus Text and Lecture Notes Programming Assignments Problem Solving Exercises Computer Lab Other Pointers of Interest Lectures Section 1 : 455 Noland, 8:50 am MWF, September 4 to October 25 Section 2 : 455 Noland, 8:50 am MWF, October 28 to December 14 Please be punctual to lectures to avoid disturbing the class Instructor - Jeff Lampert Office: Rm 5364a Computer Science & Statistics, 1210 W Dayton St Office Hours: Wed 11:00-12:30, Thurs 2:30-4:00 or by appointment Phone: (608) 262-5105 [office] (608) 283-0636 [home, emergencies only ] E-mail: tick@cs wisc edu (click here for finger) World-Wide-Web: http://www cs wisc edu/~tick/tick html Grading Policy Your final grade is based on four programming assignments each worth 25% (not including Program #0) This course is Credit/No Credit only There are no tests or exams 100% - Assignments (4 @ 24% each + 1 for 4%) Syllabus (tentative) The following topics and sections of the text will be approximately covered each week during the semester You will only get the most out of this class if you read the relevant sections of the text before coming to class This way you will be able to ask questions in class about anything that you are unsure of, instead of waiting until you're in the lab trying to work on an assignment to discover you didn't really understand something Weeks 1-8 Text and Lecture Notes Text: Fortran with Engineering Applications , 5th edition, by E Koffman and F Friedman, 1993 Lecture Notes: Copies of the lecture notes will be available on-line at the end of each week of class Important - the on-line lecture notes are not a substitute for coming to class They do not include any examples or additional notes that I put on the board (except for Week1) You are responsible for all the material covered in class Week1 Week2 Programming Assignments There are four programming assignments each contributing 25% to your final grade You must attempt to complete every programming assignment If you hand in a program that does not run or will not even compile without errors then it will get a very low mark (check the gradesheets) and you risk failing the course Gradesheets What to do in DOS/Fortran (and how to hand in assignments online) Late Policy Policy on Academic Misconduct (i e cheating) Assignment Specifications: Program0 , due Friday 11/1/96, 5:00pm Program1 , due Wednesday 11/13/96, 5:00pm How to Get Help with Your Assignments: Consultants: The consultants in the computer lab can help you with most problems They wear name tags and are on duty from approximately 8:00 am to 11:00 pm Consultants can answer short questions about compiler error messages and program syntax, as well as how to login, use the printers, send E-mail, run Netscape, etc Click here for more information about the consultants Instructor: General questions about an assignment or questions that may require a long explanation are best answered by myself Please see me during office hours or send me E-mail I am not normally in my office except during office hours because I do my research from home via a modem Therefore, if you want to see me outside of office hours please make an appointment first You can most easily contact me by E-mail because I regularly login and read my E-mail from home If you mail from Netscape, make sure to include your name and e-mail address , as they don't show up for me, so I won't know who mailed me and be able to respond otherwise Click here to send me E-mail Problem Solving Exercises One of the most important skills you will learn in this class is problem solving Good problem solving skills distinguish a "good" computer programmer from a "bad" one - it doesn't matter how familiar or skilled you are in a particular programming language, if you do not understand how to solve the problem then you will not be able to write a computer program for it in any language To help you learn problem solving skills and techniques I will assign weekly problem solving exercises These will be small but non-trivial problems which I will give out each Monday You should look at the problem and think about it during the week and right down the steps you would go through to solve the problem; i e the overall structure of your program This is primarily an exercise in general problem solving so you do not have to write any FORTRAN code (though you may if you want to and have time) and your solution/algorithm should not even be dependent on a particular programming language such as FORTRAN We will go over the solution in class the following Monday Exercises: Computer Lab You will be using the Vectra lab in Rm 1350 Computer Science & Statistics containing Hewlett-Packard Vectra's running Microsoft Windows and Microsoft FORTRAN This lab is open from 7:00 am to 1:00 am seven days a week except certain holidays The printer room is located across the hall in Rm 1359 You have a quota of 300 pages on which to print Once you exceed that quota you must contact the lab either by e-mail or by going to room 2310 during office hours (they prefer e-mail) to pay to increase your quota Beware: Some of the machines in the Vectra lab aren't configured correctly In particular, the machines along the wall closest to the outside hallway, towards the left-hand part of the room Try to avoid those if you can You may also use your home or dorm computers to write your programs, however you will probably have to purchase your own copy of Microsoft FORTRAN or Lahey Personal FORTRAN (see the inside cover of the textbook) You may also work in any of the other computer labs on campus, however most do not have FORTRAN compilers (please see me first before using the CAE lab ) The software you will be using in the lab includes: Microsoft Windows and MS-DOS Microsoft FORTRAN E-mail Netscape Other Pointers of Interest CS 110 Home Page Jeff Lampert's Home Page Computer Sciences Department Home Page Starting Points for Internet Exploration Lycos (search the World-Wide-Web by keyword) Dilbert (comic relief for those long nights before an assignment is due) Copyright &copy 1996 Modified from Gareth S Bestor ( bestor@cs wisc edu ) Last modified October 26, 1996 	3
215	 CS 302 Fall 1996 - Sections 6 and 9 CS 302 Fall 1996 - Sections 6 and 9 Algebraic Language Programming in C++ Instructor: Greg Sharp Email: greg@cs wisc edu Office: CS&St 1307 Office Phone: (608)262-6602 Office Hours: 6:00pm-8:00pm Mon and 12:00pm-1:00pm Wed (or by appt ) Grader: Krishna Kunchithapadam Email: krisna@cs wisc edu General Course Information CS 302 Home Page Course Objectives Vectra Lab CS 302 Consultants Syllabus Course Difficulty Working from Home News Startup Information Class Notes Homework Exams and Quizzes Style Guide Email Archive Policy Information Email Policy Grading Policy Late Policy Academic Misconduct Policy (YOU MUST READ THIS) Text Problem Solving with C++: The Object of Porgramming Walter Savitch Addison-Wesley Publishing Company, 1996 Please see this list of known errata Last modified: Mon Sep 2 16:02:54 CDT 1996 by Greg Sharp greg@cs wisc edu | http://www cs wisc edu/~greg/greg html 	3
199	 CS 564 - Database Management Systems: Design and Implementation CS 564 Database Management Systems: Design and Implementation Course Information ( Postscript version ) What's New! No class this Friday Instead, we will have office hours at that time Assignment 3 due day changed to Nov 8, this Friday Assignment 3 FAQ ( Text )(last updated Nov 5) Assignment 3 handout ( Postscript ) Class Mailing List ( CS564-1 ) Solutions to Chapters' Exercises Please DONT print them out Solutions to all Chapters' Exercises ( Postscript ) First Day Information Overview Prerequisites Office Hours Topics to be Covered Grading Important Dates Important Policy Issues The minibase home page (Check here for details on Assignment 0!) Assignments Assignment 0 handout ( Postscript ) Assignment 1 FAQ ( HTML )(last updated Sep 20) Assignment 1 handout ( Postscript ) Assignment 2 FAQ ( HTML )(last updated Oct 4) Assignment 2 handout ( Postscript ) Last year's Midterm sample ( Postscript ) The key to last year's Midterm ( Postscript ) Using Sybase: Info at UW and from Sybase C++ Info/Help Yahoo's entry of WWW C++ resources C++ Tutorial GCC/G++ Info Tree GDB (debugger) Info Tree CS 302's "The C++ language" (under construction) 1994 C++ Assignment 1 Handout Not Graded, for C++ experience A FAQ for 1994 Assignment 1 Other Handouts Coding conventions Instructor Raghu Ramakrishnan Office: 7355 CS&S Phone: 262-9759 E-Mail: raghu@cs Office Hours: MW 12:30PM - 1:00PM Lecture and Discussion Lecture Time: MWF 11:00AM - 12:15PM Place: 222 Ingraham Teaching Assistants Xuemei Bao Office: 1345 CS&S Phone: 262-1012 E-Mail: xbao@cs Office Hours: 2:30PM - 3:30PM Tues and Thur Last modified: Mon Sept 2 16:00:00 CDT 1996 by xbao 	3
91	 Finding Out About (UWisc CS838 - F96) Finding Out About: Information Retrieval and other technologies for seeking knowledge Richard K Belew Visiting Professor CS838 (Lecture 2) Univ Wisconsin - Computer Science Department Fall, 1996 Tue, Thurs 8:30-9:45a Call #20616 Room: 3345 Engr This course is designed for students interested in understanding more about the information retrieval and AI (esp knowledge representation and machine learning) techniques underlying much of the exciting new activity occurring on the World Wide Web For a more complete description of the courese, you can see: an abstract; a syllabus of the major topics to be considered; a graphical &quot;map&quot; of how these are related; and a (tentative) schedule of how the semester will proceed Course Resources Readings Overview - Part 1 (Postscript, 56k) Overview - Part 2 (Postscript, 64k) Political Infidelity image (Postscript, 463k) Assignments Class Email (Digested by HyperMai) Suggestions for composing your Email for this class Related WWW resources Class Minutes (Taken by students, for students) Last modified by: belew@cs wisc edu 17 Sept 96 	3
113	 CS412 - Introduction to Numerical Methods -------------------------------------> last change: 06nov96 CS412 - Introduction to Numerical Methods This page contains information for the Fall 1996 CS412 course smile (tentative) syllabus (as of 01oct)--> ordered scores (for orderly minds) --> additional material ;--> changes on 27oct: See the note on cooperation on assignments on top of the assignments page ordered total scores for the midterm --> changes on 29oct: assignment 5 , due 12nov96 NOTE the CHANGED DUE DATE as well as the slightly changed points for problems 1 and 4 diary of 29 oct class; additional material on residual and error, condition # (29oct) changes on 04nov: Rick Carl's office hour this R is 11-12 list of errata for the text changes on 05nov: diary of 31 oct class; diary of 05 nov class; changes on 06nov: useful email concerning problem 3 (05nov) UPDATED 06nov Since there was a question about the computational complexity of numerical analysis algorithms, I have posted a preprint , by one of the foremost mathematicians of today, on that subject, for those interested in this tricky topic least-squares solution and approximation (05nov) Time and Place: TR 12:55 - 2:15, CS&STAT 1221 Lecturer: Carl de Boor email: deboor@cs wisc edu Office hours: WF11-12, R14:30-15:30, 7379 CS&Stat MIDTERM (in class) on Thursday 24 October 96 I don't intend to provide a make-up exam --> FINAL EXAM: Thursday 19dec, 2:45p I don't intend to provide a make-up exam TAs The text is brand new: Introduction to Scientific Computing , by C Van Loan (Computer Science Department, Cornell University), Prentice-Hall, hence there is a growing list of errata for the text ; also the text may be supplemented here and there by additional material (12sep, 19sep, 24sep, 26sep, 01oct, 08oct, 10oct, 15oct, 17oct, 29oct ) All the m-files mentioned in the book are available, organized by chapter Be aware, though, that, on the ftp site mentioned in the book as well as here, all their names begin with a capital letter while, sometimes, their name in the book begins with lower case letter matlab diaries of class sessions 03sep, 05sep, 10sep, 12sep, 17sep, 24sep, 26sep, 01oct, 03oct, 08oct, 10oct, 15oct, 29oct Present plans are to have all computing assignments in MATLAB (rather than Fortran or C) Kermit Sigmon's MATLAB Primer, 3rd Edition, is available at DoIT, for $1 95; look for Handout #2 for CS 525 or under CS 412 one student's reaction to the student edition of MATLAB accessing matlab via telnet (as of 8sep) accessing matlab via telnet from a Win95 or Win3 1 machine Course Overview Course Syllabus tentative, as of 29oct Assignments (1, 2, 3, 4, 5), also answers to 2, 3, 4 Here is a list of key-words grades (look for the last four digits of your student id) email concerning current questions CSL will conduct Unix Orientation Sessions for new users at 4p and 6p on T-R , 3-5 Sep, CS 1221, and at 4p on M-R, 9-12 Sep --> Related Links You might wish to explore the CS Department's Home Page , and the Computer Systems Lab's Frequently Asked Questions list A simple vi tutorial is available, as well as the more advanced vi reference viva vi! There is also a good introduction to unix 	3
116	 Home Page for Tony D'Silva's cs110, C++ section CS110M Instructor: Tony D'Silva How to contact me: email:dsilva@cs wisc edu office: 1349, Computer Sciences and Statistics phone: 262-5340 Office Hours: 12:00-1:00p MF or by appointment Textbook Problem solving with C++-- the object of programming by Walter Savitch Section Information: 8:00-9:15a, Sept 3 - Oct 24 , 1263 Comp Sci &amp; Stat , (First day in 226 Noland, as specified in Timetable)Lec 4 1:00-2:15p, Sept 3 - Oct 24, 2104 Chamberlin, Lec 12 Computer Lab Rm 1350, Computer Science and Statistics Course Information: Day 1 handout What is 110 all about Tentative Syllabus for semester Late Policy Grading Criteria Academic Misconduct Handouts Important software : Introduction to Microsoft Windows Hints for Windows Compilers The Windows operating system Email Mosaic Netscape C++ information: Introduction to Borland C++ The C++ language The Savitch Text Assignments: Program0 due Tuesday, Nov 5th Program1 due Tuesday, Nov 12 Program2 due Tuesday, Oct 1 >--> Program3 due Thursday, Oct 10 >--> Program4 due Thursday, Oct 24 >--> Solution to quizzes Solution to QUIZ 1 --> Solution to QUIZ 2 --> Last modified: Tue Nov 5 06:53:33 1996 by Anthony D'Silva dsilva@cs wisc edu 	3
217	 CS 367 - Lecture 2 CS 367-2 Introduction to Data Structures Fall 1996 Course email address: cs367-2@cs wisc edu Course home page: http://www cs wisc edu/~cs367-2/cs367 html INSTRUCTOR: Yannis Ioannidis Office: 7357 Computer Sciences Office hours: Tuesday 8:45-9:30 am / Thursday 8:45-9:30 am Office phone: 263-7764 Email address: yannis@cs wisc edu Home page: http://www cs wisc edu/~yannis/yannis html Contents News Teaching Assistants Lecture Information The C++ Language Text Grading Exams Course Schedule Assignment 0 Programming Assignments Late Policy Cheating Help Program Grading Style External Documentation Internal Documentation Using Unix and Vi The Program Development Cycle News Assignment 3 Assignment 3 is now ready Midterm Statistics Some interesting exam statistics for Section 2: max: 98, min: 22, median: 78, mean: 77 92 Old Midterm A sample old midterm is now available to help you in your preparation for our own midterm Assignment 2 Assignment 2 is now ready Notes on O-notation and Binary Search The notes on O-notation and Binary Search are now available If you want to print either one of them, open the File menu from the ( Ghostview ) window that shows you the document, and choose the ``Print '' menu item Women In Computer Science Some female faculty, graduate students, and undergraduates have formed a group called WICS (Women In Computer Science) One of the group's goals is to encourage more women to become computer science majors So if there are any women in this class who would like to talk to someone about majoring in computer science, or doing graduate studies in computer science, or if there are any women who would like some extra help with their classwork, they should see Suzan (a computer science grad student) during her office hours or email her to make an appointment Suzan's e-mail address is: stodder@cs wisc edu and her office hours are Tuesday & Thursday 1:30-2:30 in room 1345 Assignment 1 Assignment 1 is now ready Out of Town The first week of classes I will be out of town at the VLDB Conference Jim Larus will give the lectures for me I will be in class September 10th Teaching Assistants Both people listed below are teaching assistants (TAs) for the course They will be grading your homework assigments and will be happy to answer questions about the assignments, or any other aspect of the course that is giving you trouble Note that TAs are not assigned to specific sections Chin Tang Chin Office: 3310 Computer Sciences Office hours: Monday 9:30-10:30am / Tuesday 2:30-3:30pm / Friday 9:30-10:30am Office phone: 262-1721 Email address: cchin@cs wisc edu Home page: http://www cs wisc edu/~cchin/cchin html Wei Zhang Office: 1343 Computer Sciences Office hours: Wednesday 10:00-11:00am / Thursday 9:00-10:00am / Sunday 3:00-4:00pm Office phone: 262-5596 Email address: weiz@cs wisc edu Home page: http://www cs wisc edu/~weiz/weiz html Lecture Information Lecture: 9:30 - 10:45 Tuesday and Thursday 1325 Computer Sciences and Statistics The C++ Language CS 367 will be taught using the C++ programming language, and you will be required to do your programming assignments in C++ We didn't choose C++ just to make your life more difficult Most people who become fluent in C++ think it is far superior to C or Pascal; the use of C++ is growing tremendously in the field and the odds are that if you ever have to write another program after this course ends, you will be able to write it in C++ (The same statement is not true about Pascal C is also widely available, but after an initial startup period you will be more productive in C++ than in C ) If you go on to take more computer science courses, with few exceptions you will be required to use C++ in those courses Text The text book for this course is Data Abstraction and Problem Solving with C++: Walls and Mirrors by Frank M Carrano (ISBN # 0-8053-1226-9) This is a well-written text that covers most (but not all) of the material in this course It also includes a lot about C++, so a separate text for the language is not necessary For my lectures I will often (but not always) be following CS 367 Lecture Notes - Fall 1993 by David J DeWitt These notes are actually considerably more complete that simple lecture notes, but they are still short of a true text book (there is very little narrative text, no exercises, etc ) As a recommended additional source, you may want to purchase these notes, which are available from the DoIT documentation desk near the Dayton Street entrance of the Computer Sciences building (1210 W Dayton St) If this is the first experience with Unix for you, you will need some information about activating your account, logging in, creating, editing, and manipulating files, and compiling, running, and debugging programs The handout CS 1000 , available from the DoIT information desk (where the DeWitt notes are available), contains all the key information You will find it invaluable See also the help section below As I mentioned above, the lectures will often follow the DeWitt notes, although I may supplement them with a few handouts during the course of the semester Nonetheless, You are responsible for all material covered in lecture! The exams will be based on the lecture material, reading assignments in the notes, and the course assignments Grading There will be one or two evening exams during the course of the semester, a final exam and five programming assignments The exams will determine 50% of the final grade (with approximately equal weight for each one), and the programming assignments will count for 10% each Exams Exam 1 Tuesday, October 22nd, 7:15pm-9:15pm, 1351 Chemistry Exam 2 TBA Final Exam Wednesday, December 18th, 5:05pm-7:05pm, place TBA Course Schedule The following is the list of topics that will be covered in this course A more detailed scheduled will be provided later semester TOPIC DEWITT'S NOTES WALLS AND MIRRORS =========================================================================== Introduction, Administration 1-42 (general familiarity) Basic stuff of C++ lecture #2 101-135, App A, App C --------------------------------------------------------------------------- Functions lecture #3 App A Pointers lecture #4 141-150, App A --------------------------------------------------------------------------- Records & dynamic storage lecture #5 141-150, App A Lists lecture #6 150-177 --------------------------------------------------------------------------- Lists lecture #6 150-177 Binary Search and O notation 83- 86, 393-405 --------------------------------------------------------------------------- Advanced Lists lecture #7 177-189 Advanced Lists lecture #7 177-189 --------------------------------------------------------------------------- Stacks lecture #8 249-295 Queues lecture #9 307-344 --------------------------------------------------------------------------- Hashing lecture #10 591-608 Hashing lecture #10 591-608 --------------------------------------------------------------------------- Recursion (Evening Exam) lecture #11 50- 93, 203-238 Trees lecture #12 439-468, 501-502 --------------------------------------------------------------------------- Trees lecture #12 439-468, 501-502 Binary Trees - Sort & Search lecture #13 468-500 --------------------------------------------------------------------------- AVL Trees 587-590 AVL Trees 587-590 --------------------------------------------------------------------------- Graphs lecture #16 620-646 Graphs lecture #16 620-646 --------------------------------------------------------------------------- Graphs lecture #16 620-646 Graphs lecture #16 620-646 --------------------------------------------------------------------------- Sorting lecture #17 405-432 THANKSGIVING --------------------------------------------------------------------------- Sorting lecture #17 405-432 Sorting lecture #17 405-432 --------------------------------------------------------------------------- To be announced Assignment 0 This is an absolute necessity to get a grade other than F! Bring in a photograph of you It should not be your picture from your 1st birthday, nor should it be the one from that boy/girl scout trip in the summer of 1984 Other than that, it can be color or black-and-white, any size, etc No grade will be given without a photo! Programming Assignments Proficiency in a programming language (Pascal, C, C++, or FORTRAN) at the introductory level is assumed; the equivalent UW-Madison prerequisite course is CS 302 Assignments must be done in C++ on the designated machines These are in the machine rooms on the first floor of the CS building I encourage you to use these machines If you prefer to use a home computer, you may do so, with certain restrictions: You must have a C++ compiler on your home machine; you must log on to your university account often to read email and get copies of data files; finally, we will require that you turn in your C++ program electronically (via email) so if you work at home you must make provisions to download your programs to your university account and to make sure that they compile and run with the g++ compiler on the SPARCstations I often use electronic mail to notify students of changes in assignments, hints for programs, etc I assume that you will read all electronic mail that I send Late Policy No late assignment will be accepted Assignments must be turned in exactly when they are due In order to avoid lateness caused by machine loads, coincident due dates for several classes, etc , simply be sure to get started right away on each assignment Things are certain to go wrong now and then, so don't wait until the last minute to start Any exceptions must be approved by me, and you will need a very good excuse If you get into trouble, see me as soon as possible Cheating The Computer Science department takes a very hard line stance on cheating You are welcome to communicate with each other on design of algorithms and data structures, but there is to be no sharing of code You are also expected to learn, understand, and obey the Computer Systems Lab Policies governing your computer accounts Help If you are having problems with the course work or programs, please let me know as early in the semester as possible Office Hours Policies If you need help debugging a program, the best way to get help is to visit any one of the CS 367 TA's during his office hours, taking along a current hard copy of your program My office hours are intended as a time for me to re-explain concepts that I have presented in class but about which you are still confused, or to answer your specific questions about course material I encourage you to use email as a reliable way to contact me about any problems; I read and respond to email several times daily, almost every day of the week Program Grading Programs are graded on all of the following criteria Correctness: The program should behave correctly/normally on typical input The program should behave as stated in the project specifications Clarity: The program should be easy to read and understand (See the notes on style below for more information about clarity) Robustness: Correct behavior in extreme or unusual situations The program should handle such situations in a reasonable and logical manner (that is, it should not simply blow up) Quality of test data: The test data for the program should demonstrate all facets of the program's capabilities, including unusual cases Efficiency: Avoid unnecessarily inefficient algorithms or constructs However, efficiency should never be pursued at the expense of clarity Modularity: The program should be modular and should make effective use of parameters Completeness: You should incorporate all information into your program; there should be no need for any sort of extra (paper) documentation Generality: The program should be as general as possible, subject to consideration of efficiency and clarity You should avoid arbitrary limitations (such as a bound on the size or complexity of the input) whenever possible When limitations are necessary, they should be expressed as defined constants near the top of the program so that they can be easily changed The only numeric literals that should appear in your program are those values not very likely to change (such as 0, 1, or 3 1415926535) Style Use meaningful identifier names Use a consistent naming scheme for identifier names A suggested convention is as follows int variable_name; int function_name(int argument); const int DEFINED_CONSTANT = 1234; enum EnumType { VALUE1, VALUE2 }; class ClassName Do not put multiple statements on a single line Skip lines between functional groups of code Use a clear and consistent indentation style (see the DeWitt notes for a suggested style) Indent continued statements (if, loops, etc) Line up {'s and }'s Label }'s meaningfully (e g `` } // while (!done) '') External Documentation This should be included as a long comment at the beginning of your program It is addressed to both the typical user and to someone who wants to know superficially how the program works: Include your full name and student ID at the beginning of the comment Give a general description of what the program does Tell how to use the program: how to call it, format of data Give limitations, bugs, special features, and assumptions made Describe negative as well as positive aspects of the program If you don't include negatives we will assume you were unaware of them Information included in the assignment about the problem description need not be repeated, but may be briefly summarized for the first point above A statement referring the user to the assignment document is then sufficient Note that this only applies to the problem description! Internal Documentation There are four main types of internal documentation: Headers: Comments at the headers of functions, classes, and major data structures should describe their purpose, assumptions about their parameters, and the main outline of any algorithms they use Declarations: Comments next to a declaration of a variable or data member should provide extra information not conveyed by the identifier's name The name of a variable should tell as much about it as is possible without making it too long; additional information can be supplied by a comment For example int top; // index of last element added to stack You should use comments to explain parameters as well as local variables Within segments of code: Tricky or opaque sections of code should be avoided, but sometimes they are necessary In such cases, a comment can help the reader understand what's going on Between segments of code: These comments clarify the top-level outline of your algorithm Using Unix and Vi Many people working with UNIX for the first time will find that it takes some time to become comfortable with it (this is particularly true if your only previous programming experience is with Pascal using MacPascal on a MacIntosh ) I strongly urge you to put in the time early in the semester to become comfortable with Unix While this time may be painful, it is time well spent Also, you may wish to attend a UNIX tutorial They will be held in rooms 1240 Comp Sci in two sessions on each of the following days: TBA You will want to pick up a copy of CS 1000 before you go The Program Development Cycle The program development cycle in a UNIX environment is: for (;;) { edit your program // %vi program c compile your program // %g++ -Wall -g program c if (there are compilation errors) continue; run your program // %a out &lt; inputfile &gt; outputfile look at your output // %vi outputfile // or %more outputfile if (there are no errors) break; if (you are too tired to continue) { print a listing to take home // pr program c inputfile outputfile | lpr goto home } debug the program // gdb a out // run // // quit } you're done! turn in the result // submission instruction to be given out later yannis@cs wisc edu Mon Aug 19 17:28:14 CDT 1996 	3
233	 CS 302 Fall 1996 - Section 63 CS 302 Fall 1996 - Section 63 Algebraic Language Programming - C++ Name: Dave Eggleston Email: burnett@cs wisc edu Office: CS&St 1306 Office Phone: (608)262-6601 Office Hours: M 3:00-4:00 F 11:30 - 12:30 ANNOUNCEMENTS: updated Nov 10, 19:30 Note : The original output on the prog6 page had two errors in it (the days of the week were off by one ) The correct values are now there Information about Exam 2 - updated Nov 10 Questions Asked about Program 6 HourlyWorker Class Reading : Scan through 9 1 for Thursday's class Program 6 is now available Solution to Quiz 3 Grades Page is here General Course Information CS 302 Home Page Course Objectives Vectra Lab CS 302 Consultants Syllabus Working from Home Class "Handouts" Grades Homework Exams and Quizzes Miscellaneous Archive Policy Information Email Policy Grading Policy Late Policy Academic Misconduct Policy Text Problem Solving with C++ - The Object of Programming by Walter Savitch Addison-Wesley Publishing Company, 1996 List of known errata Last modified: Wed Aug 28, 1996, Dave Eggleston ( burnett@cs wisc edu ) Based on Greg Sharp's cs302 home page 	3
204	 CS 132, Fall 1996 --> --> --> Search the CS 132 web pages for keywords (returns all matching paragraphs): News Once you set up your class account, NEVER LEAVE YOUR COMPUTER WITHOUT EXITING FROM WINDOWS When you exit from windows, you automatically exit from your account, too If you don't do as instructed, the next person starting using the computer you've just abandoned has complete control over your account They can send messages signed with your name, read your mail, copy, or even delete your personal work Remember to exit windows when you're done working for the day, or when you plan to leave your machine unattended for some time The email address you get when you initialize your account is provided to you by the Computer Sciences department and is different from the one provided by DoIT You will have the account for CS 132 only during this semester; after the end of the course the account will be canceled As long as you are a UW student, the email account that DoIT provides will be active Look for messages and announcements for CS 132 in your Computer Sciences account Midterm exam answer key Instructor Professor Ed Desautels Office: 5375 Computer Sciences Office hours: 12-1 Monday-Wednesday, or by appointment Phone: 262-7971; dept office 262-1204 E-mail: ed@cs wisc edu Teaching Assistants Follow these links to your TA's home page Name: Kelly Ratliff Email: kelly@cs wisc edu Office #: 3360 CS&S Office phone: 262-9275 Office hours: MW 3:30-4:30 132 sections: 304, 305 GRADES Name: Nathan Bockrath Email: bockrath@cs wisc edu Office #: 3310 CS&S Office phone: 262-1721 Office hours: MW 10:00-11:00 132 sections: 301, 302 GRADES Name: Rehnuma Rahman Email: rehnuma@cae wisc edu Office #: 1349 CS&S Office phone: 262-5340 Office hours: M 11:00-12:00,W 12:30-1:30 132 sections: 317, 318 GRADES Name: Jaime Fink Email: jfink@cs wisc edu Office #: 1306 CS&S Office phone: 262-6601 Office hours: TR 10:45-11:45 132 sections: 315, 316 GRADES Name: Ashraf Aboulnaga Email: ashraf@cs wisc edu Office #: 3310 CS&S Office phone: 262-1721 Office hours: MW 4:00-5:00 132 sections: 319, 320 GRADES Name: Andrew Geery Email: geery@cs wisc edu Office #: 1301 CS&S Office phone: Office hours: R 2:30-4:30 132 sections: 303, 304 GRADES Name: James Herro Email: jherro@cs wisc edu Office #: 1301 CS&S Office phone: Office hours: WF 12:30-1:30 132 sections: 305, 310 GRADES Name: Abhinav Gupta Email: agupta@cs wisc edu Office #: 3360 CS&S Office phone: 262-9275 Office hours: MF 9:30-10:30 132 sections: 322, 323 GRADES Name: Jyothi Krothapalli Email: jyothi@cs wisc edu Office #: 3310 CS&S Office phone: 262-1721 Office hours: MW 10:00-11:00 132 sections: 306, 307 GRADES Name: Su-Hui Chiang Email: suhui@cs wisc edu Office #: 6384 CS&S Office phone: 262-6619 Office hours: R 4:00-5:00 132 sections: 321 GRADES Name: Thanos Tsiolis Email: tsiolis@cs wisc edu Office #: 6364 CS&S Office phone: 262-6615 Office hours: R 10:00 - 11:00 132 sections: 309 GRADES Explore the Web Further Companies Whose Software or Hardware We Will Use Borland Hewlett-Packard IBM Intel Microsoft Novell Useful Links for Further Web Exploration Lycos Enormous Database of Web Sites Yahoo Internet resources classified by categories Has a lookup search The Virtual Tourist Find W3 sites around the world by clicking on a world map The Mother of All BBS Large Alphabetical List of Web Sites What's Hot and Cool on the Web Lists of Especially Excellent Web Sites University of Wisconsin-Madison CS Home Page This page was originally created and maintained by Ben Teitelbaum and Thanos Tsiolis It was modified and now maintained by Kelly Ratliff 	3
97	 CS132 Using Computers - Lectures 3 &amp; 4 CS132 - Using Computers Instructor Info: Instructor: &nbsp; Sally Peterson Office: &nbsp;5381 Computer Science Phone: &nbsp;263-7763 E-Mail: sally@cs wisc edu or slpeters@facstaff wisc edu Office Hours: Tuesday 10:45-11:45, Thursday 11:00-12:00 or by appointment Vital Class Info: Time: TR 8:00 to 9:15 (Lecture 3) TR 9:30 to 10:45 (Lecture 4) Place: All lectures held in 1800 Engineering Hall Lecture Text: Information Technology and Society by Laudon, Traver &amp; Laudon Lab Text: Point, Click &amp; Drag: Using the Macintosh by Peterson Course Introduction: This class is designed to take you from zero knowledge of computers to being a crack shot user (and using these skills to get yourself through college and into the job arena!) Our lab sections are taught using Macintosh computers, but sections using PCs are available (see CS132 Using Computers - Lectures 1 &amp;2 ) The course has two components: Part 1 - Lecture: In the lecture we will discuss computers in &quot;generic&quot; terms, i e general computer science topics We will discuss how computers work, including the following topics (not necessarily in this order): application programs (including word processors, spreadsheets, graphics and databases) hardware, input/output, storage devices operating systems, programming languages networks and telecommunications artificial intelligence and expert systems computer-related social issues Part 2 - Lab: In the laboratory (discussion) sections you will have hands-on experience on Macintosh IIci computers with the following programs: word processing ( MS Word 5 0 ) electronic mail, newsgroups, and World Wide Web ( Eudora 3 0 and Netscape 3 0 ) painting and drawing ( Aldus SuperPaint 3 0 ) spreadsheet and charting ( MS Excel 5 0 ) database ( FileMaker ) presentation manager ( HyperCard 2 1 ) desktop publishing ( Aldus PageMaker 4 0 ) An integral part of lab is learning the Macintosh operating system (System 7 5 3) as well In addition, there are some special tools (CD-ROM and scanners) available There are 10 TAs that teach the lab sections Both the TAs and I have the goal of providing you with high quality instruction and a rich educational experience TAs: Name Section Time Days Jon Bodner 358 6:10 MW Nick Leavy 338 340 3:30 11:00 MW TR Shannon Lloyd 354 356 5:20 6:40 TR TR Jeff Reminga 331 357 7:45 4:50 MWF MW Ira Sharenow 351 352 1:00 2:30 TR TR Brian Swander 335 336 12:05 1:20 MWF MWF Brad Thayer 333 334 9:55 11:00 MWF MWF Joe Varghese 339 355 9:30 8:00 TR TR Geoff Weinberg 337 353 2:25 4:00 MWF TR Maria Yuin 332 359 8:50 7:30 MWF MW Recommended Background: No background is necessary for this course Assignments, Quizzes and Exams: Your grade will be based on two exams from lecture, and on regular assignments and quizzes in lab Syllabus: To glance at the syllabus (which contains all nitty-gritty class details), click here Assignments: Assignment 3: SuperPaint Assignment 4: Excel Last modified: October 13, 1996 by Jon Bodner 	3
196	 CS132 Info CS 132 Info for Section 358 TA Name: Jon Bodner Sections: 358 (MW 6:10-7:25) Office Hours: Monday 12:30-1:30 and Thursday 1:30-2:30 Office Number: 1308, Computer Sciences and Statistics (down the hall from DoIT) Phone: 262-6602 E-Mail: jonb@cs wisc edu Here are a few things to keep in mind: If you need a copy of the lab guide for my sections, click here to get one, then choose Print from the File Menu and click OK If you have any questions, please stop by during my office hours or send me E-Mail Grades for my section are available by clicking here Jon Bodner/ jonb@cs wisc edu /1326 Mound St #1, Madison, WI 53715 Last Modified: September 15, 1996 	3
201	 CS/ECE 752 Fall 1996-1997 CS/ECE 752: Advanced Computer Architecture I Fall 1996-1997 Offering Instructor: Mark D Hill and TA: Jeff Shabel URL: http://www cs wisc edu/~markhill/cs752/ Computer architecture is the science and art of selecting and interconnecting hardware components to create a computer that meets functional, performance and cost goals This course qualitatively and quantitatively examines computer design tradeoffs We will learn, for example, how uniprocessors execute many instructions concurrently and why state-of-the-art memory systems are nearly as complex as processors Examining tradeoffs requires that you already know how to design a correct computer, as is taught is the important prerequisite CS/ECE 552 CS 537 is also a prerequisite, but it is less important, and may be taken concurrently or adequately covered with external reading What's New Instructor Teaching Assistant Text Reader Lecture Project Examinations Homeworks Incompletes and Academic Misconduct Grading Approximate Outline Miscellanea What's New Homework 3 Assignment Vectors (Appendix B) Instruction Level Parallelism (Chapter 4) Instructor: Mark D Hill Office: 6373 Comp Sci and Stat Email: markhill@cs wisc edu Office hours: Monday 2:00-3:00, Wednesday 11:00-12:00 or by appointment Teaching Assistant: Jeff Shabel Office: 1351 Comp Sci and Stat Phone: 263-1938 Email: jshabel@cs wisc edu Office hours: Tuesday 10:00-11:00, Thursday 2:20-3:20, or by appointment Text John L Hennessy and David A Patterson, Computer Architecture: A Quantitative Approach Morgan Kaufmann Publishers, Second Edition, 1996 (The 1st Edition will NOT do, as there are many improvements ) Reader Students will also be taught to read the literature using about two dozen papers that will be made available as four readers through DoIT Reader 1 Table of Contents (full papers available from DoIT) Reader 2 Table of Contents (full papers available from DoIT) Reader 3 Table of Contents (full papers available from DoIT) Reader 4 Table of Contents (full papers NOT yet available from DoIT) Lecture Time: 11:00 - 12:15 Tuesdays and Thursdays Place: 1263 Comp Sci and Stat Lecture Notes (access for Univ of Wisconsin-Madison only): Introduction, Performance, and Cost (Chapter 1) Instruction Sets (Chapter 2) Caches (Chapter 5 Part A) Main Memory (Chapter 5 Part B) Advanced Caches (Chapter 5 Part C) Pipelining (Chapter 3) Instruction Level Parallelism (Chapter 4) Vectors (Appendix B) Rest TBD Memory (Chapter 6 Part B) [Talluri and Hill 1994] Basic Pipelining (Chapter 4 Part A) Basic Pipelining (Chapter 4 Part B) Instruction Level Parallelism (Chapter 5 Part B) Input/Output (Chapter 7) Interconnects (Chapter 8) No notes for Parallel Processing (Chapter 9) END COMMENT } --> Project The default project is to do some original research in a group of three students For example, you could examine a modest extension to a paper studied in class or simply re-validate the data in some paper by writing your own simulator Alternatively, you may work in a group of two to write a paper that surveys an area within computer architecture Projects will include an oral presentation and a paper Assignment Examinations There will be two midterm exams, but no final exam The midterms are listed in in the Approximate Outline Please advise me of any conflicts with these likely exam times before the end of the second week of classes Homework There will be several assignments Many assignments will require the review of material that is touched upon, but not covered in depth in class Assignments will not be weighted equally The approximate weights of each assignment will be specified when the assignment is handed out Assignments will be due in class on the due date NO LATE ASSIGNMENTS WILL BE ACCEPTED, except under extreme non-academic circumstances discussed with the instructor at least one week before the assignment is due Homework 0, Do NOT TURN IN, but you may optionally do it to refresh your knowledge (== Homework 1 from Fall 1994): assignment END COMMENT } --> Homework 1: assignment and solution Homework 2: assignment and solution Homework 3: assignment Incompletes and Academic Misconduct University policy on incompletes and academic misconduct will be followed strictly Grading 35% Project 25% Midterm 1 25% Midterm 2 15% Homework Approximate Outline Week of Topic Topic Reading Sep 3 Introduction Performance/Cost Chapter 1 Sep 10 Instruction sets Instruction sets Chapter 2 Sep 17 Instruction sets Memory systems cont , Chapter 5 Sep 24 Memory systems Memory systems cont Oct 1 Memory systems Memory systems cont Oct 8 Memory systems Review cont Oct 15 Midterm 1 ILP Chapter 3 Oct 22 ILP ILP Chapter 3 and 4 Oct 29 ILP ILP cont Nov 5 ILP I/O cont , Chapter 6 Nov 12 I/O Interconnects Chapter 7 Nov 19 Interconnects Review cont Nov 26 Midterm 2 Thanksgiving (no class) -- Dec 3 Multiprocessors Blue sky Chapter 8 Dec 10 Project talks Project talks -- Miscellanea Example Midterm CS/ECE 752 offerings with content and organization similar to the present course: Prof Jim Smith's offering last semester My last offering in Fall 1994-1995 Wisconsin CS's Computer Architecture Group Computer Architecture Colloquium Tuesdays 4-5 PM World-Wide Computer Architecture Information Oral Presentation Advice, including David Patterson's How to Give a Bad Talk Wisconsin Architectural Research Tool Set (WARTS) Online Raw Data for Cache Performance of the SPEC92 Benchmark Suite Many popular benchmark suites can be found under cs wisc edu's AFS namespace at /p/hill/benchmarks Due to license retrictions, access is limited to cs wisc edu Last updated by Mark D Hill at Tue Sep 3 14:35:32 CDT 1996 	3
0	 CS302 Home Page Computer Sciences 302 Algebraic Language Programming Sections and Instructors We would like your comments, suggestions, or complaints about CS302 Feedback may be provided by clicking here - Jim Skrentny, CS302 Coordinator, Office: CS1303, 262-0191, Email skrentny@cs Information for All Sections CS 302 Frequently Asked Questions Course Overview Microcomputer Laboratories Consultants - Fall 1996 Consulting Schedule Tutors (mainly C++) Policy on Academic Misconduct Courses Offered by CS Department Software for All Sections Introduction to Microsoft Windows Hints for Windows Compilers The Windows Operating System Email Netscape Creating and Using Subdirectories C++ Information The Savitch Text Book Introduction to Borland C++ The C++ language The Borland C++ integrated development environment Fortran Information See Jeff Lampert's home page for Section 70 Last Updated: Fri 8/30/96, Jim Skrentny CS302 Coordinator, skrentny@cs wisc edu 	3
59	 CS310 Home Page Problem Solving using Computers - Fall 1996 Computer Sciences 310 Check the following pages for information on CS310 Instructors and teaching assistants including office hours Information on assignments including suggestions, copies of assignments, and explanations about grading Check the policy on assignments, doing your own work, etc Information on examinations and copies of past exams Information on labs including copies of the handouts Documents including a syllabus Many of the documents on these web pages are in postscript If you need a postscript viewer, you can obtain one from the CS ftp site Check the local services section of the CS department home page Under local services, go to the FTP web page, and then to the ghost directory Read the README file for further directions 	3
82	 CS717 - Numerical Functional Analysis -------------------------------------> last change: 26aug96 CS717 - Numerical Functional Analysis This page contains information for the Fall 1995 version of MATH/CS 717 Current class notes will be available in the following directory , as well as in hard copy from DoIT classes are MWF 8:46 - 9:40 most recent announcement (21 dec): I have posted the grades Time and location: MWF 8:46-9:40, 1257 CS&Stat Lecturer: Carl de Boor email: deboor@cs wisc edu Office hours: M10-11, W11-12, F14:30-15:30, 7379 CS&Stat on-line classnotes 0, I, II, III, IV, V, VI, VII, VIII, IX, X, Index Assignments : due 18sep, 25sep, 2oct, 9oct, none due 16oct, 23oct, 30oct, 06nov, 13nov, 20nov, 04dec, 11dec email concerning homework and other course-related questions Related Links You might wish to explore the CS Department's Home Page , or the CS Course Offerings 	3
243	 CS 110 Section 2 Home Page CS 110 Introduction to Computer Programming Section 2 (FORTRAN) CS 110 is a one-credit course which covers the basic programming structures needed to prepare students for CS 310 and elementary engineering courses No prior computer programming experience is required and only a basic knowledge of computers is assumed The material covered will enable you to write simple computer programs to solve engineering problems in elementary courses All programming is done in FORTRAN This course is intended for students who received little or no programming instruction in high school This section is taught entirely in the FORTRAN programming language and is intended primarily for engineering students and non-computer science majors Click here for a course description Menu IMPORTANT ANNOUNCEMENTS - READ NOW! Lectures Instructor Grading Policy Syllabus Text and Lecture Notes Programming Assignments Problem Solving Exercises Computer Lab Other Pointers of Interest Lectures Section 2 : 134 Psychology, 8:50 am MWF, March 18 to May 10 Please be punctual to lectures to avoid disturbing the class Instructor - Gareth Bestor Office: Rm 1306 Computer Science & Statistics, 1210 W Dayton St Office Hours: Wed 7:45 - 8:45 am, Fri 11:00 - 1:00 pm or by appointment Phone: (608) 262-6601 [office] (608) 251-5193 [home, emergencies only ] E-mail: bestor@cs wisc edu (click here for finger) World-Wide-Web: http://www cs wisc edu/~bestor/bestor html Grading Policy Your final grade is based on four programming assignments each worth 25% (not including Program #0) This course is Pass/Fail only You must complete and hand in all five assignments to be eligible to pass the course There are no tests or exams 100% - Assignments (4 @ 25% each) Click here to see a list of the current class grades for Section 1 (identifed by student ID only) Click here to see a list of the current class grades Section 2 (identifed by student ID only) Syllabus (tentative) The following topics and sections of the text will be approximately covered each week during the semester You will only get the most out of this class if you read the relevant sections of the text before coming to class This way you will be able to ask questions in class about anything that you are unsure of, instead of waiting until you're in the lab trying to work on an assignment to discover you didn't really understand something Weeks 1-8 Text and Lecture Notes Text: Fortran with Engineering Applications , 5th edition, by E Koffman and F Friedman, 1993 Lecture Notes: Copies of the lecture notes will be available on-line at the end of each week of class Important - the on-line lecture notes are not a substitute for coming to class and only cover what I show on the overhead projector They do not include any examples or additional notes that I put on the board You are responsible for all the material covered in class Week 1 Week 2 Week 3 Week 4 Week 5 Week 6 Week 7 Week 8 Programming Assignments There are four programming assignments each contributing 25% to your final grade You must attempt to complete every programming assignment If you hand in a program that does not run or will not even compile without errors then it will not be graded and will automatically receive a zero grade and you risk failing the course Gradesheets Handin Directory (how to hand in assignments online) Late Policy Policy on Academic Misconduct (i e cheating) Assignment Specifications: Program #0 (handed out in class), due Wednesday 3/27/96, 8:50 am Program #1 , due Monday 4/8/96, 8:50 am Program #2 , due Friday 4/19/96, 8:50 am Program #3 , due Wednesday 5/1/96, 8:50 am Program #4 , due Friday 5/10/96, 1:00 pm How to Get Help with Your Assignments: Consultants: The consultants in the computer lab can help you with most problems They wear name tags and are on duty from approximately 8:00 am to 11:00 pm Consultants can answer short questions about compiler error messages and program syntax, as well as how to login, use the printers, send E-mail, run Netscape, etc Click here for more information about the consultants Instructor: General questions about an assignment or questions that may require a long explanation are best answered by myself Please see me during office hours or send me E-mail I am not normally in my office except during office hours because I do my dissertation research from home via a modem Therefore, if you want to see me outside of office hours please make an appointment first You can most easily contact me by E-mail because I regularly login and read my E-mail from home Click here to send me E-mail Problem Solving Exercises One of the most important skills you will learn in this class is problem solving Good problem solving skills distinguish a "good" computer programmer from a "bad" one - it doesn't matter how familiar or skilled you are in a particular programming language, if you do not understand how to solve the problem then you will not be able to write a computer program for it in any language To help you learn problem solving skills and techniques I will assign weekly problem solving exercises These will be small but non-trivial problems which I will give out each Monday You should look at the problem and think about it during the week and right down the steps you would go through to solve the problem; i e the overall structure of your program This is primarily an exercise in general problem solving so you do not have to write any FORTRAN code (though you may if you want to and have time) and your solution/algorithm should not even be dependent on a particular programming language such as FORTRAN We will go over the solution in class the following Monday Exercises: Week 2: Question 16, Pg 89 Click here for the solution Week 3: Question 4, Pg 147 Click here for the solution Week 4: Question 13, Pg 218 Click here for the solution Week 5: Question 6, Pg 269 Click here for the solution Week 6: Question 10, Pg 329 (subroutines) - click here for the solution; Question 11, Pg 330 (functions) - click here for the solution Week 7: Question 8, Pg 401 Click here for the solution Computer Lab You will be using the Vectra lab in Rm 1350 Computer Science & Statistics containing Hewlett-Packard Vectra's running Microsoft Windows and Microsoft FORTRAN This lab is open from 7:00 am to 1:00 am seven days a week except certain holidays The printer room is located across the hall in Rm 1359 You may also use your home or dorm computers to write your programs, however you will probably have to purchase your own copy of Microsoft FORTRAN or Lahey Personal FORTRAN (see the inside cover of the textbook) You may also work in any of the other computer labs on campus, however most do not have FORTRAN compilers (please see me first before using the CAE lab ) The software you will be using in the lab includes: Microsoft Windows and MS-DOS Microsoft FORTRAN E-mail Netscape Other Pointers of Interest CS 110 Home Page Gareth Bestor's Home Page Computer Sciences Department Home Page Starting Points for Internet Exploration Lycos (search the World-Wide-Web by keyword) Dilbert (comic relief for those long nights before an assignment is due) Copyright &copy 1996 Gareth S Bestor ( bestor@cs wisc edu ) Last modified May 1, 1996 	3
42	 CS 525 (Also IE, MATH, STAT), Fall 1996 CS 525 (Also IE, MATH, STAT) Linear Programming Fall 1996 Schedule Lecture: 11:00 - 12:15 TR, 174 Mechanical Engineering Open-Book Midterm Exam Time & Date: 11:00 - 12:55 Thursday October 24, 1996 Location : 174 Mechanical engineering Open-Book Final Exam Time & Date: 12:25 - 2:25 Wednesday December 18, 1996 Location : TBA Instructor: Olvi L Mangasarian Office: 6393 Comp Sci & Stat Pphone: 262-6593 E-mail: olvi@cs wisc edu Office Hours: 2:30 - 4:30 Wednesdays (During Fall Semester) Teaching Assistant: Yuh-Jye Lee Office: 1307 Comp Sci & Stat Telephone: 262-6602 E-mail: yuh-jye@cs wisc edu Office Hours: MW 12:00-1:00 Textbook Linear Programming with MATLAB , M C Ferris and O L Mangasarian, Preliminary Version, DoIt, Madison, WI 1996 Syllabus Course Overview Course Information Course Information Books on Reserve at Kurt Wendt Library MATLAB Setup Homework 1 (Due September 12, 1996) Homework 2 (Due September 19 , 1996) Homework 3 (Due September 24 , 1996) Homework 4 (Due September 26, 1996) Homework 5 (Due October 3 , 1996) Homework 6 (Due October 8 , 1996) Homework 7 (Due October 17, 1996) Homework 8 (Due October , 1996) Homework 9 (Due November , 1996) Homework 10 (Due November , 1996) Homework 11 (Due December , 1996) Homework 12 (Due December , 1996) Programming Project (Due November 26, 1996) Sample Midterm Exam of March 1993 Solution to Sample Midterm Exam of March 1993 Midterm Exam of March 1996 Solution to Midterm Exam of March 1996 Midterm Exam of October 1996 Solution to Midterm Exam of October 1996 Sample Final Exam of May 1993 Final Exam of May 1996 Solution to Final Exam of May 1996 Mathematical Programming at UW Home Page Courses Relevant Web Sites Searchable Bibliographic Database of 15,000 Items Links to Various OR Sites This page is updated periodically during the semester 	3
191	 CS 537 - Introduction to Operating Systems - Fall 1996 CS 537 Introduction to Operating Systems Section 1, Fall 1996 Instructor Marvin Solomon office: 7397 Computer Sciences office hours: 9:00 TR office phone: 263-2844 email address: solomon@cs wisc edu TA Rob Mellencamp office: 1349 Computer Sciences office hours: 10-11 MWF office phone: 262-5340 email address: mellen@cs wisc edu News Watch this space for the latest updates Oct 31 The answers to the midterm exam and a summary of the scores are now available A more detailed breakdown of the grade distribution is also available Oct 27 The specification for Project 4 is now avaiable Oct 21 The due date for Project 3 has been moved to Thursday, Oct 24 A few typographical errors in the notes on Deadlock Avoidance have been corrected Most importantly, the same array was being called D in some places and M in others It is now called M in all places By popular demand, an old midterm exam is available for you to look at Warning: You should take this example with a large grain of salt The exam is from a very long time ago when the course used a different text and covered topics in a different order This semester's midterm will likely be quite different Oct 15 The time and place for the Midterm exam have been determined It will be in room 1240 Comp Sci from 7:15 to 9:15 pm on October 23 Oct 14 The specification for Project 3 is now avaiable Oct 9 A discussion of the issues presented in class to day is available Oct 8 A summary of the grades for project 1 are available Oct 6 The electronic hand-in directions for program 2 have now been posted Oct 1 The procedure giveFork in Algorithm 2 of the Project 2 specification should contain a call to notify() The web page has been corrected to show this Sept 26 I've fixed two more bugs in the Project 2 specification , one minor and one that is more important The first caused the Introduction paragraph to be slightly garbled Thanks to Jake Dawley-Carr for pointing this one out The second was a line omitted from the sample code for Algorithm I in the Programming Details section After you create a ThreadScheduler, you have to start it ThreadScheduler sched = new ThreadScheduler(); sched start(); This was specified correctly in the later section on the ThreadScheduler, but not in the Details section The Web page is now fixed Thanks to Liping Zhang for this one Sept 20 Test data files for Project 2 are now available The directory ~cs537-1/public/src contains three data files and a Java class for reading them The file ~cs537-1/public/src/Graph java contains the definition of the class Graph described in the project specification The file ~cs537-1/public/src/petersonCyclic graph contains the Peterson graph shown in the project specification As mentioned there, this initial placement of forks is not acyclic The file ~cs537-1/public/src/petersonAcyclic graph contains the Peterson graph with an acyclic initial placement of forks The file ~cs537-1/public/src/star graph contains a ``star'' topology, with one central philosopher sharing forks with each of nine others Sept 19 Todd Jenner pointed out two typos in the specification for Project 2 ``The 15 forks are the numbers 0 through 15 '' should read ``The 15 forks are the numbers 0 through 14 '' and in eat() , MAXTHINK should be replaced by MAXEAT The online version has been corrected Thanks, Todd Sept 18 There was a mistake in the Java tutorial notes in the section on Strings In the two-argument version of String substring() , the second argument is the offset of the end of the substring, not the number of characters in the string The notes have been corrected Thanks to Franco Tung Fai Chan for pointing this out Sept 17 We occasionally send urgent messages directly to a mailing list of students registered for this course There is an archive of all messages sent to this list on the web If you are not receiving these messages and think you should be, send mail to solomon@cs wisc edu The specification for Project 2 is now avaiable I have received a few requests for makefiles for Java There is a sample Makefile in ~cs537-1/public/src/Makefile Copy that file to the working directory where your Java source files are (remember, you should use a separate directory for each project), edit it as described in the comments in it, and then type make to compile and run your program, or make classes to compile without running Sept 13 Notes on handing in your assignment and simulating preemptive multitasking for the Solaris computers have been added here Sept 12 The Java tutorial is now finished (or about as finished as it's going to get) In the section on threads, you will find some helpful hints on how to structure project 1 You should be aware that there is a weekly seminar on operating systems and networking, meeting Mondays at 2:30 The first seminar of the semester is Monday the 16th Check the Colloquia and Seminars web page for more details Sept 5 The Java Book is finally available at the University Bookstore! Sept 4 The beginnings of a Java tutorial are now available Sept 4 To use Java on CS Department Unix workstations, you must create a file named cshrc local in your home directory containing one line: set path=($path /s/java/bin) To make the change take effect, either type source cshrc local or simply log out and log back in Sept 3 The specification for project 1 is ready Sept 3 The Unix Orientation Sessions, for all new Unix users, are scheduled for the following times: Tues - Thurs, Sept 3 - 5 4 pm and 6pm, room 1221 CS Mon - Thurs, Sept 9 - 12 4 pm, room 1221 CS Last updated: Wed Sep 4 14:10:06 CDT 1996 Contents News Summary Lecture Information Text Projects Grading Course Schedule Lecture Notes Summary CS 537 is intended as a general introduction to the techniques used to implement operating systems and related kinds of systems software Among the topics covered will be process management (creation, synchronization, and communication); processor scheduling; deadlock prevention, avoidance, and recovery; main-memory management; virtual memory management (swapping, paging, segmentation and page-replacement algorithms); control of disks and other input/output devices; file-system structure and implementation; and protection and security Lecture Information Lecture: 11:00 - 12:15 Tuesday and Thursday, 1221 Computer Sciences and Statistics Discussion: 11:00 - 11:50 Wednesday, 107 Psychology The discussion section is not ``optional'': it is at least as important as the lectures The primary focus of the Wednesday meetings will be topics related to the projects (including introduction to the Java programming language), but time will also be available for answering any questions you have regarding points raised in the the lectures or the text Text Required Modern Operating Systems by Andrew S Tanenbaum, Prentice Hall, 1992 Strongly Recommended The Java Programming Language by Ken Arnold and James Gosling, Addison Wesley, 1996 Online References Lots of additional helpful materials about Java are available on the WEB The following references have been collected locally for fast access The Java Tutorial The Java Language Specification Java API Documentation Watch this spot for additional links to the web Projects There will be five programming projects, all in the Java programming language Sun SparcStation workstations running the Solaris dialect of the Unix operating system are provided for your use, but you may use any computer to which you have access that implements the Java programming language However, if you do not use the Computer Sciences Department's computers, you will be responsible for transferring any required data sets or software packages to your computer The first assignment will be an easy ``get acquainted'' exercise designed to help you become familiar with the computing environment and the Java language Subsequent projects will involve process synchronization, processor scheduling, disk scheduling, and file-system implementation On all but the first project, students will be required to work in pairs Both members of a pair will receive the same grade on a project Feel free to discuss projects with anyone, but you must not share code with anyone but your partner Cheating will be vigorously punished Enough said! Assignments are due at the beginning of class (11 a m ) on the date indicated Over the entire semester, you have three late days of credit You can use these late days on different assignments (e g , one day on each of three assignments) or all three days on one assignment Late days may not be used for the last assignment Why Java Most students taking this course will be familiar with C++ but not Java Why, then, did we choose Java There are several arguments in favor of it Java is a more congenial programming environment Runtime errors such as bad subscripts, null pointers, and uninitialized variables cause exceptions caught by the language runtime rather than mysterious crashes or random behavior Java Strings are much easier to use than char * arrays Garbage collected storage management is extremely handy And more! Java is very trendy Java had caught on faster than any other new language in history Many of the reasons for Java's growing popularity have little to do with the way we will use it in this course (we will discuss these issues in class), but a byproduct of this course will be knowledge of Java, which is becoming quite a marketable commodity Java has ``operating system'' features built in In particular, it is the first widely-used programming language with language-level support for concurrency (threads) and synchronization (monitors) On the other hand, switching to a new programming language is always a bit dislocating Fortunately, there are excellent resources are available to ease the transition The Java Programming Language by Arnold and Gosling is amazingly good It is neither an introductory programming primer (the authors assume you already know how to program) nor a reference manual (although a reference manual is available online), but a readable introduction to the language, which takes you all to the way from getting started to everything you need to write quite sophisticated programs in Java This book is available at the University Bookstore You are strongly encouraged to buy it We have also gathered a variety of other resources together, including a nice online tutorial about Java programming, and a reference manual for the standard class libraries you will be using Grading There will be a midterm and a final exam, each of which will count for 25% of your grade The midterm will be in the evening of Wednesday, October 23 from 7:15 to 9:15 pm in room 1240, Computer Sciences and Statistics The final, as scheduled in the timetable, will be Tuesday, December 17 at 5:05 p m The first programming project (getting started) will count for 2% of your grade The remaining four projects will count for 12% each Course Schedule The following schedule is tentative; it may be updated later in the semester, so check back here frequently Sept 3 - 6 Introduction Chapter 1 Sept 10 - Oct 8 Processes, Synchronization, Processor Scheduling Chapters 2 and 6 Sept 17 Project 1 Due Learning Java Oct 10 Project 2 Due Synchronization Oct 10 - Nov 11 Memory Management and Virtual Memory Chapter 3 Oct 22 Project 3 Due CPU Scheduling Oct 23 Midterm Exam Room 1240 Comp Sci Nov 14 - Dec 5 I/O Devices, File Systems Chapters 4 and 5 Nov 14 Project 4 Due Disk Scheduling Dec 10 - 12 Protection and Security Sections 4 4 and 4 5 Dec 12 Project 5 Due File Systems Dec 17 Final Exam Lecture Notes Introduction History What is an OS For Bottom-up View Top-Down View Course Outline Java for C++ Programmers Processes and Synchronization Using Processes What is a Process Why Use Processes Creating Processes Process States Synchronization Race Conditions Semaphores The Bounded Buffer Problem The Dining Philosophers Monitors Messages Deadlock Terminology Deadlock Detection Deadlock Recovery Deadlock Prevention Deadlock Avoidance Implementing Processes Implementing Monitors Implementing Semaphores Implementing Critical Sections Short-term Scheduling Memory Management Allocating Main Memory Algorithms for Memory Management Compaction and Garbage Collection Swapping Paging Disks More to come solomon@cs wisc edu Thu Oct 31 16:24:20 CST 1996 Copyright &#169; 1996 by Marvin Solomon All rights reserved 	3
249	 cs302-1, cs302-22 CS 302, Sections 1 and 22 T A Dave Melski These pages change frequently Press the reload button daily Getting Started: We already have stuff on the assignments page If you are uncomfortable with the computer and the software, this page may have some helpful links TA info: Instructor: David Melski Office: 5390 Computer Science and Statistics (5th floor) Phone: 262-0018 Office Hours: M 9:50-10:50, 1:00-2:00, W 9:50-10:50 Email: melski@cs wisc edu or click here (No attachments please) Section info: Section 1 meets at 8:50 MWF in 240 Noland Section 22 meets at 11:00 MWF in 134 Psychology Text: Problem Solving With C++: The Object of Programming , Walter Savitch, Addison Wesley Publishing, 1996 CS 302 : General stuff for all of 302 (using the lab, using Windows, using Borland, some C++ reference material, etc ) This is a rough syllabus for sections 1 and 22 Email archive for section 1 Email archive for section 22 Policy info: Academic Misconduct (must read) The rule of thumb is, ``Don't share code '' Consultants are there to help Grading Late Work Email should be checked often Essential links: Assignments and solutions Handouts A list of CS302 tutors is available here Last modified: Tue Oct 22 14:00:17 1996 by David Melski melski@cs wisc edu 	3
214	 CS 736 - Fall 1995 CS 736 Advanced Operating Systems Fall 1995 Marvin Solomon office: 5355 Computer Sciences office hours: 9:00 TR office phone: 262-1204 email address: solomon@cs wisc edu News Watch this space for the latest updates Last updated: Thu Dec 14 10:30:08 CST 1995 Dec 14 The schedule for project presentations is listed below Dec 8 The Final Exam will be Monday, Dec 18, from 2:45 to 4:45 pm in room 1221, Computer Sciences and Statistics building Project presentations will be in room 2310 on Friday, Dec 15, from 10 am until noon Oct 20 Here is an example of a past midterm exam together with sample answers Oct 19 The midterm exam will be Wednesday, October 25, from 7:15 to 9:15 pm in room 1221 Computer Sciences The final exam will be Monday, December 18, exact time and place to be determined Sep 29 Project suggestions and other information about the project are now avaiable Aug 30 A more readable version of Figure 5 from the Multics memory management paper is available Contents News Summary Lecture Information Text Course Schedule Grading Project Project Presentations Summary This course is intended to give you a broad exposure to advanced operating systems topics I will assume that all students have had a good one-semester course on operating systems (CS 537 or the equivalent) We will cover the topics normally presented in such a course, but in considerably more detail: synchronization, interprocess communication, memory management, file systems, protection, security, and distributed systems Lecture Information Lecture: 11:00 - 12:15 Tuesday and Thursday, 1263 Computer Sciences Text There is really no satisfactory textbook for a graduate level operating systems class, so we will use a selection of 26 ``classic'' papers as our text The course will be structured around readings from journal articles and conference proceedings You can purchase these readings at the DoIT (formerly MACC) documentation desk for about $20 The readings this semester are very similar, but not identical, to those of previous semesters If you have a used copy, I can make available individual papers for you to copy During each class, we will discuss topics relevant to the current papers (click here for a tentative schedule) The lecture will not be a detail-by-detail review of the papers, but will instead be a discussion of major topics and themes using the papers a focal point Active participation in discussion is strongly encouraged If you are willing to participate actively and daily in class, you'll get a lot out of it If you expect to sit quietly and listen for 15 weeks, you will get much less out of this class Grading There will be two exams (a midterm and a final) and a project Each will be worth about 1/3 of the total grade The exams are designed to verify that you have carefully and thoroughly read all the readings Project You will be required to complete a term project A list of suggested topics will be provided, but you are strongly encouraged to make up your own project Projects may involve implementation of tools, experimental implementations of algorithms suggested in the research literature, measurement studies, or simulations All projects must have an experimental component Literature surveys or unvalidated design papers are not sufficient Most projects will be done by two-person groups Larger or smaller groups may be approved on a per-case basis You will write a term paper summarizing the results of your project This paper must meet the standards of a research publication It will be graded on the quality of the writing as well as the content You will also make a short presentation about your project to the class Project Presentations Here is the schedule for project presenations All presentations will be in room 2310, Computer Sciences and Statistics Times are approximate 10:00 Manyan Stubbs Andrew Biggs Francis Salmon and Gunawan Agus 10:20 Qingmin Wang and Chien-pang (James) Chen Eric Larsen Conroy Fritz and Craig Jordan 10:40 Prasad Deshpande and Avinash Sodani Jim Basney and Rajesh Raman Biswadeep Nag 11:00 Wei Chen and Taxiao Wang Lei Cao, Yanming Cao and Xinyu (Richard) Zhang Todd Munson 11:20 Wenjun Qiu, Xinyi Wang and Yufei Zhu Zeyu Chen and Sridhar Gopal Michael Lee solomon@cs wisc edu Thu Dec 14 10:30:08 CST 1995 	3
149	 CS110 Section 8 CS110 Section 8 Instructor Michael Birk Email: mbirk@cs wisc edu Office: 1302 Comp Sci & St Phone: 262-6600 (office), 251-7734 (home) Office Hours: Tue 4:30 pm, Wed 2:30 pm, Thu 1:00 pm (in my office or the lab), or by appointment Assignments Program 1 - due Tue 11/12/96 Program 0 - due Tue 11/5/96 Administrative Information Text: Problem Solving with C++: The Object of Programming, Walter Savitch, 1996 Room & Time: 115 Psychology, 9:30-10:45 Tuesday & Thursday Lab: 1350 Comp Sci & St ("The Vectra Lab") Syllabus Computation of Grades Grading Standards Late Assignments Policy Handin Procedures Cheating and Academic Misconduct Lab Consultants Examples The String class not using dynamic allocation using dynamic allocation The Rational class - an example of using operator overloading The Complex class - represents (floating-point) complex numbers Another example of operator overloading The IntStack class - a simple example of an "unlimited size" data structure The ClassInfo example using structs or using classes --> Other Links CS110 Home Page CS302 Home Page An Introduction to Microsoft Windows An Introduction to Borland C++ A Tutorial on Using the Debugger mbirk@cs wisc edu 	3
53	 CS 577 - Introduction to Algorithms Introduction to Algorithms - CS 577 Course Information Instructor : Eric Bach Office : CSS 7385 Phone : 262 7997 e-mail : bach@cs wisc edu Hours : MR 10 - 11 and by appt Teaching Assistant: Bill Donaldson Office : CSS 6394 Phone : 262- 6620 e-mail : wwd@cs wisc edu Hours : T 1 - 2 R 12 - 1 Teaching Assistant: Raji Gopalakrishnan Office : CSS 1308 Phone : 262 6602 e-mail : raji@cs wisc edu Hours : MW 11 - 12 Midterm Exam : Oct 28, 1996 from 7:15 - 9:15pm, 1240 CS Course Handouts Course Description Syllabus Books on Reserve Course Organization Homework 0 Homework 1 Due Sep 30, 1996 Homework 2 Due Oct 16, 1996 Solutions to Homeworks Homework1 Graph for fractal behaviour Homework2 Mail Archive 	3
222	 Home Page for Russ Manning's CS110 CS 110: Introduction to Computer Programming (C++) Instructor: Russell Manning Email: rmanning@cs wisc edu Office: Room 1349, Computer Science Office Hours: You can find me in the CS132 lab (basement, B240) at: Saturday: 11:00 - 5:00 (except during home football games) Sunday: 11:00 - 5:00 (Come down and keep me company! You can work here too, just like in the Vectra Lab, although CS132 students have priority ) The grades for Lecture 13 are finally up click here to see them Textbook: Problem Solving with C++: The Object of Programming, by Walter Savitch Section Information: 1:20-2:05, Oct 28 - [end of semester], B1 1402 University (ROTC building) Computer Lab: Room 1350, Computer Science and Statistics Assignments: Program 0 due Monday, November 4 Program 1 due Wednesday, November 13 Program 1 Program 2 Program 3 Program 4 Course Information: Day 1 handout Syllabus Late Policy Academic Misconduct Important software: Introduction to Microsoft Windows Hints for Windows Compilers The Windows operating system Email Mosaic Netscape C++ information: Introduction to Borland C++ The C++ language The Savitch Text Old Quizzes None yet! 	3
167	 CS302, Sections 16 and 17 CS302, Sections 16 and 17 Algebraic Language Programming in C++ Announcements as of Tue Oct 8 20:10:25 1996 Exam #1: Thursday, Oct 17, 715-915pm, 121 Psych RELOAD THIS PAGE EVERY TIME YOU LOGIN Instructor: Chris Weaver Email: weaver@cs wisc edu (and my email policy ) Office: Computer Science and Statistics 1302 Office Phone: (608)262-6600 Office Hours: MW 400-500, R 400-600, and by appointment (Office hours in the lab, 1350 CS, for the first two weeks ) Grader: Jin Zhang Email: zj@cs wisc edu Office: Computer Science and Statistics 1345 Office Phone: (608)262-1012 Location Section 16 : 955-1045 MWF in 119 Noland Section 17 : 1100-1150 MWF in 119 Noland Computer (Vectra) lab in 1350 Computer Science and Statistics (Hours: 7am-1am seven days a week, staffed by consultants ) General Course Info Syllabus Text: Problem Solving with C++: The Object of Programming , Walter Savitch, Addison-Wesley , 1996 (ISBN 0-8053-7440-X) Includes errata and source code from the text Misconduct Policy Assignments, Grading, and Handouts Programming assignments Homework (Reading) Assignments Lecture Notes Handouts and Example Programs Exam and Quiz Keys Late Policy Grading Policy Style Guidelines (still rough) Printing and Paper Use Statement Chris Weaver , Computer Sciences Department , University of Wisconsin-Madison Last Change: 11/1/96 by Chris Weaver 	3
24	 CS302 Section 12 CS302 Section 12 Instructor Michael Birk Email: mbirk@cs wisc edu Office: 1302 Comp Sci & St Phone: 262-6600 (office), 251-7734 (home) Office Hours: Tue 4:30 pm, Wed 2:30 pm, Thu 1:00 pm (in my office or the lab), or by appointment Announcements Test cases for Program 6 now available Dice code discussed in class Class Ranking by last four digits of student ID number Past Exams now online: Spring 96 , Fall 95 , and Spring 95 Notes on the Hangman Assignment (Program 3) Exam I - Monday, October 14, 7:15-9:15, 1325 Comp Sci (same room as the lecture) Instructions for formatting Syllabus for first eight weeks is now available (second eight weeks coming soon) Instructions on printing your program's output on a computer outside of the lab Late policy finalized Room change: As of 9/10/96, we will meet in 1325 Comp Sci Assignments Program 0 - due Tue 9/10/96 Program 1 - due Tue 9/17/96 Program 2 - due Tue 9/24/96 Program 3 - due Tue 10/8/96 Program 4 - due Tue 10/22/96 Program 5 - due Tue 11/5/96 Program 6 - due Tue 11/12/96 Administrative Information Text: Problem Solving with C++: The Object of Programming, Walter Savitch, 1996 Room & Time: 1302 Comp Sci & St, 11:00-12:15 Tuesday & Thursday Lab: 1350 Comp Sci & St ("The Vectra Lab") Syllabus Computation of Grades Grading Standards Late Assignments Policy Handin Procedures Cheating and Academic Misconduct Lab Consultants Examples The String class not using dynamic allocation using dynamic allocation The Rational class - an example of using operator overloading The Complex class - represents (floating-point) complex numbers Another example of operator overloading The IntStack class - a simple example of an "unlimited size" data structure The ClassInfo example using structs or using classes --> Other Links CS302 Home Page An Introduction to Microsoft Windows An Introduction to Borland C++ A Tutorial on Using the Debugger mbirk@cs wisc edu 	3
150	 CS 302 Fall 1996 - Section 2 CS 302 Fall 1996 - Section 2 Algebraic Language Programming - C++ Instructor: Dave Zimmermann Email: dzimm@cs wisc edu Class Meeting Time/Place: 9:55-10:45 MWF, 455 Noland Office: CS 1306 Office Phone: 262-6601 Office Hours: 2:30-3:30 T, 11:30-12:30 Th ANNOUNCEMENTS Program 4 due on Wednesday, October 23 Program 5 ready and due on Friday, November 1 General Course Information CS 302 Home Page Course Objectives Vectra Lab CS 302 Consultants Syllabus Working from Home Class Handouts Programs Exams and Quizzes Lecture Notes Greg Sharp's Style Guide Grades (Referenced by last 4 digits of your ID number) Quizzes Programs Exams Policy Information Email Policy Grading Policy Late Policy Academic Misconduct Policy Text Problem Solving with C++ - The Object of Programming by Walter Savitch Addison-Wesley Publishing Company, 1996 List of known errata Last modified: Sat Aug 31, 1996, Dave Zimmermann ( dzimm@cs wisc edu ) Based on Greg Sharp's cs302 home page 	3
66	 Kelly's CS 132 Page CS 132 Kelly Ratliff Current grades You can do a keyword search of my 132 mail messages For example, enter "functions" below (without the quotes) to get every paragraph that used the word "functions " You can also use * for a wildcard Here are links to the mail messages I have sent this semester: CS 132 info -- 9/11/96 CS 132 info -- 9/15/96 CS 132 info -- 9/22/96 CS 132 info -- 10/29/96 CS 132 info -- 10/6/96 CS 132 info -- 10/9/96 CS 132 info -- 10/16/96 CS 132 info -- 10/27/96 CS 132 info -- 11/3/96 Additional information of interest: Backups: copying disks and files Virus Information World Wide Web FAQ Fun stuff: Usenet Oracle Resource Index Virtual Tourist World Map The Space Shuttle Clickable Map Badger Herald web site Comics Humor: Abort, retry, ignore Nine Types of Users Finals Week Lab jokes Getting software from the net: If you have a computer at home, you might be interested in trying some of the shareware and freeware software available from Internet archives These programs are usually compressed, and you may need some compression or archiving software to "unpack" them You may need to review some DOS commands before trying this One of the biggest and best maintained archives is Simtel, so I'm including some links to Simtel FAQ files posted on Usenet: What is SimTel FTP site info Compression Info Favorite FTP sites Click here to visit the CS 132 - Desautels web page 	3
34	 CS838 Java! CS838: Java! http://www cs wisc edu/~cs838-1 Instructors Instructor Mark Hill James Larus Office 6373 CS 5393 CS Office Hours Monday 2-3 pm, Wed 11-12 am Tuesday 3-4 pm , Friday 11-12 am Phone 262-2196 262-9519 Email markhill@cs wisc edu larus@cs wisc edu Home Page www cs wisc edu/~markhil l www cs wisc edu/~larus Java Java is an curious mixture of extreme hype and sound technology This fall, CS838 is a graduate seminar that will examine Java, including the Java programming language, network security, design of distributed applets, Java virtual machines, and Java implementations (compilers, interpreters, and special hardware) Other Java-related topics are both welcome and encouraged This course will be taugh as a research seminar First, the professors are not Java experts, but expect to learning along with the students What you get out of this course will be experience in studying and developing new ideas, interactioning with colleagues, and new insight into Java We only plan to lecture for a few weeks to present an overview of Java Then students will work on two-month-long group projects Students will be evaluated on the oral and written presentation of their project This offering of CS 838 is NOT a core CS course Background Material There is no text for this course, although there are countless Java books in bookstores Most of these books were written very quickly and are very superficial The Addison-Wesley series is the &quot;official&quot; Sun reference books on Java and are much better than the average (but see below; many of them are on-line) Implementation Reader A collection of papers on Java implementation is available at DoIT On-Line Documentation Sun maintains a web site that contains considerable Java documentation Its URL is http://java sun com This site contains considerable Java documentation, including: The Java Language Specification The Virtual Machine Specification The Java API (Application Programmer Interface, i e , libraries) Specification Java Language Tutorial Security-related papers: Dean, Felten, Wallach, "Java Security: From HotJava to Netscape and Beyond Frank Yellin, "Low Level Security in Java JavaSoft, Frequently Asked Questions - Applet Security The web also can provide a Java Development Kit for writing and running Java applications on a PC This kit is already installed for the SPARCstations in the department (/s/java) The department also has the source to the JDK You can also run Java applets in recent versions of Netscape and Microsoft's Internet Explorer Sample Java applets are available from many places Sun has a collection at: http://java sun com/java sun com/applets/index html (that's not a typo!) The largest collection of Java programs and applets appears to be at http://www gamelan com Lecture Slides Postscript of our lecture transparancies are available: Java Big Picture Java Language Overview Java Virtual Machine Implementing the Java VM in Hardware Java Security Project Click here for project assignment Below is a list of possible project topics It is intended as a starting point, not an enumeration A Comparison of Java with C++, Smalltalk, Scheme, and Simula An Implementation of a Java Interpreter that Caches Recently-Used Basic Blocks On-the-fly Compilation of Java Applets on Small-Memory Embedded Machines The Memory System Behavior of Compiled vs Interpreted Java Applets An Evaluation of Alternative Implementations of Java Monitors A Comparison of the Java Virtual Machine with Xerox Mesa Bytecodes The Microarchitecture of a Processor that Directly Executes Java Bytecodes Optimizing Java Compiler Rationalizing the Java Library Performance Evaluation Tools and Results for Java Programs Evaluation of Java Security Investigate compiling other languages to the Java VM (Subset of C -&gt; Java VM would be very interesting ) Investigate was of formalizing the security requirements of a language and system and ways of automatically generating/verifying VM implementations Any security-related topic Investigate the cost of making the primitive types (int, float, bool, etc) objects and eliminating the dual type systems In particular, is Java's static typing sufficient to alleviate the overheads Java EEL Dynamic compilation Can the language-mandated tests (array bounds, null pointer, etc) be scheduled in unused cycles on superscalar processors, so that Java runs as fast as an unsafe language like C++ Project Meetings Date Time Group Tue Nov 12 1:00 __ Tue Nov 12 1:15 __ Tue Nov 12 1:30 __break if possible Tue Nov 12 1:45 __ Tue Nov 12 2:00 __ Thu Nov 14 1:00 __ Thu Nov 14 1:15 __ Thu Nov 14 1:30 __break if possible Thu Nov 14 1:45 __ Thu Nov 14 2:00 __ 	3
207	 CS 752 Home Page CS/ECE 752 - Advanced Computer Architecture I 3 credits Advanced techniques of computer design Parallel processing and pipelining; multiprocessors, multi-computers and networks; high performance machines and special purpose processors; data flow architectures Prerequisites: CS/ECE 552 and CS 537 Semesterly course information: Fall 1994 	3
128	 CS552 Page CS/ECE 552 - Introduction to Computer Architecture 3 credits The design of computer systems and components Processor design, instruction set design, and addressing; control structures and microprogramming; memory management, caches, and memory hierarchies; interrupts and I/O structures Prerequisites: ECE/CS 352 and CS/ECE 354 ; co-req: CS 367 Semesterly course information: No info as of Fall 1994 	3
158	 CS 537-2 Fall 1996 Home Page CS 537-2: Introduction to Operating Systems Fall 1996 Tuesdays and Thursdays, 1:00-2:15pm in CS 1325 Discussion: Fridays, 1:00-2:15pm in CS 1221 Your Hosts: Mary Vernon (Instructor) and Karuna Muthiah (TA) Welcome to the home page for CS 537-2 NOTE: Thursday lecture and Friday discussion will be interchanged on the following dates: Oct 3-4, Oct 10-11, Nov 7-8, Dec 5-6 What's New: Solutions to Quiz #3 Assignment #4 (11/7/96) Office hours and email Textbook and other readings Grading, Projects and Quizzes Mail Archive Approximate Schedule of Topics Week of Topics Reading Sep 3 introduction; concurrency: threads, address spaces, processes Chapter 1, 2 1 Sep 10 thread management; cooperating threads Chapter 2 2, 2 3 Sep 17 synchronization; implementing mutual exclusion cont'd Sep 24 semaphores cont'd Oct 1 monitors; concurrency: summary cont'd Oct 8 deadlock; process scheduling Chapter 6, 2 4 Oct 15 memory management: protection, address translation; caching and TLBs Chapter 3 Oct 22 demand paged virtual memory cont'd Oct 29 REVIEW; survey of i/o systems Chapter 4 Nov 5 file systems & disk management; naming and directories Chapters 4 & 5 Nov 12 the hardware, os, compiler, language interface; protection & security TBA Nov 19 Java overview, language; Java objects, core methods TBA Nov 26 Java threads, security; Thanksgiving (no class) -- Dec 3 networks and distributed systems; remote procedure call (RPC) Chapter 9 Dec 10 distributed file systems; global memory systems; REVIEW Chapter 13 vernon@cs wisc edu 	3
89	 UW CS Computer Networking Courses (Professor Landweber) UW CS Computer Networking Courses CS 640 - Introduction to Computer Networks CS 740 - Advanced Computer Networks Introduction to Computer Networks - CS 640 Table of Contents International Connectivity Map About UW Networking Courses Offered Course Information Instructor Teaching Assistants Course Syllabus Mail Archives Assignments Programming References Selected Readings Click here to get the latest text version Networking courses at UW-Madison Course Information Lecture Time: 8:00 - 9:15 MWF Place: 1221 Comp Sci & Stat Class email: cs640-1list Instructor: Lawrence H Landweber Office: 7397 Comp Sci & Stat Phone: 263-7442 Email: lhl@cs wisc edu Office hours: M,W,F 9:30-11:00 Teaching Assistant: Srinivasa Narayanan Office: 3360 Phone: 262-9275 Email: nsp@cs wisc edu Office hours: Monday 2:00p - 4:00p Wednesday 3:00p - 5:00p If these times are not convenient, feel free to email me at nsp@cs wisc edu for an appointment Teaching Assistant: Ben Teitelbaum Office: 3310 Phone: NA Email: ben@cs wisc edu Office hours: Tuesday 1:00p - 3:00p Thursday 2:00p - 4:00p If these times are not convenient, feel free to email me at ben@cs wisc edu for an appointment Fall 1996 Course Syllabus Fall 1996 Mail Archive (moderated) CSL Mail Archive (complete) Assignments - Fall 1996 Programming Assignment 1 ( Error/Warning Codes ) Class Project - Implementation of ATM Network Layer and Reliable ATM Adaptation Layer Handout (PostScript) Project overview slides (PostScript) (Powerpoint) "Software Engineering 101" slides (PostScript) (Powerpoint) Design Document Evaluation Form (PostScript) HTML Version (w/o pictures) Project Slides Document Grading Criteria --> Grading Midterm Exam: 25% Final Exam: 25% Assignment 1: 5% Term Project: 45% Prior Midterms Fall '92 Midterm Fall '94 Midterm Optional Reference Book for Project UNIX Network Programming Stevens, W Richard Prentice Hall ISBN 0-13-949876-1 Programming References BSD Socket Interface Socket Interface Lecture The Garbler Package Annotated Bibliography Readings (Partial Set) TCP RFC-793 IP RFC-791 ICMP RFC-792 OSPF RFC-1583 BGP4 RFC-1771 IPNG RFC-1752 Advanced Computer Networks - CS 740 Lecture Schedule Spring 1996 Review Form 	3
130	 CS310 Home Page Problem Solving using Computers - Fall 1996 Computer Sciences 310 Check the following pages for information on CS310 Instructors and teaching assistants including office hours Information on assignments including suggestions, copies of assignments, and explanations about grading Check the policy on assignments, doing your own work, etc Information on examinations and copies of past exams Information on labs including copies of the handouts Documents including a syllabus Many of the documents on these web pages are in postscript If you need a postscript viewer, you can obtain one from the CS ftp site Check the local services section of the CS department home page Under local services, go to the FTP web page, and then to the ghost directory Read the README file for further directions 	3
87	 CS 540, Fall 1996 CS 540 Introduction to Artificial Intelligence Fall 1996 Instructor: Chuck Dyer Office: 6397 CS Telephone: 262-1965 E-mail: dyer@cs wisc edu Office Hours: 2:30 - 3:30 Tuesdays, 1:30 - 2:30 Fridays, and by appointment Teaching Assistant: David Finton Office: 3360 CS Telephone: 262-9275 E-mail: finton@cs wisc edu Office Hours: 1:00 - 2:00 Mondays and Thursdays, and by appointment Teaching Assistant: Bryan So Office: 5364 CS Telephone: 262-5105 E-mail: so@cs wisc edu Office Hours: 12 - 1 Mondays and Wednesdays, and by appointment What's New Scores to Date (11/1/96) Histogram of Total (Weighted) Scores to Date General Course Information Schedule Lecture: 11:00 - 11:50 MWF, 1221 CS Discussion: 3:30 - 4:20 M, 3425 Sterling Prerequisite : CS 367 Grading 3 Exams: 20% each ~6 Homework assignments: 40% Textbooks Artificial Intelligence: A Modern Approach by S Russell and P Norvig, Prentice Hall, Englewood Cliffs, N J , 1995 ANSI Common Lisp by P Graham, Prentice Hall, Englewood Cliffs, N J , 1996 Course Overview Syllabus General Information about CS 540 Web Page : http://www cs wisc edu/~dyer/cs540/ Class E-mail Alias : cs540-1list@cs wisc edu Getting Started Lisp Reading Assignments to Date Homework Examinations Handouts Lecture Notes Interesting AI Demos and Projects Other Intro to AI Courses Links of Interest A Former CS 540 Student 	3
26	 CS/ECE 752 Fall 1994-1995 CS/ECE 752: Advanced Computer Architecture I Fall 1994-1995 Offering Course Information Instructor: Mark D Hill Office: 6373 Comp Sci & Stat Email: markhill@cs wisc edu Office hours: Tuesday 10:30 - 11:30 Friday 1:15 - 2:15 or by appointment TA: Mo Shen Office: 1351 Comp Sci & Stat Phone: 263-1938 Email: mshen@cs wisc edu Office hours: Monday 9:30 - 10:30 Thursday 4:00 - 5:00 or by appointment Table of Contents What's New Reader Lecture Notes Homeworks Project Miscellanea What's New Giving Talks Reader Reader 1 Table of Contents (get full papers from DoIT) Reader 2 Table of Contents (get full papers from DoIT) Reader 3 Table of Contents (get full papers from DoIT) Reader 4 Table of Contents (get full papers from DoIT) Lecture Notes Introduction (Chapter 1) Performance & Cost (Chapter 2) Instruction Sets (Chapter 3) Caches (Chapter 6 Part A) Memory (Chapter 6 Part B) [Talluri & Hill 1994] Basic Pipelining (Chapter 4 Part A) Basic Pipelining (Chapter 4 Part B) Instruction Level Parallelism (Chapter 5 Part A) Instruction Level Parallelism (Chapter 5 Part B) Input/Output (Chapter 7) Interconnects (Chapter 8) No notes for Parallel Processing (Chapter 9) Homeworks Homework 1: assignment & solution Homework 2: assignment & solution Homework 3: assignment & solution Homework 4: assignment & solution Homework 5: assignment & solution Project Assignment Proposals due November 7 in class Talks December 5-14 in class Report due December 19 at noon Miscellanea Giving Talks Spring 1993 final Spring 1993 project assignment Spring 1993 midterm (using first edition of Hennessy & Patterson) Architecture Qualifying Exams (a source of hard questions) Computer Architecture Seminar Wisconsin CS's Computer Architecture Group World-Wide Computer Architecture Information 	3
152	 CS 737 Home Page CS 737 Computer System Performance Evaluation and Modeling News [Sept 24] - Assignment 1 (Due Oct 7) Postscript Text [Sept 9] - MiMic library is now available at ~cs737-1/public/MiMic Course Information Lecture: MWF 2:25 PM - 3:40 PM at 1325 Computer Science DEVise Software: Home Page - HTML User Manual - Postscript (Please do not print this file as it contains many images and will take at least half an hour!) Initialization Instructions - Text MiMic Software: Tutorial - HTML Postscript Online Help - HTML Qnet (Example of DEVC) - HTML Professor: Miron Livny Office: 7367 Computer Sciences Hours: TBA Phone: 262-0856 E-mail: miron@cs wisc edu Teaching Assistant: Chee-Yong Chan Office: 5364A Computer Sciences Hours: TR 2-3 PM Phone: 262-5105 E-mail: cychan@cs wisc edu Any suggestion or comment please send to cychan@cs wisc edu 	3
74	 CS302, Section 19 Computer Science 302, Section 19 Time: MWF 1:20 Place: 226 Noland Instructor: Todd Turnidge Office Hours: TBA Lab Hours: TBA Announcements Class notes on classes A handout on structs is available Program 5 is available Getting Started There is some useful information here to read when you are getting started General Information Text, Facilities, Grading, Policies Syllabus A tentative syllabus for the course Assignments The text of reading/programming assignments and some solutions Handouts A collection of the class handouts to date The Class Mailing List Information about how to send messages to me and to the class as a whole Course Home Page This is a home page for all sections of 302 There is much information here of general interest including information about tutors , consultants , the windows operating system, email , netscape , and C++ Other CS302 Sections You may find some of the information provided by other instructors to be helpful For example, here is a handout from Gregory Sharp about course difficulty Last modified: Mon Nov 4 11:43:36 1996 by Todd Turnidge turnidge@cs wisc edu 	3
28	 Home Page - CS302 - Section 4 CS 302 Fall 1996 - Section 4 Algebraic Language Programming in C++ Instructor: Milo M Martin (milo@cs wisc edu) Time and Location: 1:20-2:10 pm, MWF, 130 Psychology Instructor: Milo M Martin Email: milo@cs wisc edu Office: CS&St 1301 Office Hours: 2:45-3:45 pm, Tuesday/Thursday or by appointment Office Phone: (608) 262-6600 Announcements This page changes frequently, it is your responsibility to check this page often November 6, 1996: Quiz 4 (take-home) will be given out in class today and has been placed on the homepage November 5, 1996: I added the file Using Projects to the program 6 page and the homepage November 2, 1996: The room for the test has been scheduled for 1263 CS (On Wednesday, November 13, 7:15-9:15 pm ) October 31, 1996: I updated the current grades It now has everything through quiz 3 Please check this to make sure it is accurate October 30, 1996: I added links to a couple of pages with information about HTML, the language used for web pages The links are below in the section titled Other Documents October 30, 1996: Program 6 is available and is due on Friday, November 8 There will be a ``take home'' quiz due Monday, November 11 Reminder: Exam 2 is on Wednesday, November 13 General Class Information Current Class Grades General Information Sheet Turning in Assignments Syllabus Code Style Guide CS 302 Home Page Vectra Lab CS 302 Consultants Fall 1996 Consulting Schedule Academic Misconduct Policy Class Documents The final BankAccount class code: BankAccount cc - BankAccount h - main cc - postscript BankAccount class code - BankAccount2 cc - postscript BankAccount struct code - BankAccount1 cc - postscript minmax cc - Example code to find the minimum and maximum in a list of numbers, in this case entered from stdin form cc - Code which creates form letters from data specified in files Uses file IO and the open_file function introduced in class Call-by-reference in-class example Functions to ask for user input with prompts ( call-by-reference version ) Functions to ask for user input with prompts ( call-by-value version ) Other Documents A Beginner's Guide to HTML - the standard introduction to the HTML language HTML 3 2 reference guide - a reference guide for the latest HTML standard release The Good Times Virus Hoax ACM - Code of Ethics and Professional Conduct Assignments Class Survey Questionare - Required - Due Monday, September 9, 1996 Program 0 - Due Wednesday, September 11, 1996 Program 1 - Due Wednesday, September 18, 1996 Program 2 - Due Wednesday, September 25, 1996 Program 3 - Due Friday, October 4, 1996 Program 4 - Due Monday, October 21, 1996 Program 5 - Due Wednesday, October 30, 1996 Program 6 - Due Friday, November 8, 1996 Program 7 - Due TBD Program 8 - Due TBD Program 9 - Due Wednesday, December 11, 1996 Quizs Quiz 1 - Solutions - Scores - Monday, September 23, 1996 Quiz 2 - Solutions - Scores - Wednesday, October 2, 1996 Quiz 3 - Solutions - Scores - Monday, October 28, 1996 Quiz 4 - Solutions - Scores - Take home quiz due Monday, November 11, 1996 Exams Exam 1 - Solutions - Scores - Wednesday, October 9, 1996 Exam 2 - Solutions - Scores - Wednesday, November 13, 1996 Exam 3 - Solutions - Scores - Tuesday, December 17, 1996 Textbook Problem Solving with C++ - The Object of Programming by Walter Savitch Addison-Wesley Publishing Company, 1996 List of known errata Milo M Martin ( milo @ cs wisc edu ) 	3
21	 CS302, fall session info CS302 Fall Session Algebraic Language Programming in C++ Instructor: Andrew Prock Email: prock@cs wisc edu Office: Computer Science and Statistics 1331 Office Phone: (608)262-6605 Office Hours: 11am - 12pm M 12pm - 1pm W 8pm - 10pm Th Grader: Haihong Wang Email: whh@cs wisc edu Office: Computer Science and Statistics 1347 Office Phone: (608)262-5786 Consulting Hours (in 1350): 7:00-10:00 pm MTWR Announcements 11/7 I have put a grades link below, please check your grade and verify your scores 11/6 I have modified crazy txt yet again 11/5 I will be having office hours today from 12 - 2pm today 10/29 I have made a minor modification to the crazy txt file for assignment 7, you should get a new copy if you have already gotton one 10/15 Assignment five is online 10/10 Exam results: avg ~76 range 43-100 10/8: I have added the grading policy to the end of assignment #4 9/26: I have put some sample quizes and tests online for your general perusal These tests and quizes are from another TA, but I think they should give you a good idea of the level of knowledge you will need Remember that the topics on our tests may not be the same as the tests online 9/3 9pm: Webpages seem to be done Email me if you notice any errors or have any questions Make sure to check out assingment 0 Assignment 1 is online as well for those of you who like to work ahead The final is on Tuesday, December 17, 1996 Mark your calendar because everyone is required to take the final then You should check all the links to this page to get a feel for where things are located It is very important that you carefully read the policies and administrative information below Welcome to class Class Information: Text: Problem Solving with C++ , Walter Savitch Room: 1263 Computer Sciences & Statistics Time: 5:00-6:15 (Section 30), 6:30-7:45 (Section 31) Tentative Syllabus Section 30 grades Section 31 grades Grading Policy Late Policy E-mail Policy Academic Misconduct Course Materials General Course Info Style Guide Lecture Notes Assignments Email archive for section 30 Email archive for section 31 Other Info Introduction to Microsoft Windows (Do this first) Introduction to Borland C++ 4 5 (Do this second) CS302 home page The Vectra Lab Source code from the text Who are consultants and what do they do Extra C++ reference material CS302 FAQ (many of your questions will be answered here) prock@cs wisc edu 	3
48	 CS 736 - Advanced Operating Systems - Fall 1996 UNIVERSITY OF WISCONSIN-MADISON Computer Sciences Department CS 736 Fall 1996 Bart Miller CS 736: Advanced Operating Systems Summary This course is intended to give you a broad exposure to advanced operating systems topics We will be reading about and discussing such topics as protection, security, memory management, operating system kernels, file systems, synchronization, naming, and distributed systems Please read the rest of this information sheet carefully Text There is really no satisfactory textbook for a graduate level operating systems class, so we will use the current literature as our text The course will be structured around readings from journal articles and conference proceedings You will be able to purchase these readings at DoIT (CS736 handout #1) During each class, we will discuss topics relevant to the current papers The lecture will not be a detail-by-detail review of the papers, but will instead be a discussion of major topics and themes using the papers a focal point You will form reading groups with 2 or 3 of your classmates that will meet once or twice a week to discuss the details of the assigned papers The readings are an especially important part of the class We will go through the reading list according the posted reading schedule So, the formula for being successful in this class is (1) read the papers independently, (2) discuss them in your reading group, trying to identify the important issues, and (3) participate in the class discussion of the papers Class Discussions Class meetings will be in the form of discussion lectures We will talk about the day's topics, and this discussion will be supported by your comments and opinions If you are willing to participate actively and daily in class, you'll get a lot out of it If you expect to sit quietly and listen for 15 weeks, you will be very unhappy in this class Papers During this class, you will write two papers - one short (6 pages) and one longer The first paper will be a design, based on ideas that you have read You will work from some well-understood operating system facility and design an extension in some area The second paper will involve a project, and the paper will be a summary of that project There will be a selection of project topics from which to choose Writing well will be as important as writing about good ideas Each paper will be reviewed at least twice The first reading will be a refereeing of the paper by one of your fellow students This will give the writer critical comments by another person, and give the reader a look at someone else's writing The paper will then be revised for a second pass that will be read by me Exams There will be no exams The papers and reading will keep you busy Grades Scores and final grades will be posted here as assignments are graded the first paper assignment is availble A summary of the scores from the project proposals is also availble Final course grades are available here --> Details Time: Tuesday/Thursday, 1300-1415 Place: 1257 CS Office hours: Tuesday/Thursday, 1100-noon Last modified: Thu Sep 5 17:13:43 CDT 1996 by bart 	3
7	 CS302 Course Info Course Information for CS302 Course Description From the Guidebook for Undergraduate Students, May 1994: Construction of algorithms; problem solving; instruction and experience in the use of at least one procedure-oriented language (e g , Pascal or Fortran); survey of other such languages, advanced programming techniques Prereq: Advanced high school mathematical preparation or some college work in mathematics, statistics or logic; or consent of instructor Open to Fr &lt; cs302 home page &gt; 	3
245	 CS 701, Fall 1996 CS 701: Construction of Compilers Fall 1996 Schedule Lecture: 9:30 - 10:45 TuTh, 1263 CSST Instructor: Charles N Fischer Office: 5397 CS&S Telephone: 262-6635 E-mail: fischer@cs wisc edu Office Hours: 1:00 - 2:00 Mondays, Wednesdays and Fridays, or by appointment Teaching Assistant: Krishna Kunchithapadam Office: 1351 CS&S Telephone: 263-1938 E-mail: krisna@cs wisc edu Office Hours: 11:00 - 12:00 Tuesdays and Thursdays, or by appointment Programming Assignments and Homeworks Readings Teaching Assistant 2: Jon Weyers Office: 1304 CS&S Telephone: 262-6601 E-mail: weyers@cs wisc edu Office Hours: 9:30-11:00 Mondays and Wednesdays, 9:30-10:30 Fridays Class Text: Crafting a Compiler with C , Charles N Fischer and Richard J LeBlanc, Benjamin/Cummings, 1991 -------------> What's New (Check this regularly) General Course Information Course Overview Key Dates Grades Examinations Getting Started Handouts Lecture Notes Useful Programming Tools -------------> Links of Interest 	3
228	 MA887 - Approximation Theory -------------------------------------> last change: 29 apr 96 MA887 - Approximation Theory This page contains information for the Spring 1995 version of this math course Notes for the course 	3
78	 CS 540 - Introduction to Artificial Intelligence CS 540 - Introduction to Artificial Intelligence General Course Information This course is offered each Fall and Spring semester For the 1996-97 academic year there will be one section in the fall and two in the spring Topics Covered Principles of knowledge-based search techniques: best-first search, alpha-beta search Knowledge representation using predicate logic, semantic networks, connectionist networks, frames, rules Automated deduction Applications in problem solving, planning, expert systems, game playing, vision, natural language understanding, learning, robotics Programming will include Lisp, and possibly some Prolog; previous knowledge of these languages is not assumed Prerequisite: CS 367 CS 540 Pages of the Various Instructors Chuck Dyer (Spring '96, Fall '96) Ken Kunen (Fall '95, Spring '97) Jude Shavlik (Fall '95, [on sabbatical 96-97], Spring '98) Bryan So (Spring '96) Local AI-Related Links UW-Madison AI Seminar PhD Qualifying Exam in AI Recent Table of Contents and Abstracts of Some AI Journals (mostly from Wendt Library; readable only if @cs wisc edu) U-Wisc AI Group U-Wisc Computer Vision Group U-Wisc Machine Learning Group U-Wisc Robotics Group U-Wisc Computational Biology (includes some AI) U-Wisc CS Dept Graduate AI Courses at Wisconsin CS 760 - Machine Learning CS 761 - Deduction and Problem Solving CS 766 - Computer Vision CS 780 - Robot Motion Planning External AI-Related Links Last modified: Tue Aug 20 15:00:00 1996 by Jude Shavlik shavlik@cs wisc edu 	3
205	 Home Page for Martin Reames's CS 302 class CS 302, Sections 33 &amp; 37 Algebraic Language Programming Spring 1997 Martin Reames , Teaching Assistant What's New Absolutely nothing Everyday information CS302 Class Information Pages Common Programming Mistakes Archive of section 33 and section 37 class mailing lists (most messages are sent to both lists) Semester Calendar Program 0 due Tuesday, January 28 Program 1 due Tuesday, February 4 Program 2 due Tuesday, February Program 3 due Thursday, February Program 4 due Thursday, March EXAM 1 : Tuesday, March , 7:15-9:15 p m , 1257 CS &amp; ST Program 5 due Tuesday, March Program 6 due Thursday, April Program 7 due Tuesday, April EXAM 2 : Tuesday, April , 7:15-9:15 p m , 1257 CS &amp; ST Program 8 due Thursday, April Program 9 due Thursday, May FINAL EXAM : Thursday, May 15, 10:05a m - 12:05p m , place to be announced Course Details How to contact me: email: mreames@cs wisc edu office: 1345 Computer Sciences and Statistics, 1210 W Dayton St phone: 262-1012 Office Hours: TBA or by appointment (talk to me after class or send me email) Textbook Problem Solving with C++: The Object of Programming by Walter Savitch Section Information: Section 33 9:30a-10:45a TR 379 Noland Section 37 1:00p-2:15p TR 379 Noland Computer Lab Rm 1350, CS&amp;ST, containing HP Vectra's running MS Windows and Borland C++ 4 52 Additional Course Information Tentative Syllabus for semester Extra C++ material Late Policy Grading Criteria Academic Misconduct Rule of thumb: "Do not share code for assigned work in any form" Former cs302 students who have made it big Todd Thiel Wendy Staats About your instructor Last modified: Fri Jan 17 12:33:50 1997 by Martin Reames mreames @ cs wisc edu 	3
38	 CS302-13: Class Home Page, Fall '96 CS302 : Algebraic Language Programming in C++ Section 13, Fall 1996 TA: H Chad Lane [ hcl@cs wisc edu ] Announcements: Program 7 is on-line and due Tues Nov 12 IMPORTANT! You need to get the new version of tribble h (as of 11/4) before you compile The problem was that the enumerated types were not recognized outside of the class They must be declared inside the public section of the class As a result, the private section at the top needed to bumped down to the private section at the bottom This is shown in the new version Also note the definition of the RandomIntInRange() is defined in-line so that you will not need a corresponding function body in tribble cpp You can just call it from within the class, and it will work In the file "prog06 cpp" I forgot to change the enumerated type values to uppercase You need to do this before you compile everything I have changed the on-line copy of prog06 cpp if you just want to overwrite your obsolete copy Also, it used to say "#include prog05 h", so I changed it to "prog06 h" You might also want to check the help link below again something was added Here are some Comments and Suggestions for Program 6 It is very important that you use the same name throughout program 6 for the project parts (name of the project, directory name, file names, etc ) I updated the program description to be consistent with "prog06 " If you saw the old version (that used "prog05"), please make sure you are consistent with your naming The only discrepency is with the sample run in Chris Weaver's public directory where it is called prog05, but this shouldn't matter for your program (it is just a sample) Program 6 is on-line and ready It is crucial that you read the entire assignment and understand class basics before you attempt it, and that you get an early start It is not hard, but will require some time to piece everything together Bring questions to class on Tuesday! About midterm grades for freshmen you either got a B (which means your doing fine), or a D (which means you're not doing so great) It is a thumbs up or down grade, and means nothing more than that If you're not a freshman, disregard this Stuff For, From, and About class: Tentative semester syllabus/reading assignments Programming assignments Handouts Preparing for Quizzes and Tests Old Quizzes & Tests w/solutions Course Information & Policies: Text: Problem Solving with C++: The Object of Programming , Walter Savitch, Addison Wesley Publishing Company, Inc , 1996 We meet in B139 Van Vleck on T Th, 1:00pm - 2:15pm Policies and Administrative Information: Grading Policy Late Policy E-mail Information Attendance Policy Academic Misconduct Links to other 302 information: Introduction to Microsoft Windows (Do this first) Introduction to Borland C++ 4 5 (Do this second) CS302 home page The Vectra Lab Source code from the text Who are consultants and what do they do Extra C++ reference material CS302 FAQ (many of your questions will be answered here) Working from home Some very Sharp lecture notes A very Sharp style guide Last Modified: Wed Oct 30 16:00 CDT 1996 by H Chad Lane 	3
52	 CS 132, Fall 1996 --> --> --> Search the CS 132 web pages for keywords (returns all matching paragraphs): News Once you set up your class account, NEVER LEAVE YOUR COMPUTER WITHOUT EXITING FROM WINDOWS When you exit from windows, you automatically exit from your account, too If you don't do as instructed, the next person starting using the computer you've just abandoned has complete control over your account They can send messages signed with your name, read your mail, copy, or even delete your personal work Remember to exit windows when you're done working for the day, or when you plan to leave your machine unattended for some time The email address you get when you initialize your account is provided to you by the Computer Sciences department and is different from the one provided by DoIT You will have the account for CS 132 only during this semester; after the end of the course the account will be canceled As long as you are a UW student, the email account that DoIT provides will be active Look for messages and announcements for CS 132 in your Computer Sciences account Midterm exam answer key Instructor Professor Ed Desautels Office: 5375 Computer Sciences Office hours: 12-1 Monday-Wednesday, or by appointment Phone: 262-7971; dept office 262-1204 E-mail: ed@cs wisc edu Teaching Assistants Follow these links to your TA's home page Name: Kelly Ratliff Email: kelly@cs wisc edu Office #: 3360 CS&S Office phone: 262-9275 Office hours: MW 3:30-4:30 132 sections: 304, 305 GRADES Name: Nathan Bockrath Email: bockrath@cs wisc edu Office #: 3310 CS&S Office phone: 262-1721 Office hours: MW 10:00-11:00 132 sections: 301, 302 GRADES Name: Rehnuma Rahman Email: rehnuma@cae wisc edu Office #: 1349 CS&S Office phone: 262-5340 Office hours: M 11:00-12:00,W 12:30-1:30 132 sections: 317, 318 GRADES Name: Jaime Fink Email: jfink@cs wisc edu Office #: 1306 CS&S Office phone: 262-6601 Office hours: TR 10:45-11:45 132 sections: 315, 316 GRADES Name: Ashraf Aboulnaga Email: ashraf@cs wisc edu Office #: 3310 CS&S Office phone: 262-1721 Office hours: MW 4:00-5:00 132 sections: 319, 320 GRADES Name: Andrew Geery Email: geery@cs wisc edu Office #: 1301 CS&S Office phone: Office hours: R 2:30-4:30 132 sections: 303, 304 GRADES Name: James Herro Email: jherro@cs wisc edu Office #: 1301 CS&S Office phone: Office hours: WF 12:30-1:30 132 sections: 305, 310 GRADES Name: Abhinav Gupta Email: agupta@cs wisc edu Office #: 3360 CS&S Office phone: 262-9275 Office hours: MF 9:30-10:30 132 sections: 322, 323 GRADES Name: Jyothi Krothapalli Email: jyothi@cs wisc edu Office #: 3310 CS&S Office phone: 262-1721 Office hours: MW 10:00-11:00 132 sections: 306, 307 GRADES Name: Su-Hui Chiang Email: suhui@cs wisc edu Office #: 6384 CS&S Office phone: 262-6619 Office hours: R 4:00-5:00 132 sections: 321 GRADES Name: Thanos Tsiolis Email: tsiolis@cs wisc edu Office #: 6364 CS&S Office phone: 262-6615 Office hours: R 10:00 - 11:00 132 sections: 309 GRADES Explore the Web Further Companies Whose Software or Hardware We Will Use Borland Hewlett-Packard IBM Intel Microsoft Novell Useful Links for Further Web Exploration Lycos Enormous Database of Web Sites Yahoo Internet resources classified by categories Has a lookup search The Virtual Tourist Find W3 sites around the world by clicking on a world map The Mother of All BBS Large Alphabetical List of Web Sites What's Hot and Cool on the Web Lists of Especially Excellent Web Sites University of Wisconsin-Madison CS Home Page This page was originally created and maintained by Ben Teitelbaum and Thanos Tsiolis It was modified and now maintained by Kelly Ratliff 	3
183	 Kent Wenger's Home Page Welcome to Kent Wenger's home page! Note: this page is definitely still under construction, so be prepared for some potholes! (I need to get a picture of myself scanned in to put here ) R Kent Wenger Associate Researcher Computer Sciences Department University of Wisconsin 1210 West Dayton Street Madison, WI 53706-1685 telephone: 608/262-6623 fax: 608/262-9777 email: wenger@cs wisc edu Finger me Work The main projects I'm working on are COD (Clusters of Data providers) and DEVise (Data Exploration and Visualization) Coming up with a good acronym is one of the most important parts of a project, wouldn't you agree Here's a visualization produced by the DEVise software The people I work for: Yannis Ioannidis Miron Livny Raghu Ramakrishnan More information about the University of Wisconsin: UW-Madison DBMS Research Group UW-Madison Computer Sciences home page WiscINFO (UW-Madison home page) Personal Links Images Last updated Nov 15, 1996 	4
151	 Nancy Hall Computer Sciences Department University of Wisconsin -- Madison 1210 West Dayton Street Madison, WI 53706-1685 608/262-5945 Project: SHORE: a Scalable Heterogeneous Object REpository 	4
131	 Curt Ellmann --> Curt Ellmann Paradise Database Project Department of Computer Sciences University of Wisconsin - Madison curt@cs wisc edu 608-263-7132 Items of Focus Java Related Items Paradise Home Page Paradise Developers Page WebGnats Defect Tracking for Paradise Prototype index of SHORE man pages My previous life in DoIT GIS & EOSDIS Related The OpenGIS Consortium The Global Positioning System (GPS) CALMIT, University of Nebraska-Lincoln Federated Approach to EOSDIS Database Related Object Database Management Group Home Page Free Database List SQL Standards Home Page Transaction Processing Performance Council Illustra White Papers Miscellaneous Sites Campus Sites Bob's WYRM Hoard Computer Sciences WiscInfo WiscINFO gopher WiscINFO Web Site UW Madison Library nic wiscnet net Corporate Web Apple IBM Microsoft AT&T Research Lands' End PAWWS Commerce Net Metrowerks Taligent Searching the Web Savvy Search WebCrawler Open Text The WWW Worm Network Information (MIT) Other Sites Internic International Organization for Standardization Internet Drafts FTP Site Dilbert Sun World Online C++FAQ Winsock Applications FAQ Current Weather Maps Dienst Dienst Implementation US Geologic Survey Government Information Locator (GILS) Oakridge National Lab Center for Computing Sciences Stock Market Data Curt Ellmann curt@cs wisc edu Paradise Database Project Department of Computer Sciences University of Wisconsin, Madison 	4
143	 Shaun Flisakowski Shaun Flisakowski Research Associate Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton St - Rm 7360 Madison, WI 53706 Work Phone: (608)-263-6623 Home Phone: (608)-238-8069 email: flisakow@cs wisc edu Work I work on the Coral project It's a deductive (logic-based) database system similar to Prolog I hope to be wrapping up some changes soon, and have it move into the background (with me remaining its main maintainer) I've starting getting involved with the DEVise project, a package for examining large quantities of data in a visual fashion Class This semester (my last) I'm doing a Master's project I'm going to be cleaning-up/rewriting Minibase Minibase is a simple database intended for instructional use in mid-level database classes The students will rewrite a section of it at a time, compiling their section with the rest of program, so that they always have a working version of the database Projects (and other programming stuff I have available) I am (very slowly) working on a C lexer/parser with a symbol and type table The latest beta version is available as ctree-0 03 tar gz My intent in writing it was to create a C parsing library that could be used as a basis for creating source-transforming tools As is, it still has quite a way to go, but some people seem to find it useful for their own purposes LaserPoint is distributing a game of mine, Patience , a set of 25 card games for Windows Miscellaneous Small Things callstk tar gz: A set of C++ classes that keep track of the call stack and program trace with minimum hassle wire tar gz: A simple X-based wire framer self tar gz: A program that assists in making other programs capable of printing themselves (Pure silliness ) Play I've started investing in Borland stock, you should as well before it jumps back up as a result of Delphi's tremendous success You can also take a look at how Borland has been performing in the past Track the movements of your favorite electrical engineer and his dog on the Dilbert Page My Bookmark's Suggested Reading Snow Crash: Neal Stephenson The Diamond Age*: Neal Stephenson Zodiac: Neal Stephenson Permutation City: Greg Egan Quarantine: Greg Egan Resurrection Man: Sean Stewart * - Hugo Winner Mail me at: flisakow@cs wisc edu 	4
9	 Steven Huss-Lederman's Home Page Steven Huss-Lederman's Home Page My research interests include: My research at the Univ of Wisconsin at Madison relates to the Wisconsin Wind Tunnel project My other big research area is parallel linear algebra which is covered by the PRISM project I am also heavily involed in the MPI standard I and several others recently published a book about the original MPI standard You can get information on ordering the book from MIT Press (ISBN 95-80471) You can also look at MPI: The Complete Reference on the web As the MPI-2 editor, I can get you the current draft of the MPI Forum Please keep in mind that the work of the MPI Forum is ongoing and its documents are intended for use by those interested in the ongoing work of the MPI Forum For committee members, the compressed postscript , complete sources as a compressed tar file , and the individual source files are available Information you would get if you did a finger on me: Steven Huss-Lederman Computer Science Dept Univ of Wisconsin-Madison 1210 W Dayton St Madison, WI 53706 Phone: (608)262-0664 (608)265-4892 (for message if desperate) FAX: (608)262-9777 e-mail: lederman@cs wisc edu WEB: http://www cs wisc edu/~lederman/lederman html Office: 6367 Computer Science and Statistics Building 	4
135	 Marcelo Gon&ccedil;alves Marcelo J R Gon&ccedil;alves mjrg@cs wisc edu Associate researcher, Paradyn project Address Work Home 6358 Computer Sciences Department 4817 Sheboygan Av , Apt 316 1210 West Dayton Street Madison WI 53705 Madison WI 53706 Phone: (608)278-0958 Phone: (608)262-6614 Department of Computer Sciences University of Wisconsin - Madison 	4
67	 Bolo Bolo Greetings! I'm Bolo , although my parents christened me Josef Thomas Burger when I rolled from the ways Call me bolo everyone, including my parents, does! I'm not quite sure who I am or what I do; here's the best explanation I've developed so far In many ways the question who is a person is defined by what that person does In my case, I'm a software engineer who develops semi-real-time operating systems and utilities I've been doing that for the last 5 years Before that, I was a BSD Kernel Hacker and Unix system Administrator I create things, and that's why I'm an engineer An engineer applies science to the design and construction of "things", and that's what I do You can't really call me a scientist, though I have a Computer Sciences degree I'm more of a Mad Scientist !!! The guy who pays me, David DeWitt , (who is a scientist) shudders at my methodology On the other hand, I'm right most of the time It works for me, eh When I'm not designing, architecting, and implementing new operating system type things, I'm often doing the same to other things Some of those other things are my FORTH system, Woodworking, Home Control, Drawing, and Brewing Beer To completely relax, try sleep -- it works wonders! But sleep is not enough, although my roommate disagrees with me Other pursuits which I enjoy are flying , reading science fiction, comic books, railroading (both prototype and model), and role playing games You may notice images of the most sublime striped creature, the Tiger in appearing throughout my WWW pages Tiger has taken me for his own William Blake's poem Tyger! Tyger! puts words to the wonder of Tiger On the Road Again In a tremendous leap of insanity :-) I've purchased a house ! The address of my new place is Josef T Burger 6301 East Gate Road Monona, WI 53716-3910 The new voice number is 608-223-0486 Boring Work Work at work drives me bananas It used to be fun, but now it's a grunge Either I've matured, or the jobs has changed over the years, perhaps some of both It seems like we get new parallel computers every other month, and I have to beat them into submission, while doing everything else under the sun, moon, and stars I'm currently working on the following projects for Dave DeWitt , a world- (in)famous database hacker! Gamma : A parallel relational database OQL : An SQL-like query interpreter for object stores Paradise A Geographic Information System implemented with Shore Shore : An object-oriented data store WiSS : The WIsconsin Storage System And whatever else needs to be done! All this, and a whole lot more , occurs at the Computer Sciences Department of the Madison Campus of the University of Wisconsin The campus is located in Madison, WI (USA) on a peninsula between two of Madison's five lakes Not so boring work In addition to my work for the UW, I also consult I don't provide solutions, but rather advice and technical expertise Helping out Internet Providers, porting software to new systems, reviving old computers, and other oddball tasks are the kinds of things I do I'd tell you to visit my web server but I haven't had time to do anything there, so it's mostly empty, except for the home pages of some friends Other activities Uwvax I operate the uwvax Usenet News and UUCP site in my free time "All the news thats fit to print", or something along those lines uwvax , a CS department computer, has been part of Usenet, UUCP, and the internet for longer than I've worked here Along the same lines, I am also the Computer Sciences Department's volunteer news master Much of that goes hand-in-hand with running uwvax However, trying to take care of 3 or 4 news readers across 5 or 6 different architectures is a trying task I don't have much time to take care of that software Organizations I am a member of the following organizations I don't always agree with what they do, but they often have a lot of good benefits, for both members and other users of their communities AOPA (the Aircraft Owners and Pilots Association) EAA (the Experimental Aircraft Association) Usenix Association Blitz-Drinking When I was in school a horde of friends and myself visited a local pub every Thursday night This place, The Essen Haus , imports beers from all over the world Slowly we worked our way through their entire selection Over the years we've developed new acquaintances, and many of them became part of our loftily-labelled Blitz Drinking Society We're rather diverse some of the members don't drink! We meet once a year at the Essen Haus during the time of Octoberfest to have a weekend of fun Chud has accumulated a short history and whatnot of this charade Bolo's Home Page Last modified: Tue Apr 2 23:31:48 CST 1996 Bolo (Josef Burger) &lt;bolo@cs wisc edu&gt; 	4
138	 Eric Hazen's Home Page Eric J Hazen Non-Professor Room 1334 Computer Sciences 1210 West Dayton St Madison, WI 53706 263-2644 I am currently working for Net Scout Services , a project of InterNIC Wait! Wait! We are not a part of Registration Services We couldn't help you with your domain name problems even if we wanted to InterNIC does a lot of neat things with all its NSF and NSI money and Net Scout is one of those things We are located in the Computer Sciences Department at the University of Wisconsin at Madison Seeing as how I could never explain what Net Scout does as elegantly as our fearless leader, Susan Calcari , check out the Net Scout web page for an official explanation I do some design and maintenance on our web site and email list, the Scout Report I also assist Pete DeVries with tech support for our 5 macs, 1 PC and 2 UNIX machines Before coming to Net Scout, I spent two and a half years at the Laboratory of Molecular Biology Most of that time I was a full time student as well At Molecular Biology, I was what we called a Technical Support Assistant/Digital Video Specialist Which meant I had to run around fixing people's broken mice and answering email questions most of the time, but when I was lucky, I got to make cool videos If you are interested in using digital video for instructional purposes, check out my Multimedia Services web page I am a graduate of the University of Wisconsin's Philosophy program , which makes me a philosopher (and a real hot commodity in this capitalist society) I also completed the requirements for the pre-med curriculum which makes me a shameless pragmatist So why am I here at the Computer Science Department Email me and we'll talk about it - It's been a while since I've had a good metaphysical discussion Here are some links that serve no practical purpose, but they make this page look more standard: My resume (not up-to-date) My multimedia page at Molecular Biology - explains how I made my animations (which have been shown all over the world and are a big hit among drosophila geneticists, I'm told ) My wonderful girlfriend, Amy's page Salon Magazine - entertaining and informative ezine created and run completely on macs Laurie Anderson's Green Room - if you have Shockwave, check out "Here" Kudon's page Link to the All-Knowing Witness - A QuickTimeVR Documentary about the plight of Bosnia's uprooted population The Billie Holiday Homepage The National Security Archives - check out the Nixon/Presley meetings ejhazen@facstaff wisc edu Last Modified 10/28/96 	4
187	 Susan Calcari's Home Page Susan Calcari Manager, Net Scout Services Computer Sciences Department University of Wisconsin - Madison scal@cs wisc edu My title is Internet Scout, and I manage Net Scout Services from the Computer Sciences Department at the University of Wisconsin-Madison Scout Services is a project of the InterNIC and is supported by the National Science Foundation Net Scout Services supports Internet users in the higher-education community by providing timely information about the best resources and tools on the Internet Our goal is to help researchers and educators use the Internet effectively in their work Each week we filter hundreds of items about the Internet, edit and organize the most important, and present the information in multiple usable formats Services include the Scout Report , the Scout Toolkit , Net-happenings , and coming soon the Scout Sprouts Report, a newsletter written by kids for kids Over 35,000 people receive the Scout Report each week via email, and thousands more read it on the Web The Scout Report is an annotated listing of the best new and newly discovered Internet resources and tools, and it is the only publication of its kind devoted to the research and education community The Scout Report is very selective in the items included in each issue Over 10,000 people receive Net-happenings postings every weekday, and again, thousands more read it via the Web or the newsgroup each day See the Net Scout Services page for more information on these and other services Professional Background I have been involved in nation-wide Internet projects since 1989 when I joined Merit, Inc , in Ann Arbor, the organization that managed the NSFNET backbone project from 1987-1995 I worked in the Information Services division of the project, and spent three years speaking to national and international higher-education audiences about the Internet and its resources I also developed and produced the Merit Network Seminar Series, the first national seminar series focused on the needs of Internet end-users Later I became the Director of Network Information Services for CERFnet, a respected Internet provider based in San Diego While there I co-wrote the proposal which resulted in the award of part of the InterNIC project under a 5 year cooperative agreement with the National Science Foundation (NSF) In the third year of the agreement, NSF terminated the portion of the InterNIC based in San Diego, but chose to continue the work of the Internet Scout At that time I elected to relocate to Wisconsin and requested that NSF approve the relocation of the Scout project to the Computer Sciences department at UW - Madison, to which they heartily agreed Future Plans for Scout Services At this time the Scout Services staff includes Jack Solock, Special Librarian, and myself During May the project will expand with the addition of 2 FTE, including an open System Administrator position and an open Special Librarian position On June 6 Matthew Livesey will join the staff as a Project Assistant Goals for the new staff will include expansion of the Scout Toolkit and the addition of discipline-specific services, such as Scout Reports and Web pages devoted to specific areas of study During 1996 Scout Services will also branch into one or more research areas in collaboration with InterNIC Support Services and with groups at UW-Madison and other U S campuses Potential research topics include network information discovery and retrieval (NIDR), and discipline-oriented information gathering and publication Depending on the nature of the research, additional staff will be hired and will include computer science researchers at the graduate and undergraduate levels For More Information Visit our Web site to find out more about Scout Services or to join any of our mailing lists If you are interested in applying for any of our open positions, see the online job descriptions for the System Administrator or Special Librarian and send a resume and a writing sample to the address below Or feel free to contact me via telephone or email Susan Calcari Internet Scout Computer Sciences Department University of Wisconsin - Madison 1210 W Dayton Street Rm 3379 Madison, WI 53706 scal@cs wisc edu 608 265 8042 	4
100	 Pete DeVries's Home Page Peter J DeVries Internet Tools Specialist Room 1334 Computer Sciences 1210 West Dayton St Madison, WI 53706 608-263-2622 pdevries@cs wisc edu I am the Internet Tools Specialist for InterNIC Net Scout What this means is that I read everything about Internet technology, try to make sense of it and then write overview articles for the Net Scout Toolkit The great thing is that I read everything and think about it anyway, so it was rather foolish for them to pay me to do this (But don't tell them!) Eric Hazen and I also provide most of the technical and Webmaster services for the Net Scout group, although we do get a lot of excellent help from the Computer Systems Lab (CSL) and the folks at InterNIC Before recently joining the Net Scout Team, I worked at the Laboratory of Molecular Biology and the Integrated Microscopy Resource (IMR) , an NIH Biomedical Resource for nearly eight years At Molecular Biology I was fortunate to co-develop with Prof Sean Carroll and his lab a technique for creating multiple label confocal images Basically these are cool looking images of developing embryos that get on a lot of journal and book covers I also developed the Molecular Biology Web site At the IMR, I was fortunate to work with Prof John White and the rest of the IMR staff While at the IMR, I developed their Web site which received 4-stars in the Magellan Internet Guide My last major project involved the co-development of a 4 Dimensional Microscope for studying how embryos develop This microscope is described in an article which appeared in the August 2nd 1996 issue of the Journal Science Here are some photos of guests of Net Scout Labs Standard Info [ Resume ] [ Related Experience ] [ Publications ] [ Presentations ] Updated: Tuesday, December 10, 1996 	4
98	 UW CS Home Page Computer Sciences Department About the Computer Sciences Department Our department was formed in 1963 and is consistently ranked as one of the top ten computer science departments in the country Faculty members have received fourteen Presidential Young Investigator awards, two Packard Fellowships, an NSF Faculty Award for Women Scientists and Engineers, a DEC Incentives for Excellence Award, three ACM doctoral dissertation awards, and three IBM Faculty Development Awards The Computer Sciences Department by area Research projects and information People in the Computer Sciences Department Courses offered Fall 1996 classes and future timetables Technical reports Computer Systems Lab (CSL) CSL's answers to frequently asked questions Computer Sciences alumni information Graduate Guidebook Undergraduate Guidebook The department's annual report CS online utilities UW-Madison local services CS-related organizations Colophon and statistics for this server Useful info Computer Sciences Department University of Wisconsin - Madison 5355a Computer Sciences and Statistics 1210 West Dayton Street Madison, WI 53706 cs@cs wisc edu / voice: 608-262-1204 / fax: 608-262-9777 www@cs wisc edu 	3
